#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace mPOS.WebAPI.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="pos")]
	public partial class posDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insert__MigrationHistory(__MigrationHistory instance);
    partial void Update__MigrationHistory(__MigrationHistory instance);
    partial void Delete__MigrationHistory(__MigrationHistory instance);
    partial void InsertTrnStockOutLine(TrnStockOutLine instance);
    partial void UpdateTrnStockOutLine(TrnStockOutLine instance);
    partial void DeleteTrnStockOutLine(TrnStockOutLine instance);
    partial void InsertAspNetRole(AspNetRole instance);
    partial void UpdateAspNetRole(AspNetRole instance);
    partial void DeleteAspNetRole(AspNetRole instance);
    partial void InsertAspNetUserClaim(AspNetUserClaim instance);
    partial void UpdateAspNetUserClaim(AspNetUserClaim instance);
    partial void DeleteAspNetUserClaim(AspNetUserClaim instance);
    partial void InsertAspNetUserLogin(AspNetUserLogin instance);
    partial void UpdateAspNetUserLogin(AspNetUserLogin instance);
    partial void DeleteAspNetUserLogin(AspNetUserLogin instance);
    partial void InsertAspNetUserRole(AspNetUserRole instance);
    partial void UpdateAspNetUserRole(AspNetUserRole instance);
    partial void DeleteAspNetUserRole(AspNetUserRole instance);
    partial void InsertAspNetUser(AspNetUser instance);
    partial void UpdateAspNetUser(AspNetUser instance);
    partial void DeleteAspNetUser(AspNetUser instance);
    partial void InsertMstAccount(MstAccount instance);
    partial void UpdateMstAccount(MstAccount instance);
    partial void DeleteMstAccount(MstAccount instance);
    partial void InsertMstCustomer(MstCustomer instance);
    partial void UpdateMstCustomer(MstCustomer instance);
    partial void DeleteMstCustomer(MstCustomer instance);
    partial void InsertMstDiscount(MstDiscount instance);
    partial void UpdateMstDiscount(MstDiscount instance);
    partial void DeleteMstDiscount(MstDiscount instance);
    partial void InsertMstDiscountItem(MstDiscountItem instance);
    partial void UpdateMstDiscountItem(MstDiscountItem instance);
    partial void DeleteMstDiscountItem(MstDiscountItem instance);
    partial void InsertMstItem(MstItem instance);
    partial void UpdateMstItem(MstItem instance);
    partial void DeleteMstItem(MstItem instance);
    partial void InsertMstItemComponent(MstItemComponent instance);
    partial void UpdateMstItemComponent(MstItemComponent instance);
    partial void DeleteMstItemComponent(MstItemComponent instance);
    partial void InsertMstItemGroup(MstItemGroup instance);
    partial void UpdateMstItemGroup(MstItemGroup instance);
    partial void DeleteMstItemGroup(MstItemGroup instance);
    partial void InsertMstItemGroupItem(MstItemGroupItem instance);
    partial void UpdateMstItemGroupItem(MstItemGroupItem instance);
    partial void DeleteMstItemGroupItem(MstItemGroupItem instance);
    partial void InsertMstItemInventory(MstItemInventory instance);
    partial void UpdateMstItemInventory(MstItemInventory instance);
    partial void DeleteMstItemInventory(MstItemInventory instance);
    partial void InsertMstItemPackage(MstItemPackage instance);
    partial void UpdateMstItemPackage(MstItemPackage instance);
    partial void DeleteMstItemPackage(MstItemPackage instance);
    partial void InsertMstItemPrice(MstItemPrice instance);
    partial void UpdateMstItemPrice(MstItemPrice instance);
    partial void DeleteMstItemPrice(MstItemPrice instance);
    partial void InsertMstPayType(MstPayType instance);
    partial void UpdateMstPayType(MstPayType instance);
    partial void DeleteMstPayType(MstPayType instance);
    partial void InsertMstPeriod(MstPeriod instance);
    partial void UpdateMstPeriod(MstPeriod instance);
    partial void DeleteMstPeriod(MstPeriod instance);
    partial void InsertMstSupplier(MstSupplier instance);
    partial void UpdateMstSupplier(MstSupplier instance);
    partial void DeleteMstSupplier(MstSupplier instance);
    partial void InsertMstTable(MstTable instance);
    partial void UpdateMstTable(MstTable instance);
    partial void DeleteMstTable(MstTable instance);
    partial void InsertMstTableGroup(MstTableGroup instance);
    partial void UpdateMstTableGroup(MstTableGroup instance);
    partial void DeleteMstTableGroup(MstTableGroup instance);
    partial void InsertMstTax(MstTax instance);
    partial void UpdateMstTax(MstTax instance);
    partial void DeleteMstTax(MstTax instance);
    partial void InsertMstTerm(MstTerm instance);
    partial void UpdateMstTerm(MstTerm instance);
    partial void DeleteMstTerm(MstTerm instance);
    partial void InsertMstTerminal(MstTerminal instance);
    partial void UpdateMstTerminal(MstTerminal instance);
    partial void DeleteMstTerminal(MstTerminal instance);
    partial void InsertMstUnit(MstUnit instance);
    partial void UpdateMstUnit(MstUnit instance);
    partial void DeleteMstUnit(MstUnit instance);
    partial void InsertMstUser(MstUser instance);
    partial void UpdateMstUser(MstUser instance);
    partial void DeleteMstUser(MstUser instance);
    partial void InsertMstUserForm(MstUserForm instance);
    partial void UpdateMstUserForm(MstUserForm instance);
    partial void DeleteMstUserForm(MstUserForm instance);
    partial void InsertSysAuditTrail(SysAuditTrail instance);
    partial void UpdateSysAuditTrail(SysAuditTrail instance);
    partial void DeleteSysAuditTrail(SysAuditTrail instance);
    partial void InsertSysForm(SysForm instance);
    partial void UpdateSysForm(SysForm instance);
    partial void DeleteSysForm(SysForm instance);
    partial void InsertSysSalesLocked(SysSalesLocked instance);
    partial void UpdateSysSalesLocked(SysSalesLocked instance);
    partial void DeleteSysSalesLocked(SysSalesLocked instance);
    partial void InsertTrnCollection(TrnCollection instance);
    partial void UpdateTrnCollection(TrnCollection instance);
    partial void DeleteTrnCollection(TrnCollection instance);
    partial void InsertTrnCollectionLine(TrnCollectionLine instance);
    partial void UpdateTrnCollectionLine(TrnCollectionLine instance);
    partial void DeleteTrnCollectionLine(TrnCollectionLine instance);
    partial void InsertTrnDebitCreditMemo(TrnDebitCreditMemo instance);
    partial void UpdateTrnDebitCreditMemo(TrnDebitCreditMemo instance);
    partial void DeleteTrnDebitCreditMemo(TrnDebitCreditMemo instance);
    partial void InsertTrnDebitCreditMemoLine(TrnDebitCreditMemoLine instance);
    partial void UpdateTrnDebitCreditMemoLine(TrnDebitCreditMemoLine instance);
    partial void DeleteTrnDebitCreditMemoLine(TrnDebitCreditMemoLine instance);
    partial void InsertTrnDisbursement(TrnDisbursement instance);
    partial void UpdateTrnDisbursement(TrnDisbursement instance);
    partial void DeleteTrnDisbursement(TrnDisbursement instance);
    partial void InsertTrnJournal(TrnJournal instance);
    partial void UpdateTrnJournal(TrnJournal instance);
    partial void DeleteTrnJournal(TrnJournal instance);
    partial void InsertTrnPurchaseOrder(TrnPurchaseOrder instance);
    partial void UpdateTrnPurchaseOrder(TrnPurchaseOrder instance);
    partial void DeleteTrnPurchaseOrder(TrnPurchaseOrder instance);
    partial void InsertTrnPurchaseOrderLine(TrnPurchaseOrderLine instance);
    partial void UpdateTrnPurchaseOrderLine(TrnPurchaseOrderLine instance);
    partial void DeleteTrnPurchaseOrderLine(TrnPurchaseOrderLine instance);
    partial void InsertTrnStockCount(TrnStockCount instance);
    partial void UpdateTrnStockCount(TrnStockCount instance);
    partial void DeleteTrnStockCount(TrnStockCount instance);
    partial void InsertTrnStockCountLine(TrnStockCountLine instance);
    partial void UpdateTrnStockCountLine(TrnStockCountLine instance);
    partial void DeleteTrnStockCountLine(TrnStockCountLine instance);
    partial void InsertTrnStockIn(TrnStockIn instance);
    partial void UpdateTrnStockIn(TrnStockIn instance);
    partial void DeleteTrnStockIn(TrnStockIn instance);
    partial void InsertTrnStockInLine(TrnStockInLine instance);
    partial void UpdateTrnStockInLine(TrnStockInLine instance);
    partial void DeleteTrnStockInLine(TrnStockInLine instance);
    partial void InsertTrnStockOut(TrnStockOut instance);
    partial void UpdateTrnStockOut(TrnStockOut instance);
    partial void DeleteTrnStockOut(TrnStockOut instance);
    partial void InsertTrnSalesLine(TrnSalesLine instance);
    partial void UpdateTrnSalesLine(TrnSalesLine instance);
    partial void DeleteTrnSalesLine(TrnSalesLine instance);
    partial void InsertTrnSale(TrnSale instance);
    partial void UpdateTrnSale(TrnSale instance);
    partial void DeleteTrnSale(TrnSale instance);
    #endregion
		
		public posDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["posConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public posDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public posDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public posDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public posDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<@__MigrationHistory> @__MigrationHistories
		{
			get
			{
				return this.GetTable<@__MigrationHistory>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockOutLine> TrnStockOutLines
		{
			get
			{
				return this.GetTable<TrnStockOutLine>();
			}
		}
		
		public System.Data.Linq.Table<AspNetRole> AspNetRoles
		{
			get
			{
				return this.GetTable<AspNetRole>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserClaim> AspNetUserClaims
		{
			get
			{
				return this.GetTable<AspNetUserClaim>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserLogin> AspNetUserLogins
		{
			get
			{
				return this.GetTable<AspNetUserLogin>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this.GetTable<AspNetUserRole>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUser> AspNetUsers
		{
			get
			{
				return this.GetTable<AspNetUser>();
			}
		}
		
		public System.Data.Linq.Table<MstAccount> MstAccounts
		{
			get
			{
				return this.GetTable<MstAccount>();
			}
		}
		
		public System.Data.Linq.Table<MstCustomer> MstCustomers
		{
			get
			{
				return this.GetTable<MstCustomer>();
			}
		}
		
		public System.Data.Linq.Table<MstDiscount> MstDiscounts
		{
			get
			{
				return this.GetTable<MstDiscount>();
			}
		}
		
		public System.Data.Linq.Table<MstDiscountItem> MstDiscountItems
		{
			get
			{
				return this.GetTable<MstDiscountItem>();
			}
		}
		
		public System.Data.Linq.Table<MstItem> MstItems
		{
			get
			{
				return this.GetTable<MstItem>();
			}
		}
		
		public System.Data.Linq.Table<MstItemComponent> MstItemComponents
		{
			get
			{
				return this.GetTable<MstItemComponent>();
			}
		}
		
		public System.Data.Linq.Table<MstItemGroup> MstItemGroups
		{
			get
			{
				return this.GetTable<MstItemGroup>();
			}
		}
		
		public System.Data.Linq.Table<MstItemGroupItem> MstItemGroupItems
		{
			get
			{
				return this.GetTable<MstItemGroupItem>();
			}
		}
		
		public System.Data.Linq.Table<MstItemInventory> MstItemInventories
		{
			get
			{
				return this.GetTable<MstItemInventory>();
			}
		}
		
		public System.Data.Linq.Table<MstItemPackage> MstItemPackages
		{
			get
			{
				return this.GetTable<MstItemPackage>();
			}
		}
		
		public System.Data.Linq.Table<MstItemPrice> MstItemPrices
		{
			get
			{
				return this.GetTable<MstItemPrice>();
			}
		}
		
		public System.Data.Linq.Table<MstPayType> MstPayTypes
		{
			get
			{
				return this.GetTable<MstPayType>();
			}
		}
		
		public System.Data.Linq.Table<MstPeriod> MstPeriods
		{
			get
			{
				return this.GetTable<MstPeriod>();
			}
		}
		
		public System.Data.Linq.Table<MstSupplier> MstSuppliers
		{
			get
			{
				return this.GetTable<MstSupplier>();
			}
		}
		
		public System.Data.Linq.Table<MstTable> MstTables
		{
			get
			{
				return this.GetTable<MstTable>();
			}
		}
		
		public System.Data.Linq.Table<MstTableGroup> MstTableGroups
		{
			get
			{
				return this.GetTable<MstTableGroup>();
			}
		}
		
		public System.Data.Linq.Table<MstTax> MstTaxes
		{
			get
			{
				return this.GetTable<MstTax>();
			}
		}
		
		public System.Data.Linq.Table<MstTerm> MstTerms
		{
			get
			{
				return this.GetTable<MstTerm>();
			}
		}
		
		public System.Data.Linq.Table<MstTerminal> MstTerminals
		{
			get
			{
				return this.GetTable<MstTerminal>();
			}
		}
		
		public System.Data.Linq.Table<MstUnit> MstUnits
		{
			get
			{
				return this.GetTable<MstUnit>();
			}
		}
		
		public System.Data.Linq.Table<MstUser> MstUsers
		{
			get
			{
				return this.GetTable<MstUser>();
			}
		}
		
		public System.Data.Linq.Table<MstUserForm> MstUserForms
		{
			get
			{
				return this.GetTable<MstUserForm>();
			}
		}
		
		public System.Data.Linq.Table<SysAuditTrail> SysAuditTrails
		{
			get
			{
				return this.GetTable<SysAuditTrail>();
			}
		}
		
		public System.Data.Linq.Table<SysForm> SysForms
		{
			get
			{
				return this.GetTable<SysForm>();
			}
		}
		
		public System.Data.Linq.Table<SysSalesLocked> SysSalesLockeds
		{
			get
			{
				return this.GetTable<SysSalesLocked>();
			}
		}
		
		public System.Data.Linq.Table<TrnCollection> TrnCollections
		{
			get
			{
				return this.GetTable<TrnCollection>();
			}
		}
		
		public System.Data.Linq.Table<TrnCollectionLine> TrnCollectionLines
		{
			get
			{
				return this.GetTable<TrnCollectionLine>();
			}
		}
		
		public System.Data.Linq.Table<TrnDebitCreditMemo> TrnDebitCreditMemos
		{
			get
			{
				return this.GetTable<TrnDebitCreditMemo>();
			}
		}
		
		public System.Data.Linq.Table<TrnDebitCreditMemoLine> TrnDebitCreditMemoLines
		{
			get
			{
				return this.GetTable<TrnDebitCreditMemoLine>();
			}
		}
		
		public System.Data.Linq.Table<TrnDisbursement> TrnDisbursements
		{
			get
			{
				return this.GetTable<TrnDisbursement>();
			}
		}
		
		public System.Data.Linq.Table<TrnJournal> TrnJournals
		{
			get
			{
				return this.GetTable<TrnJournal>();
			}
		}
		
		public System.Data.Linq.Table<TrnPurchaseOrder> TrnPurchaseOrders
		{
			get
			{
				return this.GetTable<TrnPurchaseOrder>();
			}
		}
		
		public System.Data.Linq.Table<TrnPurchaseOrderLine> TrnPurchaseOrderLines
		{
			get
			{
				return this.GetTable<TrnPurchaseOrderLine>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockCount> TrnStockCounts
		{
			get
			{
				return this.GetTable<TrnStockCount>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockCountLine> TrnStockCountLines
		{
			get
			{
				return this.GetTable<TrnStockCountLine>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockIn> TrnStockIns
		{
			get
			{
				return this.GetTable<TrnStockIn>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockInLine> TrnStockInLines
		{
			get
			{
				return this.GetTable<TrnStockInLine>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockOut> TrnStockOuts
		{
			get
			{
				return this.GetTable<TrnStockOut>();
			}
		}
		
		public System.Data.Linq.Table<TrnSalesLine> TrnSalesLines
		{
			get
			{
				return this.GetTable<TrnSalesLine>();
			}
		}
		
		public System.Data.Linq.Table<TrnSale> TrnSales
		{
			get
			{
				return this.GetTable<TrnSale>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[__MigrationHistory]")]
	public partial class @__MigrationHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MigrationId;
		
		private string _ContextKey;
		
		private System.Data.Linq.Binary _Model;
		
		private string _ProductVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMigrationIdChanging(string value);
    partial void OnMigrationIdChanged();
    partial void OnContextKeyChanging(string value);
    partial void OnContextKeyChanged();
    partial void OnModelChanging(System.Data.Linq.Binary value);
    partial void OnModelChanged();
    partial void OnProductVersionChanging(string value);
    partial void OnProductVersionChanged();
    #endregion
		
		public @__MigrationHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MigrationId", DbType="NVarChar(150) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MigrationId
		{
			get
			{
				return this._MigrationId;
			}
			set
			{
				if ((this._MigrationId != value))
				{
					this.OnMigrationIdChanging(value);
					this.SendPropertyChanging();
					this._MigrationId = value;
					this.SendPropertyChanged("MigrationId");
					this.OnMigrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContextKey", DbType="NVarChar(300) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ContextKey
		{
			get
			{
				return this._ContextKey;
			}
			set
			{
				if ((this._ContextKey != value))
				{
					this.OnContextKeyChanging(value);
					this.SendPropertyChanging();
					this._ContextKey = value;
					this.SendPropertyChanged("ContextKey");
					this.OnContextKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductVersion", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string ProductVersion
		{
			get
			{
				return this._ProductVersion;
			}
			set
			{
				if ((this._ProductVersion != value))
				{
					this.OnProductVersionChanging(value);
					this.SendPropertyChanging();
					this._ProductVersion = value;
					this.SendPropertyChanged("ProductVersion");
					this.OnProductVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockOutLine")]
	public partial class TrnStockOutLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _StockOutId;
		
		private int _ItemId;
		
		private int _UnitId;
		
		private decimal _Quantity;
		
		private decimal _Cost;
		
		private decimal _Amount;
		
		private int _AssetAccountId;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstItem> _MstItem;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<TrnStockOut> _TrnStockOut;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStockOutIdChanging(int value);
    partial void OnStockOutIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnAssetAccountIdChanging(int value);
    partial void OnAssetAccountIdChanged();
    #endregion
		
		public TrnStockOutLine()
		{
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstItem = default(EntityRef<MstItem>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._TrnStockOut = default(EntityRef<TrnStockOut>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockOutId", DbType="Int NOT NULL")]
		public int StockOutId
		{
			get
			{
				return this._StockOutId;
			}
			set
			{
				if ((this._StockOutId != value))
				{
					if (this._TrnStockOut.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStockOutIdChanging(value);
					this.SendPropertyChanging();
					this._StockOutId = value;
					this.SendPropertyChanged("StockOutId");
					this.OnStockOutIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetAccountId", DbType="Int NOT NULL")]
		public int AssetAccountId
		{
			get
			{
				return this._AssetAccountId;
			}
			set
			{
				if ((this._AssetAccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssetAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AssetAccountId = value;
					this.SendPropertyChanged("AssetAccountId");
					this.OnAssetAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnStockOutLine", Storage="_MstAccount", ThisKey="AssetAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.TrnStockOutLines.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.TrnStockOutLines.Add(this);
						this._AssetAccountId = value.Id;
					}
					else
					{
						this._AssetAccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstItem_TrnStockOutLine", Storage="_MstItem", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public MstItem MstItem
		{
			get
			{
				return this._MstItem.Entity;
			}
			set
			{
				MstItem previousValue = this._MstItem.Entity;
				if (((previousValue != value) 
							|| (this._MstItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstItem.Entity = null;
						previousValue.TrnStockOutLines.Remove(this);
					}
					this._MstItem.Entity = value;
					if ((value != null))
					{
						value.TrnStockOutLines.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(int);
					}
					this.SendPropertyChanged("MstItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockOutLine", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.TrnStockOutLines.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnStockOutLines.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockOut_TrnStockOutLine", Storage="_TrnStockOut", ThisKey="StockOutId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnStockOut TrnStockOut
		{
			get
			{
				return this._TrnStockOut.Entity;
			}
			set
			{
				TrnStockOut previousValue = this._TrnStockOut.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockOut.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockOut.Entity = null;
						previousValue.TrnStockOutLines.Remove(this);
					}
					this._TrnStockOut.Entity = value;
					if ((value != null))
					{
						value.TrnStockOutLines.Add(this);
						this._StockOutId = value.Id;
					}
					else
					{
						this._StockOutId = default(int);
					}
					this.SendPropertyChanged("TrnStockOut");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetRoles")]
	public partial class AspNetRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private EntitySet<AspNetUserRole> _AspNetUserRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public AspNetRole()
		{
			this._AspNetUserRoles = new EntitySet<AspNetUserRole>(new Action<AspNetUserRole>(this.attach_AspNetUserRoles), new Action<AspNetUserRole>(this.detach_AspNetUserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetRole_AspNetUserRole", Storage="_AspNetUserRoles", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this._AspNetUserRoles;
			}
			set
			{
				this._AspNetUserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRole = this;
		}
		
		private void detach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserClaims")]
	public partial class AspNetUserClaim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserId;
		
		private string _ClaimType;
		
		private string _ClaimValue;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnClaimTypeChanging(string value);
    partial void OnClaimTypeChanged();
    partial void OnClaimValueChanging(string value);
    partial void OnClaimValueChanged();
    #endregion
		
		public AspNetUserClaim()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimType", DbType="NVarChar(MAX)")]
		public string ClaimType
		{
			get
			{
				return this._ClaimType;
			}
			set
			{
				if ((this._ClaimType != value))
				{
					this.OnClaimTypeChanging(value);
					this.SendPropertyChanging();
					this._ClaimType = value;
					this.SendPropertyChanged("ClaimType");
					this.OnClaimTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimValue", DbType="NVarChar(MAX)")]
		public string ClaimValue
		{
			get
			{
				return this._ClaimValue;
			}
			set
			{
				if ((this._ClaimValue != value))
				{
					this.OnClaimValueChanging(value);
					this.SendPropertyChanging();
					this._ClaimValue = value;
					this.SendPropertyChanged("ClaimValue");
					this.OnClaimValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserClaim", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserClaims.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserClaims.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserLogins")]
	public partial class AspNetUserLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LoginProvider;
		
		private string _ProviderKey;
		
		private string _UserId;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginProviderChanging(string value);
    partial void OnLoginProviderChanged();
    partial void OnProviderKeyChanging(string value);
    partial void OnProviderKeyChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    #endregion
		
		public AspNetUserLogin()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginProvider", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LoginProvider
		{
			get
			{
				return this._LoginProvider;
			}
			set
			{
				if ((this._LoginProvider != value))
				{
					this.OnLoginProviderChanging(value);
					this.SendPropertyChanging();
					this._LoginProvider = value;
					this.SendPropertyChanged("LoginProvider");
					this.OnLoginProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderKey", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProviderKey
		{
			get
			{
				return this._ProviderKey;
			}
			set
			{
				if ((this._ProviderKey != value))
				{
					this.OnProviderKeyChanging(value);
					this.SendPropertyChanging();
					this._ProviderKey = value;
					this.SendPropertyChanged("ProviderKey");
					this.OnProviderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserLogin", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserLogins.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserLogins.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserRoles")]
	public partial class AspNetUserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserId;
		
		private string _RoleId;
		
		private EntityRef<AspNetRole> _AspNetRole;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    #endregion
		
		public AspNetUserRole()
		{
			this._AspNetRole = default(EntityRef<AspNetRole>);
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._AspNetRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetRole_AspNetUserRole", Storage="_AspNetRole", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetRole AspNetRole
		{
			get
			{
				return this._AspNetRole.Entity;
			}
			set
			{
				AspNetRole previousValue = this._AspNetRole.Entity;
				if (((previousValue != value) 
							|| (this._AspNetRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetRole.Entity = null;
						previousValue.AspNetUserRoles.Remove(this);
					}
					this._AspNetRole.Entity = value;
					if ((value != null))
					{
						value.AspNetUserRoles.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(string);
					}
					this.SendPropertyChanged("AspNetRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserRole", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserRoles.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserRoles.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUsers")]
	public partial class AspNetUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Email;
		
		private bool _EmailConfirmed;
		
		private string _PasswordHash;
		
		private string _SecurityStamp;
		
		private string _PhoneNumber;
		
		private bool _PhoneNumberConfirmed;
		
		private bool _TwoFactorEnabled;
		
		private System.Nullable<System.DateTime> _LockoutEndDateUtc;
		
		private bool _LockoutEnabled;
		
		private int _AccessFailedCount;
		
		private string _UserName;
		
		private EntitySet<AspNetUserClaim> _AspNetUserClaims;
		
		private EntitySet<AspNetUserLogin> _AspNetUserLogins;
		
		private EntitySet<AspNetUserRole> _AspNetUserRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEmailConfirmedChanging(bool value);
    partial void OnEmailConfirmedChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnSecurityStampChanging(string value);
    partial void OnSecurityStampChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnPhoneNumberConfirmedChanging(bool value);
    partial void OnPhoneNumberConfirmedChanged();
    partial void OnTwoFactorEnabledChanging(bool value);
    partial void OnTwoFactorEnabledChanged();
    partial void OnLockoutEndDateUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnLockoutEndDateUtcChanged();
    partial void OnLockoutEnabledChanging(bool value);
    partial void OnLockoutEnabledChanged();
    partial void OnAccessFailedCountChanging(int value);
    partial void OnAccessFailedCountChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public AspNetUser()
		{
			this._AspNetUserClaims = new EntitySet<AspNetUserClaim>(new Action<AspNetUserClaim>(this.attach_AspNetUserClaims), new Action<AspNetUserClaim>(this.detach_AspNetUserClaims));
			this._AspNetUserLogins = new EntitySet<AspNetUserLogin>(new Action<AspNetUserLogin>(this.attach_AspNetUserLogins), new Action<AspNetUserLogin>(this.detach_AspNetUserLogins));
			this._AspNetUserRoles = new EntitySet<AspNetUserRole>(new Action<AspNetUserRole>(this.attach_AspNetUserRoles), new Action<AspNetUserRole>(this.detach_AspNetUserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailConfirmed", DbType="Bit NOT NULL")]
		public bool EmailConfirmed
		{
			get
			{
				return this._EmailConfirmed;
			}
			set
			{
				if ((this._EmailConfirmed != value))
				{
					this.OnEmailConfirmedChanging(value);
					this.SendPropertyChanging();
					this._EmailConfirmed = value;
					this.SendPropertyChanged("EmailConfirmed");
					this.OnEmailConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(MAX)")]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityStamp", DbType="NVarChar(MAX)")]
		public string SecurityStamp
		{
			get
			{
				return this._SecurityStamp;
			}
			set
			{
				if ((this._SecurityStamp != value))
				{
					this.OnSecurityStampChanging(value);
					this.SendPropertyChanging();
					this._SecurityStamp = value;
					this.SendPropertyChanged("SecurityStamp");
					this.OnSecurityStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(MAX)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberConfirmed", DbType="Bit NOT NULL")]
		public bool PhoneNumberConfirmed
		{
			get
			{
				return this._PhoneNumberConfirmed;
			}
			set
			{
				if ((this._PhoneNumberConfirmed != value))
				{
					this.OnPhoneNumberConfirmedChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberConfirmed = value;
					this.SendPropertyChanged("PhoneNumberConfirmed");
					this.OnPhoneNumberConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwoFactorEnabled", DbType="Bit NOT NULL")]
		public bool TwoFactorEnabled
		{
			get
			{
				return this._TwoFactorEnabled;
			}
			set
			{
				if ((this._TwoFactorEnabled != value))
				{
					this.OnTwoFactorEnabledChanging(value);
					this.SendPropertyChanging();
					this._TwoFactorEnabled = value;
					this.SendPropertyChanged("TwoFactorEnabled");
					this.OnTwoFactorEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEndDateUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> LockoutEndDateUtc
		{
			get
			{
				return this._LockoutEndDateUtc;
			}
			set
			{
				if ((this._LockoutEndDateUtc != value))
				{
					this.OnLockoutEndDateUtcChanging(value);
					this.SendPropertyChanging();
					this._LockoutEndDateUtc = value;
					this.SendPropertyChanged("LockoutEndDateUtc");
					this.OnLockoutEndDateUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEnabled", DbType="Bit NOT NULL")]
		public bool LockoutEnabled
		{
			get
			{
				return this._LockoutEnabled;
			}
			set
			{
				if ((this._LockoutEnabled != value))
				{
					this.OnLockoutEnabledChanging(value);
					this.SendPropertyChanging();
					this._LockoutEnabled = value;
					this.SendPropertyChanged("LockoutEnabled");
					this.OnLockoutEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessFailedCount", DbType="Int NOT NULL")]
		public int AccessFailedCount
		{
			get
			{
				return this._AccessFailedCount;
			}
			set
			{
				if ((this._AccessFailedCount != value))
				{
					this.OnAccessFailedCountChanging(value);
					this.SendPropertyChanging();
					this._AccessFailedCount = value;
					this.SendPropertyChanged("AccessFailedCount");
					this.OnAccessFailedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserClaim", Storage="_AspNetUserClaims", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserClaim> AspNetUserClaims
		{
			get
			{
				return this._AspNetUserClaims;
			}
			set
			{
				this._AspNetUserClaims.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserLogin", Storage="_AspNetUserLogins", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserLogin> AspNetUserLogins
		{
			get
			{
				return this._AspNetUserLogins;
			}
			set
			{
				this._AspNetUserLogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserRole", Storage="_AspNetUserRoles", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this._AspNetUserRoles;
			}
			set
			{
				this._AspNetUserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetUserClaims(AspNetUserClaim entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserClaims(AspNetUserClaim entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_AspNetUserLogins(AspNetUserLogin entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserLogins(AspNetUserLogin entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstAccount")]
	public partial class MstAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Account;
		
		private bool _IsLocked;
		
		private string _AccountType;
		
		private EntitySet<TrnStockOutLine> _TrnStockOutLines;
		
		private EntitySet<MstCustomer> _MstCustomers;
		
		private EntitySet<MstItem> _MstItems;
		
		private EntitySet<MstItem> _MstItems1;
		
		private EntitySet<MstItem> _MstItems2;
		
		private EntitySet<MstPayType> _MstPayTypes;
		
		private EntitySet<MstSupplier> _MstSuppliers;
		
		private EntitySet<MstTax> _MstTaxes;
		
		private EntitySet<TrnCollectionLine> _TrnCollectionLines;
		
		private EntitySet<TrnDebitCreditMemoLine> _TrnDebitCreditMemoLines;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntitySet<TrnStockInLine> _TrnStockInLines;
		
		private EntitySet<TrnStockOut> _TrnStockOuts;
		
		private EntitySet<TrnSalesLine> _TrnSalesLines;
		
		private EntitySet<TrnSalesLine> _TrnSalesLines1;
		
		private EntitySet<TrnSalesLine> _TrnSalesLines2;
		
		private EntitySet<TrnSalesLine> _TrnSalesLines3;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnAccountTypeChanging(string value);
    partial void OnAccountTypeChanged();
    #endregion
		
		public MstAccount()
		{
			this._TrnStockOutLines = new EntitySet<TrnStockOutLine>(new Action<TrnStockOutLine>(this.attach_TrnStockOutLines), new Action<TrnStockOutLine>(this.detach_TrnStockOutLines));
			this._MstCustomers = new EntitySet<MstCustomer>(new Action<MstCustomer>(this.attach_MstCustomers), new Action<MstCustomer>(this.detach_MstCustomers));
			this._MstItems = new EntitySet<MstItem>(new Action<MstItem>(this.attach_MstItems), new Action<MstItem>(this.detach_MstItems));
			this._MstItems1 = new EntitySet<MstItem>(new Action<MstItem>(this.attach_MstItems1), new Action<MstItem>(this.detach_MstItems1));
			this._MstItems2 = new EntitySet<MstItem>(new Action<MstItem>(this.attach_MstItems2), new Action<MstItem>(this.detach_MstItems2));
			this._MstPayTypes = new EntitySet<MstPayType>(new Action<MstPayType>(this.attach_MstPayTypes), new Action<MstPayType>(this.detach_MstPayTypes));
			this._MstSuppliers = new EntitySet<MstSupplier>(new Action<MstSupplier>(this.attach_MstSuppliers), new Action<MstSupplier>(this.detach_MstSuppliers));
			this._MstTaxes = new EntitySet<MstTax>(new Action<MstTax>(this.attach_MstTaxes), new Action<MstTax>(this.detach_MstTaxes));
			this._TrnCollectionLines = new EntitySet<TrnCollectionLine>(new Action<TrnCollectionLine>(this.attach_TrnCollectionLines), new Action<TrnCollectionLine>(this.detach_TrnCollectionLines));
			this._TrnDebitCreditMemoLines = new EntitySet<TrnDebitCreditMemoLine>(new Action<TrnDebitCreditMemoLine>(this.attach_TrnDebitCreditMemoLines), new Action<TrnDebitCreditMemoLine>(this.detach_TrnDebitCreditMemoLines));
			this._TrnDisbursements = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements), new Action<TrnDisbursement>(this.detach_TrnDisbursements));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._TrnStockInLines = new EntitySet<TrnStockInLine>(new Action<TrnStockInLine>(this.attach_TrnStockInLines), new Action<TrnStockInLine>(this.detach_TrnStockInLines));
			this._TrnStockOuts = new EntitySet<TrnStockOut>(new Action<TrnStockOut>(this.attach_TrnStockOuts), new Action<TrnStockOut>(this.detach_TrnStockOuts));
			this._TrnSalesLines = new EntitySet<TrnSalesLine>(new Action<TrnSalesLine>(this.attach_TrnSalesLines), new Action<TrnSalesLine>(this.detach_TrnSalesLines));
			this._TrnSalesLines1 = new EntitySet<TrnSalesLine>(new Action<TrnSalesLine>(this.attach_TrnSalesLines1), new Action<TrnSalesLine>(this.detach_TrnSalesLines1));
			this._TrnSalesLines2 = new EntitySet<TrnSalesLine>(new Action<TrnSalesLine>(this.attach_TrnSalesLines2), new Action<TrnSalesLine>(this.detach_TrnSalesLines2));
			this._TrnSalesLines3 = new EntitySet<TrnSalesLine>(new Action<TrnSalesLine>(this.attach_TrnSalesLines3), new Action<TrnSalesLine>(this.detach_TrnSalesLines3));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType", DbType="NVarChar(50)")]
		public string AccountType
		{
			get
			{
				return this._AccountType;
			}
			set
			{
				if ((this._AccountType != value))
				{
					this.OnAccountTypeChanging(value);
					this.SendPropertyChanging();
					this._AccountType = value;
					this.SendPropertyChanged("AccountType");
					this.OnAccountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnStockOutLine", Storage="_TrnStockOutLines", ThisKey="Id", OtherKey="AssetAccountId")]
		public EntitySet<TrnStockOutLine> TrnStockOutLines
		{
			get
			{
				return this._TrnStockOutLines;
			}
			set
			{
				this._TrnStockOutLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstCustomer", Storage="_MstCustomers", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<MstCustomer> MstCustomers
		{
			get
			{
				return this._MstCustomers;
			}
			set
			{
				this._MstCustomers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstItem", Storage="_MstItems", ThisKey="Id", OtherKey="CostAccountId")]
		public EntitySet<MstItem> MstItems
		{
			get
			{
				return this._MstItems;
			}
			set
			{
				this._MstItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstItem1", Storage="_MstItems1", ThisKey="Id", OtherKey="SalesAccountId")]
		public EntitySet<MstItem> MstItems1
		{
			get
			{
				return this._MstItems1;
			}
			set
			{
				this._MstItems1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstItem2", Storage="_MstItems2", ThisKey="Id", OtherKey="AssetAccountId")]
		public EntitySet<MstItem> MstItems2
		{
			get
			{
				return this._MstItems2;
			}
			set
			{
				this._MstItems2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstPayType", Storage="_MstPayTypes", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<MstPayType> MstPayTypes
		{
			get
			{
				return this._MstPayTypes;
			}
			set
			{
				this._MstPayTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstSupplier", Storage="_MstSuppliers", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<MstSupplier> MstSuppliers
		{
			get
			{
				return this._MstSuppliers;
			}
			set
			{
				this._MstSuppliers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstTax", Storage="_MstTaxes", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<MstTax> MstTaxes
		{
			get
			{
				return this._MstTaxes;
			}
			set
			{
				this._MstTaxes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnCollectionLine", Storage="_TrnCollectionLines", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<TrnCollectionLine> TrnCollectionLines
		{
			get
			{
				return this._TrnCollectionLines;
			}
			set
			{
				this._TrnCollectionLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnDebitCreditMemoLine", Storage="_TrnDebitCreditMemoLines", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<TrnDebitCreditMemoLine> TrnDebitCreditMemoLines
		{
			get
			{
				return this._TrnDebitCreditMemoLines;
			}
			set
			{
				this._TrnDebitCreditMemoLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnDisbursement", Storage="_TrnDisbursements", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<TrnDisbursement> TrnDisbursements
		{
			get
			{
				return this._TrnDisbursements;
			}
			set
			{
				this._TrnDisbursements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnStockInLine", Storage="_TrnStockInLines", ThisKey="Id", OtherKey="AssetAccountId")]
		public EntitySet<TrnStockInLine> TrnStockInLines
		{
			get
			{
				return this._TrnStockInLines;
			}
			set
			{
				this._TrnStockInLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnStockOut", Storage="_TrnStockOuts", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<TrnStockOut> TrnStockOuts
		{
			get
			{
				return this._TrnStockOuts;
			}
			set
			{
				this._TrnStockOuts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnSalesLine", Storage="_TrnSalesLines", ThisKey="Id", OtherKey="SalesAccountId")]
		public EntitySet<TrnSalesLine> TrnSalesLines
		{
			get
			{
				return this._TrnSalesLines;
			}
			set
			{
				this._TrnSalesLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnSalesLine1", Storage="_TrnSalesLines1", ThisKey="Id", OtherKey="AssetAccountId")]
		public EntitySet<TrnSalesLine> TrnSalesLines1
		{
			get
			{
				return this._TrnSalesLines1;
			}
			set
			{
				this._TrnSalesLines1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnSalesLine2", Storage="_TrnSalesLines2", ThisKey="Id", OtherKey="CostAccountId")]
		public EntitySet<TrnSalesLine> TrnSalesLines2
		{
			get
			{
				return this._TrnSalesLines2;
			}
			set
			{
				this._TrnSalesLines2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnSalesLine3", Storage="_TrnSalesLines3", ThisKey="Id", OtherKey="TaxAccountId")]
		public EntitySet<TrnSalesLine> TrnSalesLines3
		{
			get
			{
				return this._TrnSalesLines3;
			}
			set
			{
				this._TrnSalesLines3.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnStockOutLines(TrnStockOutLine entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_TrnStockOutLines(TrnStockOutLine entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_MstCustomers(MstCustomer entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_MstCustomers(MstCustomer entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_MstItems(MstItem entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_MstItems(MstItem entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_MstItems1(MstItem entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount1 = this;
		}
		
		private void detach_MstItems1(MstItem entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount1 = null;
		}
		
		private void attach_MstItems2(MstItem entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount2 = this;
		}
		
		private void detach_MstItems2(MstItem entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount2 = null;
		}
		
		private void attach_MstPayTypes(MstPayType entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_MstPayTypes(MstPayType entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_MstSuppliers(MstSupplier entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_MstSuppliers(MstSupplier entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_MstTaxes(MstTax entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_MstTaxes(MstTax entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_TrnDebitCreditMemoLines(TrnDebitCreditMemoLine entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_TrnDebitCreditMemoLines(TrnDebitCreditMemoLine entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_TrnStockInLines(TrnStockInLine entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_TrnStockInLines(TrnStockInLine entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_TrnSalesLines(TrnSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_TrnSalesLines(TrnSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_TrnSalesLines1(TrnSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount1 = this;
		}
		
		private void detach_TrnSalesLines1(TrnSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount1 = null;
		}
		
		private void attach_TrnSalesLines2(TrnSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount2 = this;
		}
		
		private void detach_TrnSalesLines2(TrnSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount2 = null;
		}
		
		private void attach_TrnSalesLines3(TrnSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount3 = this;
		}
		
		private void detach_TrnSalesLines3(TrnSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount3 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstCustomer")]
	public partial class MstCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Customer;
		
		private string _Address;
		
		private string _ContactPerson;
		
		private string _ContactNumber;
		
		private decimal _CreditLimit;
		
		private int _TermId;
		
		private string _TIN;
		
		private bool _WithReward;
		
		private string _RewardNumber;
		
		private decimal _RewardConversion;
		
		private int _AccountId;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private bool _IsLocked;
		
		private EntitySet<TrnCollection> _TrnCollections;
		
		private EntitySet<TrnSale> _TrnSales;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstTerm> _MstTerm;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactPersonChanging(string value);
    partial void OnContactPersonChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnCreditLimitChanging(decimal value);
    partial void OnCreditLimitChanged();
    partial void OnTermIdChanging(int value);
    partial void OnTermIdChanged();
    partial void OnTINChanging(string value);
    partial void OnTINChanged();
    partial void OnWithRewardChanging(bool value);
    partial void OnWithRewardChanged();
    partial void OnRewardNumberChanging(string value);
    partial void OnRewardNumberChanged();
    partial void OnRewardConversionChanging(decimal value);
    partial void OnRewardConversionChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    #endregion
		
		public MstCustomer()
		{
			this._TrnCollections = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections), new Action<TrnCollection>(this.detach_TrnCollections));
			this._TrnSales = new EntitySet<TrnSale>(new Action<TrnSale>(this.attach_TrnSales), new Action<TrnSale>(this.detach_TrnSales));
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstTerm = default(EntityRef<MstTerm>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPerson", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactPerson
		{
			get
			{
				return this._ContactPerson;
			}
			set
			{
				if ((this._ContactPerson != value))
				{
					this.OnContactPersonChanging(value);
					this.SendPropertyChanging();
					this._ContactPerson = value;
					this.SendPropertyChanged("ContactPerson");
					this.OnContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditLimit", DbType="Decimal(18,5) NOT NULL")]
		public decimal CreditLimit
		{
			get
			{
				return this._CreditLimit;
			}
			set
			{
				if ((this._CreditLimit != value))
				{
					this.OnCreditLimitChanging(value);
					this.SendPropertyChanging();
					this._CreditLimit = value;
					this.SendPropertyChanged("CreditLimit");
					this.OnCreditLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="Int NOT NULL")]
		public int TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._MstTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TIN
		{
			get
			{
				return this._TIN;
			}
			set
			{
				if ((this._TIN != value))
				{
					this.OnTINChanging(value);
					this.SendPropertyChanging();
					this._TIN = value;
					this.SendPropertyChanged("TIN");
					this.OnTINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithReward", DbType="Bit NOT NULL")]
		public bool WithReward
		{
			get
			{
				return this._WithReward;
			}
			set
			{
				if ((this._WithReward != value))
				{
					this.OnWithRewardChanging(value);
					this.SendPropertyChanging();
					this._WithReward = value;
					this.SendPropertyChanged("WithReward");
					this.OnWithRewardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RewardNumber", DbType="NVarChar(50)")]
		public string RewardNumber
		{
			get
			{
				return this._RewardNumber;
			}
			set
			{
				if ((this._RewardNumber != value))
				{
					this.OnRewardNumberChanging(value);
					this.SendPropertyChanging();
					this._RewardNumber = value;
					this.SendPropertyChanged("RewardNumber");
					this.OnRewardNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RewardConversion", DbType="Decimal(18,5) NOT NULL")]
		public decimal RewardConversion
		{
			get
			{
				return this._RewardConversion;
			}
			set
			{
				if ((this._RewardConversion != value))
				{
					this.OnRewardConversionChanging(value);
					this.SendPropertyChanging();
					this._RewardConversion = value;
					this.SendPropertyChanged("RewardConversion");
					this.OnRewardConversionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCustomer_TrnCollection", Storage="_TrnCollections", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<TrnCollection> TrnCollections
		{
			get
			{
				return this._TrnCollections;
			}
			set
			{
				this._TrnCollections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCustomer_TrnSale", Storage="_TrnSales", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<TrnSale> TrnSales
		{
			get
			{
				return this._TrnSales;
			}
			set
			{
				this._TrnSales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstCustomer", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.MstCustomers.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.MstCustomers.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_MstCustomer", Storage="_MstTerm", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public MstTerm MstTerm
		{
			get
			{
				return this._MstTerm.Entity;
			}
			set
			{
				MstTerm previousValue = this._MstTerm.Entity;
				if (((previousValue != value) 
							|| (this._MstTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTerm.Entity = null;
						previousValue.MstCustomers.Remove(this);
					}
					this._MstTerm.Entity = value;
					if ((value != null))
					{
						value.MstCustomers.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(int);
					}
					this.SendPropertyChanged("MstTerm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCustomer", Storage="_MstUser", ThisKey="EntryUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstCustomers.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstCustomers.Add(this);
						this._EntryUserId = value.Id;
					}
					else
					{
						this._EntryUserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCustomer1", Storage="_MstUser1", ThisKey="UpdateUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstCustomers1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstCustomers1.Add(this);
						this._UpdateUserId = value.Id;
					}
					else
					{
						this._UpdateUserId = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstCustomer = this;
		}
		
		private void detach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstCustomer = null;
		}
		
		private void attach_TrnSales(TrnSale entity)
		{
			this.SendPropertyChanging();
			entity.MstCustomer = this;
		}
		
		private void detach_TrnSales(TrnSale entity)
		{
			this.SendPropertyChanging();
			entity.MstCustomer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstDiscount")]
	public partial class MstDiscount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Discount;
		
		private decimal _DiscountRate;
		
		private bool _IsVatExempt;
		
		private bool _IsDateScheduled;
		
		private System.Nullable<System.DateTime> _DateStart;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private bool _IsTimeScheduled;
		
		private System.Nullable<System.DateTime> _TimeStart;
		
		private System.Nullable<System.DateTime> _TimeEnd;
		
		private bool _IsDayScheduled;
		
		private bool _DayMon;
		
		private bool _DayTue;
		
		private bool _DayWed;
		
		private bool _DayThu;
		
		private bool _DayFri;
		
		private bool _DaySat;
		
		private bool _DaySun;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private bool _IsLocked;
		
		private EntitySet<MstDiscountItem> _MstDiscountItems;
		
		private EntitySet<TrnSalesLine> _TrnSalesLines;
		
		private EntitySet<TrnSale> _TrnSales;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDiscountChanging(string value);
    partial void OnDiscountChanged();
    partial void OnDiscountRateChanging(decimal value);
    partial void OnDiscountRateChanged();
    partial void OnIsVatExemptChanging(bool value);
    partial void OnIsVatExemptChanged();
    partial void OnIsDateScheduledChanging(bool value);
    partial void OnIsDateScheduledChanged();
    partial void OnDateStartChanging(System.Nullable<System.DateTime> value);
    partial void OnDateStartChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnIsTimeScheduledChanging(bool value);
    partial void OnIsTimeScheduledChanged();
    partial void OnTimeStartChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStartChanged();
    partial void OnTimeEndChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeEndChanged();
    partial void OnIsDayScheduledChanging(bool value);
    partial void OnIsDayScheduledChanged();
    partial void OnDayMonChanging(bool value);
    partial void OnDayMonChanged();
    partial void OnDayTueChanging(bool value);
    partial void OnDayTueChanged();
    partial void OnDayWedChanging(bool value);
    partial void OnDayWedChanged();
    partial void OnDayThuChanging(bool value);
    partial void OnDayThuChanged();
    partial void OnDayFriChanging(bool value);
    partial void OnDayFriChanged();
    partial void OnDaySatChanging(bool value);
    partial void OnDaySatChanged();
    partial void OnDaySunChanging(bool value);
    partial void OnDaySunChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    #endregion
		
		public MstDiscount()
		{
			this._MstDiscountItems = new EntitySet<MstDiscountItem>(new Action<MstDiscountItem>(this.attach_MstDiscountItems), new Action<MstDiscountItem>(this.detach_MstDiscountItems));
			this._TrnSalesLines = new EntitySet<TrnSalesLine>(new Action<TrnSalesLine>(this.attach_TrnSalesLines), new Action<TrnSalesLine>(this.detach_TrnSalesLines));
			this._TrnSales = new EntitySet<TrnSale>(new Action<TrnSale>(this.attach_TrnSales), new Action<TrnSale>(this.detach_TrnSales));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal DiscountRate
		{
			get
			{
				return this._DiscountRate;
			}
			set
			{
				if ((this._DiscountRate != value))
				{
					this.OnDiscountRateChanging(value);
					this.SendPropertyChanging();
					this._DiscountRate = value;
					this.SendPropertyChanged("DiscountRate");
					this.OnDiscountRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVatExempt", DbType="Bit NOT NULL")]
		public bool IsVatExempt
		{
			get
			{
				return this._IsVatExempt;
			}
			set
			{
				if ((this._IsVatExempt != value))
				{
					this.OnIsVatExemptChanging(value);
					this.SendPropertyChanging();
					this._IsVatExempt = value;
					this.SendPropertyChanged("IsVatExempt");
					this.OnIsVatExemptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDateScheduled", DbType="Bit NOT NULL")]
		public bool IsDateScheduled
		{
			get
			{
				return this._IsDateScheduled;
			}
			set
			{
				if ((this._IsDateScheduled != value))
				{
					this.OnIsDateScheduledChanging(value);
					this.SendPropertyChanging();
					this._IsDateScheduled = value;
					this.SendPropertyChanged("IsDateScheduled");
					this.OnIsDateScheduledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateStart
		{
			get
			{
				return this._DateStart;
			}
			set
			{
				if ((this._DateStart != value))
				{
					this.OnDateStartChanging(value);
					this.SendPropertyChanging();
					this._DateStart = value;
					this.SendPropertyChanged("DateStart");
					this.OnDateStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTimeScheduled", DbType="Bit NOT NULL")]
		public bool IsTimeScheduled
		{
			get
			{
				return this._IsTimeScheduled;
			}
			set
			{
				if ((this._IsTimeScheduled != value))
				{
					this.OnIsTimeScheduledChanging(value);
					this.SendPropertyChanging();
					this._IsTimeScheduled = value;
					this.SendPropertyChanged("IsTimeScheduled");
					this.OnIsTimeScheduledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStart
		{
			get
			{
				return this._TimeStart;
			}
			set
			{
				if ((this._TimeStart != value))
				{
					this.OnTimeStartChanging(value);
					this.SendPropertyChanging();
					this._TimeStart = value;
					this.SendPropertyChanged("TimeStart");
					this.OnTimeStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeEnd
		{
			get
			{
				return this._TimeEnd;
			}
			set
			{
				if ((this._TimeEnd != value))
				{
					this.OnTimeEndChanging(value);
					this.SendPropertyChanging();
					this._TimeEnd = value;
					this.SendPropertyChanged("TimeEnd");
					this.OnTimeEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDayScheduled", DbType="Bit NOT NULL")]
		public bool IsDayScheduled
		{
			get
			{
				return this._IsDayScheduled;
			}
			set
			{
				if ((this._IsDayScheduled != value))
				{
					this.OnIsDayScheduledChanging(value);
					this.SendPropertyChanging();
					this._IsDayScheduled = value;
					this.SendPropertyChanged("IsDayScheduled");
					this.OnIsDayScheduledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayMon", DbType="Bit NOT NULL")]
		public bool DayMon
		{
			get
			{
				return this._DayMon;
			}
			set
			{
				if ((this._DayMon != value))
				{
					this.OnDayMonChanging(value);
					this.SendPropertyChanging();
					this._DayMon = value;
					this.SendPropertyChanged("DayMon");
					this.OnDayMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayTue", DbType="Bit NOT NULL")]
		public bool DayTue
		{
			get
			{
				return this._DayTue;
			}
			set
			{
				if ((this._DayTue != value))
				{
					this.OnDayTueChanging(value);
					this.SendPropertyChanging();
					this._DayTue = value;
					this.SendPropertyChanged("DayTue");
					this.OnDayTueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayWed", DbType="Bit NOT NULL")]
		public bool DayWed
		{
			get
			{
				return this._DayWed;
			}
			set
			{
				if ((this._DayWed != value))
				{
					this.OnDayWedChanging(value);
					this.SendPropertyChanging();
					this._DayWed = value;
					this.SendPropertyChanged("DayWed");
					this.OnDayWedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayThu", DbType="Bit NOT NULL")]
		public bool DayThu
		{
			get
			{
				return this._DayThu;
			}
			set
			{
				if ((this._DayThu != value))
				{
					this.OnDayThuChanging(value);
					this.SendPropertyChanging();
					this._DayThu = value;
					this.SendPropertyChanged("DayThu");
					this.OnDayThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayFri", DbType="Bit NOT NULL")]
		public bool DayFri
		{
			get
			{
				return this._DayFri;
			}
			set
			{
				if ((this._DayFri != value))
				{
					this.OnDayFriChanging(value);
					this.SendPropertyChanging();
					this._DayFri = value;
					this.SendPropertyChanged("DayFri");
					this.OnDayFriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaySat", DbType="Bit NOT NULL")]
		public bool DaySat
		{
			get
			{
				return this._DaySat;
			}
			set
			{
				if ((this._DaySat != value))
				{
					this.OnDaySatChanging(value);
					this.SendPropertyChanging();
					this._DaySat = value;
					this.SendPropertyChanged("DaySat");
					this.OnDaySatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaySun", DbType="Bit NOT NULL")]
		public bool DaySun
		{
			get
			{
				return this._DaySun;
			}
			set
			{
				if ((this._DaySun != value))
				{
					this.OnDaySunChanging(value);
					this.SendPropertyChanging();
					this._DaySun = value;
					this.SendPropertyChanged("DaySun");
					this.OnDaySunChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstDiscount_MstDiscountItem", Storage="_MstDiscountItems", ThisKey="Id", OtherKey="DiscountId")]
		public EntitySet<MstDiscountItem> MstDiscountItems
		{
			get
			{
				return this._MstDiscountItems;
			}
			set
			{
				this._MstDiscountItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstDiscount_TrnSalesLine", Storage="_TrnSalesLines", ThisKey="Id", OtherKey="DiscountId")]
		public EntitySet<TrnSalesLine> TrnSalesLines
		{
			get
			{
				return this._TrnSalesLines;
			}
			set
			{
				this._TrnSalesLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstDiscount_TrnSale", Storage="_TrnSales", ThisKey="Id", OtherKey="DiscountId")]
		public EntitySet<TrnSale> TrnSales
		{
			get
			{
				return this._TrnSales;
			}
			set
			{
				this._TrnSales.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstDiscountItems(MstDiscountItem entity)
		{
			this.SendPropertyChanging();
			entity.MstDiscount = this;
		}
		
		private void detach_MstDiscountItems(MstDiscountItem entity)
		{
			this.SendPropertyChanging();
			entity.MstDiscount = null;
		}
		
		private void attach_TrnSalesLines(TrnSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.MstDiscount = this;
		}
		
		private void detach_TrnSalesLines(TrnSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.MstDiscount = null;
		}
		
		private void attach_TrnSales(TrnSale entity)
		{
			this.SendPropertyChanging();
			entity.MstDiscount = this;
		}
		
		private void detach_TrnSales(TrnSale entity)
		{
			this.SendPropertyChanging();
			entity.MstDiscount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstDiscountItem")]
	public partial class MstDiscountItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _DiscountId;
		
		private int _ItemId;
		
		private EntityRef<MstDiscount> _MstDiscount;
		
		private EntityRef<MstItem> _MstItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDiscountIdChanging(int value);
    partial void OnDiscountIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    #endregion
		
		public MstDiscountItem()
		{
			this._MstDiscount = default(EntityRef<MstDiscount>);
			this._MstItem = default(EntityRef<MstItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountId", DbType="Int NOT NULL")]
		public int DiscountId
		{
			get
			{
				return this._DiscountId;
			}
			set
			{
				if ((this._DiscountId != value))
				{
					if (this._MstDiscount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscountIdChanging(value);
					this.SendPropertyChanging();
					this._DiscountId = value;
					this.SendPropertyChanged("DiscountId");
					this.OnDiscountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstDiscount_MstDiscountItem", Storage="_MstDiscount", ThisKey="DiscountId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstDiscount MstDiscount
		{
			get
			{
				return this._MstDiscount.Entity;
			}
			set
			{
				MstDiscount previousValue = this._MstDiscount.Entity;
				if (((previousValue != value) 
							|| (this._MstDiscount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstDiscount.Entity = null;
						previousValue.MstDiscountItems.Remove(this);
					}
					this._MstDiscount.Entity = value;
					if ((value != null))
					{
						value.MstDiscountItems.Add(this);
						this._DiscountId = value.Id;
					}
					else
					{
						this._DiscountId = default(int);
					}
					this.SendPropertyChanged("MstDiscount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstItem_MstDiscountItem", Storage="_MstItem", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstItem MstItem
		{
			get
			{
				return this._MstItem.Entity;
			}
			set
			{
				MstItem previousValue = this._MstItem.Entity;
				if (((previousValue != value) 
							|| (this._MstItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstItem.Entity = null;
						previousValue.MstDiscountItems.Remove(this);
					}
					this._MstItem.Entity = value;
					if ((value != null))
					{
						value.MstDiscountItems.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(int);
					}
					this.SendPropertyChanged("MstItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstItem")]
	public partial class MstItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ItemCode;
		
		private string _BarCode;
		
		private string _ItemDescription;
		
		private string _Alias;
		
		private string _GenericName;
		
		private string _Category;
		
		private int _SalesAccountId;
		
		private int _AssetAccountId;
		
		private int _CostAccountId;
		
		private int _InTaxId;
		
		private int _OutTaxId;
		
		private int _UnitId;
		
		private int _DefaultSupplierId;
		
		private decimal _Cost;
		
		private decimal _MarkUp;
		
		private decimal _Price;
		
		private string _ImagePath;
		
		private decimal _ReorderQuantity;
		
		private decimal _OnhandQuantity;
		
		private bool _IsInventory;
		
		private System.Nullable<System.DateTime> _ExpiryDate;
		
		private string _LotNumber;
		
		private string _Remarks;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private bool _IsLocked;
		
		private string _DefaultKitchenReport;
		
		private bool _IsPackage;
		
		private EntitySet<TrnStockOutLine> _TrnStockOutLines;
		
		private EntitySet<MstDiscountItem> _MstDiscountItems;
		
		private EntitySet<MstItemComponent> _MstItemComponents;
		
		private EntitySet<MstItemComponent> _MstItemComponents1;
		
		private EntitySet<MstItemGroupItem> _MstItemGroupItems;
		
		private EntitySet<MstItemInventory> _MstItemInventories;
		
		private EntitySet<MstItemPackage> _MstItemPackages;
		
		private EntitySet<MstItemPackage> _MstItemPackages1;
		
		private EntitySet<MstItemPrice> _MstItemPrices;
		
		private EntitySet<TrnStockCountLine> _TrnStockCountLines;
		
		private EntitySet<TrnStockInLine> _TrnStockInLines;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstAccount> _MstAccount1;
		
		private EntityRef<MstAccount> _MstAccount2;
		
		private EntityRef<MstSupplier> _MstSupplier;
		
		private EntityRef<MstTax> _MstTax;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnItemCodeChanging(string value);
    partial void OnItemCodeChanged();
    partial void OnBarCodeChanging(string value);
    partial void OnBarCodeChanged();
    partial void OnItemDescriptionChanging(string value);
    partial void OnItemDescriptionChanged();
    partial void OnAliasChanging(string value);
    partial void OnAliasChanged();
    partial void OnGenericNameChanging(string value);
    partial void OnGenericNameChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnSalesAccountIdChanging(int value);
    partial void OnSalesAccountIdChanged();
    partial void OnAssetAccountIdChanging(int value);
    partial void OnAssetAccountIdChanged();
    partial void OnCostAccountIdChanging(int value);
    partial void OnCostAccountIdChanged();
    partial void OnInTaxIdChanging(int value);
    partial void OnInTaxIdChanged();
    partial void OnOutTaxIdChanging(int value);
    partial void OnOutTaxIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnDefaultSupplierIdChanging(int value);
    partial void OnDefaultSupplierIdChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnMarkUpChanging(decimal value);
    partial void OnMarkUpChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnImagePathChanging(string value);
    partial void OnImagePathChanged();
    partial void OnReorderQuantityChanging(decimal value);
    partial void OnReorderQuantityChanged();
    partial void OnOnhandQuantityChanging(decimal value);
    partial void OnOnhandQuantityChanged();
    partial void OnIsInventoryChanging(bool value);
    partial void OnIsInventoryChanged();
    partial void OnExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiryDateChanged();
    partial void OnLotNumberChanging(string value);
    partial void OnLotNumberChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnDefaultKitchenReportChanging(string value);
    partial void OnDefaultKitchenReportChanged();
    partial void OnIsPackageChanging(bool value);
    partial void OnIsPackageChanged();
    #endregion
		
		public MstItem()
		{
			this._TrnStockOutLines = new EntitySet<TrnStockOutLine>(new Action<TrnStockOutLine>(this.attach_TrnStockOutLines), new Action<TrnStockOutLine>(this.detach_TrnStockOutLines));
			this._MstDiscountItems = new EntitySet<MstDiscountItem>(new Action<MstDiscountItem>(this.attach_MstDiscountItems), new Action<MstDiscountItem>(this.detach_MstDiscountItems));
			this._MstItemComponents = new EntitySet<MstItemComponent>(new Action<MstItemComponent>(this.attach_MstItemComponents), new Action<MstItemComponent>(this.detach_MstItemComponents));
			this._MstItemComponents1 = new EntitySet<MstItemComponent>(new Action<MstItemComponent>(this.attach_MstItemComponents1), new Action<MstItemComponent>(this.detach_MstItemComponents1));
			this._MstItemGroupItems = new EntitySet<MstItemGroupItem>(new Action<MstItemGroupItem>(this.attach_MstItemGroupItems), new Action<MstItemGroupItem>(this.detach_MstItemGroupItems));
			this._MstItemInventories = new EntitySet<MstItemInventory>(new Action<MstItemInventory>(this.attach_MstItemInventories), new Action<MstItemInventory>(this.detach_MstItemInventories));
			this._MstItemPackages = new EntitySet<MstItemPackage>(new Action<MstItemPackage>(this.attach_MstItemPackages), new Action<MstItemPackage>(this.detach_MstItemPackages));
			this._MstItemPackages1 = new EntitySet<MstItemPackage>(new Action<MstItemPackage>(this.attach_MstItemPackages1), new Action<MstItemPackage>(this.detach_MstItemPackages1));
			this._MstItemPrices = new EntitySet<MstItemPrice>(new Action<MstItemPrice>(this.attach_MstItemPrices), new Action<MstItemPrice>(this.detach_MstItemPrices));
			this._TrnStockCountLines = new EntitySet<TrnStockCountLine>(new Action<TrnStockCountLine>(this.attach_TrnStockCountLines), new Action<TrnStockCountLine>(this.detach_TrnStockCountLines));
			this._TrnStockInLines = new EntitySet<TrnStockInLine>(new Action<TrnStockInLine>(this.attach_TrnStockInLines), new Action<TrnStockInLine>(this.detach_TrnStockInLines));
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstAccount1 = default(EntityRef<MstAccount>);
			this._MstAccount2 = default(EntityRef<MstAccount>);
			this._MstSupplier = default(EntityRef<MstSupplier>);
			this._MstTax = default(EntityRef<MstTax>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BarCode
		{
			get
			{
				return this._BarCode;
			}
			set
			{
				if ((this._BarCode != value))
				{
					this.OnBarCodeChanging(value);
					this.SendPropertyChanging();
					this._BarCode = value;
					this.SendPropertyChanged("BarCode");
					this.OnBarCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDescription", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ItemDescription
		{
			get
			{
				return this._ItemDescription;
			}
			set
			{
				if ((this._ItemDescription != value))
				{
					this.OnItemDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ItemDescription = value;
					this.SendPropertyChanged("ItemDescription");
					this.OnItemDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alias", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Alias
		{
			get
			{
				return this._Alias;
			}
			set
			{
				if ((this._Alias != value))
				{
					this.OnAliasChanging(value);
					this.SendPropertyChanging();
					this._Alias = value;
					this.SendPropertyChanged("Alias");
					this.OnAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenericName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string GenericName
		{
			get
			{
				return this._GenericName;
			}
			set
			{
				if ((this._GenericName != value))
				{
					this.OnGenericNameChanging(value);
					this.SendPropertyChanging();
					this._GenericName = value;
					this.SendPropertyChanged("GenericName");
					this.OnGenericNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesAccountId", DbType="Int NOT NULL")]
		public int SalesAccountId
		{
			get
			{
				return this._SalesAccountId;
			}
			set
			{
				if ((this._SalesAccountId != value))
				{
					if (this._MstAccount1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesAccountIdChanging(value);
					this.SendPropertyChanging();
					this._SalesAccountId = value;
					this.SendPropertyChanged("SalesAccountId");
					this.OnSalesAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetAccountId", DbType="Int NOT NULL")]
		public int AssetAccountId
		{
			get
			{
				return this._AssetAccountId;
			}
			set
			{
				if ((this._AssetAccountId != value))
				{
					if (this._MstAccount2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssetAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AssetAccountId = value;
					this.SendPropertyChanged("AssetAccountId");
					this.OnAssetAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostAccountId", DbType="Int NOT NULL")]
		public int CostAccountId
		{
			get
			{
				return this._CostAccountId;
			}
			set
			{
				if ((this._CostAccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostAccountIdChanging(value);
					this.SendPropertyChanging();
					this._CostAccountId = value;
					this.SendPropertyChanged("CostAccountId");
					this.OnCostAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InTaxId", DbType="Int NOT NULL")]
		public int InTaxId
		{
			get
			{
				return this._InTaxId;
			}
			set
			{
				if ((this._InTaxId != value))
				{
					if (this._MstTax.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInTaxIdChanging(value);
					this.SendPropertyChanging();
					this._InTaxId = value;
					this.SendPropertyChanged("InTaxId");
					this.OnInTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutTaxId", DbType="Int NOT NULL")]
		public int OutTaxId
		{
			get
			{
				return this._OutTaxId;
			}
			set
			{
				if ((this._OutTaxId != value))
				{
					this.OnOutTaxIdChanging(value);
					this.SendPropertyChanging();
					this._OutTaxId = value;
					this.SendPropertyChanged("OutTaxId");
					this.OnOutTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultSupplierId", DbType="Int NOT NULL")]
		public int DefaultSupplierId
		{
			get
			{
				return this._DefaultSupplierId;
			}
			set
			{
				if ((this._DefaultSupplierId != value))
				{
					if (this._MstSupplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDefaultSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._DefaultSupplierId = value;
					this.SendPropertyChanged("DefaultSupplierId");
					this.OnDefaultSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkUp", DbType="Decimal(18,5) NOT NULL")]
		public decimal MarkUp
		{
			get
			{
				return this._MarkUp;
			}
			set
			{
				if ((this._MarkUp != value))
				{
					this.OnMarkUpChanging(value);
					this.SendPropertyChanging();
					this._MarkUp = value;
					this.SendPropertyChanged("MarkUp");
					this.OnMarkUpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,5) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this.OnImagePathChanging(value);
					this.SendPropertyChanging();
					this._ImagePath = value;
					this.SendPropertyChanged("ImagePath");
					this.OnImagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReorderQuantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal ReorderQuantity
		{
			get
			{
				return this._ReorderQuantity;
			}
			set
			{
				if ((this._ReorderQuantity != value))
				{
					this.OnReorderQuantityChanging(value);
					this.SendPropertyChanging();
					this._ReorderQuantity = value;
					this.SendPropertyChanged("ReorderQuantity");
					this.OnReorderQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnhandQuantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal OnhandQuantity
		{
			get
			{
				return this._OnhandQuantity;
			}
			set
			{
				if ((this._OnhandQuantity != value))
				{
					this.OnOnhandQuantityChanging(value);
					this.SendPropertyChanging();
					this._OnhandQuantity = value;
					this.SendPropertyChanged("OnhandQuantity");
					this.OnOnhandQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInventory", DbType="Bit NOT NULL")]
		public bool IsInventory
		{
			get
			{
				return this._IsInventory;
			}
			set
			{
				if ((this._IsInventory != value))
				{
					this.OnIsInventoryChanging(value);
					this.SendPropertyChanging();
					this._IsInventory = value;
					this.SendPropertyChanged("IsInventory");
					this.OnIsInventoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNumber", DbType="NVarChar(50)")]
		public string LotNumber
		{
			get
			{
				return this._LotNumber;
			}
			set
			{
				if ((this._LotNumber != value))
				{
					this.OnLotNumberChanging(value);
					this.SendPropertyChanging();
					this._LotNumber = value;
					this.SendPropertyChanged("LotNumber");
					this.OnLotNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(255)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultKitchenReport", DbType="VarChar(50)")]
		public string DefaultKitchenReport
		{
			get
			{
				return this._DefaultKitchenReport;
			}
			set
			{
				if ((this._DefaultKitchenReport != value))
				{
					this.OnDefaultKitchenReportChanging(value);
					this.SendPropertyChanging();
					this._DefaultKitchenReport = value;
					this.SendPropertyChanged("DefaultKitchenReport");
					this.OnDefaultKitchenReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPackage", DbType="Bit NOT NULL")]
		public bool IsPackage
		{
			get
			{
				return this._IsPackage;
			}
			set
			{
				if ((this._IsPackage != value))
				{
					this.OnIsPackageChanging(value);
					this.SendPropertyChanging();
					this._IsPackage = value;
					this.SendPropertyChanged("IsPackage");
					this.OnIsPackageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstItem_TrnStockOutLine", Storage="_TrnStockOutLines", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<TrnStockOutLine> TrnStockOutLines
		{
			get
			{
				return this._TrnStockOutLines;
			}
			set
			{
				this._TrnStockOutLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstItem_MstDiscountItem", Storage="_MstDiscountItems", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<MstDiscountItem> MstDiscountItems
		{
			get
			{
				return this._MstDiscountItems;
			}
			set
			{
				this._MstDiscountItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstItem_MstItemComponent", Storage="_MstItemComponents", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<MstItemComponent> MstItemComponents
		{
			get
			{
				return this._MstItemComponents;
			}
			set
			{
				this._MstItemComponents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstItem_MstItemComponent1", Storage="_MstItemComponents1", ThisKey="Id", OtherKey="ComponentItemId")]
		public EntitySet<MstItemComponent> MstItemComponents1
		{
			get
			{
				return this._MstItemComponents1;
			}
			set
			{
				this._MstItemComponents1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstItem_MstItemGroupItem", Storage="_MstItemGroupItems", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<MstItemGroupItem> MstItemGroupItems
		{
			get
			{
				return this._MstItemGroupItems;
			}
			set
			{
				this._MstItemGroupItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstItem_MstItemInventory", Storage="_MstItemInventories", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<MstItemInventory> MstItemInventories
		{
			get
			{
				return this._MstItemInventories;
			}
			set
			{
				this._MstItemInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstItem_MstItemPackage", Storage="_MstItemPackages", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<MstItemPackage> MstItemPackages
		{
			get
			{
				return this._MstItemPackages;
			}
			set
			{
				this._MstItemPackages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstItem_MstItemPackage1", Storage="_MstItemPackages1", ThisKey="Id", OtherKey="PackageItemId")]
		public EntitySet<MstItemPackage> MstItemPackages1
		{
			get
			{
				return this._MstItemPackages1;
			}
			set
			{
				this._MstItemPackages1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstItem_MstItemPrice", Storage="_MstItemPrices", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<MstItemPrice> MstItemPrices
		{
			get
			{
				return this._MstItemPrices;
			}
			set
			{
				this._MstItemPrices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstItem_TrnStockCountLine", Storage="_TrnStockCountLines", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<TrnStockCountLine> TrnStockCountLines
		{
			get
			{
				return this._TrnStockCountLines;
			}
			set
			{
				this._TrnStockCountLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstItem_TrnStockInLine", Storage="_TrnStockInLines", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<TrnStockInLine> TrnStockInLines
		{
			get
			{
				return this._TrnStockInLines;
			}
			set
			{
				this._TrnStockInLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstItem", Storage="_MstAccount", ThisKey="CostAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.MstItems.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.MstItems.Add(this);
						this._CostAccountId = value.Id;
					}
					else
					{
						this._CostAccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstItem1", Storage="_MstAccount1", ThisKey="SalesAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount1
		{
			get
			{
				return this._MstAccount1.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount1.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount1.Entity = null;
						previousValue.MstItems1.Remove(this);
					}
					this._MstAccount1.Entity = value;
					if ((value != null))
					{
						value.MstItems1.Add(this);
						this._SalesAccountId = value.Id;
					}
					else
					{
						this._SalesAccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstItem2", Storage="_MstAccount2", ThisKey="AssetAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount2
		{
			get
			{
				return this._MstAccount2.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount2.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount2.Entity = null;
						previousValue.MstItems2.Remove(this);
					}
					this._MstAccount2.Entity = value;
					if ((value != null))
					{
						value.MstItems2.Add(this);
						this._AssetAccountId = value.Id;
					}
					else
					{
						this._AssetAccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstSupplier_MstItem", Storage="_MstSupplier", ThisKey="DefaultSupplierId", OtherKey="Id", IsForeignKey=true)]
		public MstSupplier MstSupplier
		{
			get
			{
				return this._MstSupplier.Entity;
			}
			set
			{
				MstSupplier previousValue = this._MstSupplier.Entity;
				if (((previousValue != value) 
							|| (this._MstSupplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstSupplier.Entity = null;
						previousValue.MstItems.Remove(this);
					}
					this._MstSupplier.Entity = value;
					if ((value != null))
					{
						value.MstItems.Add(this);
						this._DefaultSupplierId = value.Id;
					}
					else
					{
						this._DefaultSupplierId = default(int);
					}
					this.SendPropertyChanged("MstSupplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTax_MstItem", Storage="_MstTax", ThisKey="InTaxId", OtherKey="Id", IsForeignKey=true)]
		public MstTax MstTax
		{
			get
			{
				return this._MstTax.Entity;
			}
			set
			{
				MstTax previousValue = this._MstTax.Entity;
				if (((previousValue != value) 
							|| (this._MstTax.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTax.Entity = null;
						previousValue.MstItems.Remove(this);
					}
					this._MstTax.Entity = value;
					if ((value != null))
					{
						value.MstItems.Add(this);
						this._InTaxId = value.Id;
					}
					else
					{
						this._InTaxId = default(int);
					}
					this.SendPropertyChanged("MstTax");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_MstItem", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.MstItems.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.MstItems.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstItem", Storage="_MstUser", ThisKey="EntryUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstItems.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstItems.Add(this);
						this._EntryUserId = value.Id;
					}
					else
					{
						this._EntryUserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstItem1", Storage="_MstUser1", ThisKey="UpdateUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstItems1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstItems1.Add(this);
						this._UpdateUserId = value.Id;
					}
					else
					{
						this._UpdateUserId = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnStockOutLines(TrnStockOutLine entity)
		{
			this.SendPropertyChanging();
			entity.MstItem = this;
		}
		
		private void detach_TrnStockOutLines(TrnStockOutLine entity)
		{
			this.SendPropertyChanging();
			entity.MstItem = null;
		}
		
		private void attach_MstDiscountItems(MstDiscountItem entity)
		{
			this.SendPropertyChanging();
			entity.MstItem = this;
		}
		
		private void detach_MstDiscountItems(MstDiscountItem entity)
		{
			this.SendPropertyChanging();
			entity.MstItem = null;
		}
		
		private void attach_MstItemComponents(MstItemComponent entity)
		{
			this.SendPropertyChanging();
			entity.MstItem = this;
		}
		
		private void detach_MstItemComponents(MstItemComponent entity)
		{
			this.SendPropertyChanging();
			entity.MstItem = null;
		}
		
		private void attach_MstItemComponents1(MstItemComponent entity)
		{
			this.SendPropertyChanging();
			entity.MstItem1 = this;
		}
		
		private void detach_MstItemComponents1(MstItemComponent entity)
		{
			this.SendPropertyChanging();
			entity.MstItem1 = null;
		}
		
		private void attach_MstItemGroupItems(MstItemGroupItem entity)
		{
			this.SendPropertyChanging();
			entity.MstItem = this;
		}
		
		private void detach_MstItemGroupItems(MstItemGroupItem entity)
		{
			this.SendPropertyChanging();
			entity.MstItem = null;
		}
		
		private void attach_MstItemInventories(MstItemInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstItem = this;
		}
		
		private void detach_MstItemInventories(MstItemInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstItem = null;
		}
		
		private void attach_MstItemPackages(MstItemPackage entity)
		{
			this.SendPropertyChanging();
			entity.MstItem = this;
		}
		
		private void detach_MstItemPackages(MstItemPackage entity)
		{
			this.SendPropertyChanging();
			entity.MstItem = null;
		}
		
		private void attach_MstItemPackages1(MstItemPackage entity)
		{
			this.SendPropertyChanging();
			entity.MstItem1 = this;
		}
		
		private void detach_MstItemPackages1(MstItemPackage entity)
		{
			this.SendPropertyChanging();
			entity.MstItem1 = null;
		}
		
		private void attach_MstItemPrices(MstItemPrice entity)
		{
			this.SendPropertyChanging();
			entity.MstItem = this;
		}
		
		private void detach_MstItemPrices(MstItemPrice entity)
		{
			this.SendPropertyChanging();
			entity.MstItem = null;
		}
		
		private void attach_TrnStockCountLines(TrnStockCountLine entity)
		{
			this.SendPropertyChanging();
			entity.MstItem = this;
		}
		
		private void detach_TrnStockCountLines(TrnStockCountLine entity)
		{
			this.SendPropertyChanging();
			entity.MstItem = null;
		}
		
		private void attach_TrnStockInLines(TrnStockInLine entity)
		{
			this.SendPropertyChanging();
			entity.MstItem = this;
		}
		
		private void detach_TrnStockInLines(TrnStockInLine entity)
		{
			this.SendPropertyChanging();
			entity.MstItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstItemComponent")]
	public partial class MstItemComponent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ItemId;
		
		private int _ComponentItemId;
		
		private int _UnitId;
		
		private decimal _Quantity;
		
		private decimal _Cost;
		
		private decimal _Amount;
		
		private bool _IsPrinted;
		
		private EntityRef<MstItem> _MstItem;
		
		private EntityRef<MstItem> _MstItem1;
		
		private EntityRef<MstUnit> _MstUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnComponentItemIdChanging(int value);
    partial void OnComponentItemIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnIsPrintedChanging(bool value);
    partial void OnIsPrintedChanged();
    #endregion
		
		public MstItemComponent()
		{
			this._MstItem = default(EntityRef<MstItem>);
			this._MstItem1 = default(EntityRef<MstItem>);
			this._MstUnit = default(EntityRef<MstUnit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComponentItemId", DbType="Int NOT NULL")]
		public int ComponentItemId
		{
			get
			{
				return this._ComponentItemId;
			}
			set
			{
				if ((this._ComponentItemId != value))
				{
					if (this._MstItem1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnComponentItemIdChanging(value);
					this.SendPropertyChanging();
					this._ComponentItemId = value;
					this.SendPropertyChanged("ComponentItemId");
					this.OnComponentItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrinted", DbType="Bit NOT NULL")]
		public bool IsPrinted
		{
			get
			{
				return this._IsPrinted;
			}
			set
			{
				if ((this._IsPrinted != value))
				{
					this.OnIsPrintedChanging(value);
					this.SendPropertyChanging();
					this._IsPrinted = value;
					this.SendPropertyChanged("IsPrinted");
					this.OnIsPrintedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstItem_MstItemComponent", Storage="_MstItem", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstItem MstItem
		{
			get
			{
				return this._MstItem.Entity;
			}
			set
			{
				MstItem previousValue = this._MstItem.Entity;
				if (((previousValue != value) 
							|| (this._MstItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstItem.Entity = null;
						previousValue.MstItemComponents.Remove(this);
					}
					this._MstItem.Entity = value;
					if ((value != null))
					{
						value.MstItemComponents.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(int);
					}
					this.SendPropertyChanged("MstItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstItem_MstItemComponent1", Storage="_MstItem1", ThisKey="ComponentItemId", OtherKey="Id", IsForeignKey=true)]
		public MstItem MstItem1
		{
			get
			{
				return this._MstItem1.Entity;
			}
			set
			{
				MstItem previousValue = this._MstItem1.Entity;
				if (((previousValue != value) 
							|| (this._MstItem1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstItem1.Entity = null;
						previousValue.MstItemComponents1.Remove(this);
					}
					this._MstItem1.Entity = value;
					if ((value != null))
					{
						value.MstItemComponents1.Add(this);
						this._ComponentItemId = value.Id;
					}
					else
					{
						this._ComponentItemId = default(int);
					}
					this.SendPropertyChanged("MstItem1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_MstItemComponent", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.MstItemComponents.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.MstItemComponents.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstItemGroup")]
	public partial class MstItemGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ItemGroup;
		
		private string _ImagePath;
		
		private string _KitchenReport;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private bool _IsLocked;
		
		private EntitySet<MstItemGroupItem> _MstItemGroupItems;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnItemGroupChanging(string value);
    partial void OnItemGroupChanged();
    partial void OnImagePathChanging(string value);
    partial void OnImagePathChanged();
    partial void OnKitchenReportChanging(string value);
    partial void OnKitchenReportChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    #endregion
		
		public MstItemGroup()
		{
			this._MstItemGroupItems = new EntitySet<MstItemGroupItem>(new Action<MstItemGroupItem>(this.attach_MstItemGroupItems), new Action<MstItemGroupItem>(this.detach_MstItemGroupItems));
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemGroup", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ItemGroup
		{
			get
			{
				return this._ItemGroup;
			}
			set
			{
				if ((this._ItemGroup != value))
				{
					this.OnItemGroupChanging(value);
					this.SendPropertyChanging();
					this._ItemGroup = value;
					this.SendPropertyChanged("ItemGroup");
					this.OnItemGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="NVarChar(255)")]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this.OnImagePathChanging(value);
					this.SendPropertyChanging();
					this._ImagePath = value;
					this.SendPropertyChanged("ImagePath");
					this.OnImagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KitchenReport", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string KitchenReport
		{
			get
			{
				return this._KitchenReport;
			}
			set
			{
				if ((this._KitchenReport != value))
				{
					this.OnKitchenReportChanging(value);
					this.SendPropertyChanging();
					this._KitchenReport = value;
					this.SendPropertyChanged("KitchenReport");
					this.OnKitchenReportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstItemGroup_MstItemGroupItem", Storage="_MstItemGroupItems", ThisKey="Id", OtherKey="ItemGroupId")]
		public EntitySet<MstItemGroupItem> MstItemGroupItems
		{
			get
			{
				return this._MstItemGroupItems;
			}
			set
			{
				this._MstItemGroupItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstItemGroup", Storage="_MstUser", ThisKey="EntryUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstItemGroups.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstItemGroups.Add(this);
						this._EntryUserId = value.Id;
					}
					else
					{
						this._EntryUserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstItemGroup1", Storage="_MstUser1", ThisKey="UpdateUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstItemGroups1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstItemGroups1.Add(this);
						this._UpdateUserId = value.Id;
					}
					else
					{
						this._UpdateUserId = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstItemGroupItems(MstItemGroupItem entity)
		{
			this.SendPropertyChanging();
			entity.MstItemGroup = this;
		}
		
		private void detach_MstItemGroupItems(MstItemGroupItem entity)
		{
			this.SendPropertyChanging();
			entity.MstItemGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstItemGroupItem")]
	public partial class MstItemGroupItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ItemId;
		
		private int _ItemGroupId;
		
		private EntityRef<MstItem> _MstItem;
		
		private EntityRef<MstItemGroup> _MstItemGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnItemGroupIdChanging(int value);
    partial void OnItemGroupIdChanged();
    #endregion
		
		public MstItemGroupItem()
		{
			this._MstItem = default(EntityRef<MstItem>);
			this._MstItemGroup = default(EntityRef<MstItemGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemGroupId", DbType="Int NOT NULL")]
		public int ItemGroupId
		{
			get
			{
				return this._ItemGroupId;
			}
			set
			{
				if ((this._ItemGroupId != value))
				{
					if (this._MstItemGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemGroupIdChanging(value);
					this.SendPropertyChanging();
					this._ItemGroupId = value;
					this.SendPropertyChanged("ItemGroupId");
					this.OnItemGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstItem_MstItemGroupItem", Storage="_MstItem", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstItem MstItem
		{
			get
			{
				return this._MstItem.Entity;
			}
			set
			{
				MstItem previousValue = this._MstItem.Entity;
				if (((previousValue != value) 
							|| (this._MstItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstItem.Entity = null;
						previousValue.MstItemGroupItems.Remove(this);
					}
					this._MstItem.Entity = value;
					if ((value != null))
					{
						value.MstItemGroupItems.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(int);
					}
					this.SendPropertyChanged("MstItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstItemGroup_MstItemGroupItem", Storage="_MstItemGroup", ThisKey="ItemGroupId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstItemGroup MstItemGroup
		{
			get
			{
				return this._MstItemGroup.Entity;
			}
			set
			{
				MstItemGroup previousValue = this._MstItemGroup.Entity;
				if (((previousValue != value) 
							|| (this._MstItemGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstItemGroup.Entity = null;
						previousValue.MstItemGroupItems.Remove(this);
					}
					this._MstItemGroup.Entity = value;
					if ((value != null))
					{
						value.MstItemGroupItems.Add(this);
						this._ItemGroupId = value.Id;
					}
					else
					{
						this._ItemGroupId = default(int);
					}
					this.SendPropertyChanged("MstItemGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstItemInventory")]
	public partial class MstItemInventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ItemId;
		
		private System.DateTime _InventoryDate;
		
		private decimal _Quantity;
		
		private EntityRef<MstItem> _MstItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnInventoryDateChanging(System.DateTime value);
    partial void OnInventoryDateChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    #endregion
		
		public MstItemInventory()
		{
			this._MstItem = default(EntityRef<MstItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryDate", DbType="DateTime NOT NULL")]
		public System.DateTime InventoryDate
		{
			get
			{
				return this._InventoryDate;
			}
			set
			{
				if ((this._InventoryDate != value))
				{
					this.OnInventoryDateChanging(value);
					this.SendPropertyChanging();
					this._InventoryDate = value;
					this.SendPropertyChanged("InventoryDate");
					this.OnInventoryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstItem_MstItemInventory", Storage="_MstItem", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstItem MstItem
		{
			get
			{
				return this._MstItem.Entity;
			}
			set
			{
				MstItem previousValue = this._MstItem.Entity;
				if (((previousValue != value) 
							|| (this._MstItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstItem.Entity = null;
						previousValue.MstItemInventories.Remove(this);
					}
					this._MstItem.Entity = value;
					if ((value != null))
					{
						value.MstItemInventories.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(int);
					}
					this.SendPropertyChanged("MstItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstItemPackage")]
	public partial class MstItemPackage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ItemId;
		
		private int _PackageItemId;
		
		private int _UnitId;
		
		private decimal _Quantity;
		
		private bool _IsOptional;
		
		private EntityRef<MstItem> _MstItem;
		
		private EntityRef<MstItem> _MstItem1;
		
		private EntityRef<MstUnit> _MstUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnPackageItemIdChanging(int value);
    partial void OnPackageItemIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnIsOptionalChanging(bool value);
    partial void OnIsOptionalChanged();
    #endregion
		
		public MstItemPackage()
		{
			this._MstItem = default(EntityRef<MstItem>);
			this._MstItem1 = default(EntityRef<MstItem>);
			this._MstUnit = default(EntityRef<MstUnit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageItemId", DbType="Int NOT NULL")]
		public int PackageItemId
		{
			get
			{
				return this._PackageItemId;
			}
			set
			{
				if ((this._PackageItemId != value))
				{
					if (this._MstItem1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageItemIdChanging(value);
					this.SendPropertyChanging();
					this._PackageItemId = value;
					this.SendPropertyChanged("PackageItemId");
					this.OnPackageItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOptional", DbType="Bit NOT NULL")]
		public bool IsOptional
		{
			get
			{
				return this._IsOptional;
			}
			set
			{
				if ((this._IsOptional != value))
				{
					this.OnIsOptionalChanging(value);
					this.SendPropertyChanging();
					this._IsOptional = value;
					this.SendPropertyChanged("IsOptional");
					this.OnIsOptionalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstItem_MstItemPackage", Storage="_MstItem", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstItem MstItem
		{
			get
			{
				return this._MstItem.Entity;
			}
			set
			{
				MstItem previousValue = this._MstItem.Entity;
				if (((previousValue != value) 
							|| (this._MstItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstItem.Entity = null;
						previousValue.MstItemPackages.Remove(this);
					}
					this._MstItem.Entity = value;
					if ((value != null))
					{
						value.MstItemPackages.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(int);
					}
					this.SendPropertyChanged("MstItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstItem_MstItemPackage1", Storage="_MstItem1", ThisKey="PackageItemId", OtherKey="Id", IsForeignKey=true)]
		public MstItem MstItem1
		{
			get
			{
				return this._MstItem1.Entity;
			}
			set
			{
				MstItem previousValue = this._MstItem1.Entity;
				if (((previousValue != value) 
							|| (this._MstItem1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstItem1.Entity = null;
						previousValue.MstItemPackages1.Remove(this);
					}
					this._MstItem1.Entity = value;
					if ((value != null))
					{
						value.MstItemPackages1.Add(this);
						this._PackageItemId = value.Id;
					}
					else
					{
						this._PackageItemId = default(int);
					}
					this.SendPropertyChanged("MstItem1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_MstItemPackage", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.MstItemPackages.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.MstItemPackages.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstItemPrice")]
	public partial class MstItemPrice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ItemId;
		
		private string _PriceDescription;
		
		private decimal _Price;
		
		private decimal _TriggerQuantity;
		
		private EntityRef<MstItem> _MstItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnPriceDescriptionChanging(string value);
    partial void OnPriceDescriptionChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnTriggerQuantityChanging(decimal value);
    partial void OnTriggerQuantityChanged();
    #endregion
		
		public MstItemPrice()
		{
			this._MstItem = default(EntityRef<MstItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceDescription", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PriceDescription
		{
			get
			{
				return this._PriceDescription;
			}
			set
			{
				if ((this._PriceDescription != value))
				{
					this.OnPriceDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PriceDescription = value;
					this.SendPropertyChanged("PriceDescription");
					this.OnPriceDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,5) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerQuantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal TriggerQuantity
		{
			get
			{
				return this._TriggerQuantity;
			}
			set
			{
				if ((this._TriggerQuantity != value))
				{
					this.OnTriggerQuantityChanging(value);
					this.SendPropertyChanging();
					this._TriggerQuantity = value;
					this.SendPropertyChanged("TriggerQuantity");
					this.OnTriggerQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstItem_MstItemPrice", Storage="_MstItem", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstItem MstItem
		{
			get
			{
				return this._MstItem.Entity;
			}
			set
			{
				MstItem previousValue = this._MstItem.Entity;
				if (((previousValue != value) 
							|| (this._MstItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstItem.Entity = null;
						previousValue.MstItemPrices.Remove(this);
					}
					this._MstItem.Entity = value;
					if ((value != null))
					{
						value.MstItemPrices.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(int);
					}
					this.SendPropertyChanged("MstItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstPayType")]
	public partial class MstPayType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _PayType;
		
		private System.Nullable<int> _AccountId;
		
		private EntitySet<TrnCollectionLine> _TrnCollectionLines;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements;
		
		private EntityRef<MstAccount> _MstAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPayTypeChanging(string value);
    partial void OnPayTypeChanged();
    partial void OnAccountIdChanging(System.Nullable<int> value);
    partial void OnAccountIdChanged();
    #endregion
		
		public MstPayType()
		{
			this._TrnCollectionLines = new EntitySet<TrnCollectionLine>(new Action<TrnCollectionLine>(this.attach_TrnCollectionLines), new Action<TrnCollectionLine>(this.detach_TrnCollectionLines));
			this._TrnDisbursements = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements), new Action<TrnDisbursement>(this.detach_TrnDisbursements));
			this._MstAccount = default(EntityRef<MstAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PayType
		{
			get
			{
				return this._PayType;
			}
			set
			{
				if ((this._PayType != value))
				{
					this.OnPayTypeChanging(value);
					this.SendPropertyChanging();
					this._PayType = value;
					this.SendPropertyChanged("PayType");
					this.OnPayTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int")]
		public System.Nullable<int> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayType_TrnCollectionLine", Storage="_TrnCollectionLines", ThisKey="Id", OtherKey="PayTypeId")]
		public EntitySet<TrnCollectionLine> TrnCollectionLines
		{
			get
			{
				return this._TrnCollectionLines;
			}
			set
			{
				this._TrnCollectionLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayType_TrnDisbursement", Storage="_TrnDisbursements", ThisKey="Id", OtherKey="PayTypeId")]
		public EntitySet<TrnDisbursement> TrnDisbursements
		{
			get
			{
				return this._TrnDisbursements;
			}
			set
			{
				this._TrnDisbursements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstPayType", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.MstPayTypes.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.MstPayTypes.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstPayType = this;
		}
		
		private void detach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstPayType = null;
		}
		
		private void attach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstPayType = this;
		}
		
		private void detach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstPayType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstPeriod")]
	public partial class MstPeriod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Period;
		
		private EntitySet<TrnCollection> _TrnCollections;
		
		private EntitySet<TrnDebitCreditMemo> _TrnDebitCreditMemos;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders;
		
		private EntitySet<TrnStockCount> _TrnStockCounts;
		
		private EntitySet<TrnStockOut> _TrnStockOuts;
		
		private EntitySet<TrnSale> _TrnSales;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPeriodChanging(string value);
    partial void OnPeriodChanged();
    #endregion
		
		public MstPeriod()
		{
			this._TrnCollections = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections), new Action<TrnCollection>(this.detach_TrnCollections));
			this._TrnDebitCreditMemos = new EntitySet<TrnDebitCreditMemo>(new Action<TrnDebitCreditMemo>(this.attach_TrnDebitCreditMemos), new Action<TrnDebitCreditMemo>(this.detach_TrnDebitCreditMemos));
			this._TrnDisbursements = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements), new Action<TrnDisbursement>(this.detach_TrnDisbursements));
			this._TrnPurchaseOrders = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders));
			this._TrnStockCounts = new EntitySet<TrnStockCount>(new Action<TrnStockCount>(this.attach_TrnStockCounts), new Action<TrnStockCount>(this.detach_TrnStockCounts));
			this._TrnStockOuts = new EntitySet<TrnStockOut>(new Action<TrnStockOut>(this.attach_TrnStockOuts), new Action<TrnStockOut>(this.detach_TrnStockOuts));
			this._TrnSales = new EntitySet<TrnSale>(new Action<TrnSale>(this.attach_TrnSales), new Action<TrnSale>(this.detach_TrnSales));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this.OnPeriodChanging(value);
					this.SendPropertyChanging();
					this._Period = value;
					this.SendPropertyChanged("Period");
					this.OnPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnCollection", Storage="_TrnCollections", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<TrnCollection> TrnCollections
		{
			get
			{
				return this._TrnCollections;
			}
			set
			{
				this._TrnCollections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnDebitCreditMemo", Storage="_TrnDebitCreditMemos", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<TrnDebitCreditMemo> TrnDebitCreditMemos
		{
			get
			{
				return this._TrnDebitCreditMemos;
			}
			set
			{
				this._TrnDebitCreditMemos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnDisbursement", Storage="_TrnDisbursements", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<TrnDisbursement> TrnDisbursements
		{
			get
			{
				return this._TrnDisbursements;
			}
			set
			{
				this._TrnDisbursements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnPurchaseOrder", Storage="_TrnPurchaseOrders", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders
		{
			get
			{
				return this._TrnPurchaseOrders;
			}
			set
			{
				this._TrnPurchaseOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnStockCount", Storage="_TrnStockCounts", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<TrnStockCount> TrnStockCounts
		{
			get
			{
				return this._TrnStockCounts;
			}
			set
			{
				this._TrnStockCounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnStockOut", Storage="_TrnStockOuts", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<TrnStockOut> TrnStockOuts
		{
			get
			{
				return this._TrnStockOuts;
			}
			set
			{
				this._TrnStockOuts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnSale", Storage="_TrnSales", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<TrnSale> TrnSales
		{
			get
			{
				return this._TrnSales;
			}
			set
			{
				this._TrnSales.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
		
		private void attach_TrnDebitCreditMemos(TrnDebitCreditMemo entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_TrnDebitCreditMemos(TrnDebitCreditMemo entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
		
		private void attach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
		
		private void attach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
		
		private void attach_TrnStockCounts(TrnStockCount entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_TrnStockCounts(TrnStockCount entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
		
		private void attach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
		
		private void attach_TrnSales(TrnSale entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_TrnSales(TrnSale entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstSupplier")]
	public partial class MstSupplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Supplier;
		
		private string _Address;
		
		private string _TelephoneNumber;
		
		private string _CellphoneNumber;
		
		private string _FaxNumber;
		
		private int _TermId;
		
		private string _TIN;
		
		private int _AccountId;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private bool _IsLocked;
		
		private EntitySet<MstItem> _MstItems;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstTerm> _MstTerm;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSupplierChanging(string value);
    partial void OnSupplierChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnTelephoneNumberChanging(string value);
    partial void OnTelephoneNumberChanged();
    partial void OnCellphoneNumberChanging(string value);
    partial void OnCellphoneNumberChanged();
    partial void OnFaxNumberChanging(string value);
    partial void OnFaxNumberChanged();
    partial void OnTermIdChanging(int value);
    partial void OnTermIdChanged();
    partial void OnTINChanging(string value);
    partial void OnTINChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    #endregion
		
		public MstSupplier()
		{
			this._MstItems = new EntitySet<MstItem>(new Action<MstItem>(this.attach_MstItems), new Action<MstItem>(this.detach_MstItems));
			this._TrnPurchaseOrders = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders));
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstTerm = default(EntityRef<MstTerm>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplier", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Supplier
		{
			get
			{
				return this._Supplier;
			}
			set
			{
				if ((this._Supplier != value))
				{
					this.OnSupplierChanging(value);
					this.SendPropertyChanging();
					this._Supplier = value;
					this.SendPropertyChanged("Supplier");
					this.OnSupplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TelephoneNumber
		{
			get
			{
				return this._TelephoneNumber;
			}
			set
			{
				if ((this._TelephoneNumber != value))
				{
					this.OnTelephoneNumberChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNumber = value;
					this.SendPropertyChanged("TelephoneNumber");
					this.OnTelephoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellphoneNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CellphoneNumber
		{
			get
			{
				return this._CellphoneNumber;
			}
			set
			{
				if ((this._CellphoneNumber != value))
				{
					this.OnCellphoneNumberChanging(value);
					this.SendPropertyChanging();
					this._CellphoneNumber = value;
					this.SendPropertyChanged("CellphoneNumber");
					this.OnCellphoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FaxNumber
		{
			get
			{
				return this._FaxNumber;
			}
			set
			{
				if ((this._FaxNumber != value))
				{
					this.OnFaxNumberChanging(value);
					this.SendPropertyChanging();
					this._FaxNumber = value;
					this.SendPropertyChanged("FaxNumber");
					this.OnFaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="Int NOT NULL")]
		public int TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._MstTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TIN
		{
			get
			{
				return this._TIN;
			}
			set
			{
				if ((this._TIN != value))
				{
					this.OnTINChanging(value);
					this.SendPropertyChanging();
					this._TIN = value;
					this.SendPropertyChanged("TIN");
					this.OnTINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstSupplier_MstItem", Storage="_MstItems", ThisKey="Id", OtherKey="DefaultSupplierId")]
		public EntitySet<MstItem> MstItems
		{
			get
			{
				return this._MstItems;
			}
			set
			{
				this._MstItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstSupplier_TrnPurchaseOrder", Storage="_TrnPurchaseOrders", ThisKey="Id", OtherKey="SupplierId")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders
		{
			get
			{
				return this._TrnPurchaseOrders;
			}
			set
			{
				this._TrnPurchaseOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstSupplier", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.MstSuppliers.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.MstSuppliers.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_MstSupplier", Storage="_MstTerm", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public MstTerm MstTerm
		{
			get
			{
				return this._MstTerm.Entity;
			}
			set
			{
				MstTerm previousValue = this._MstTerm.Entity;
				if (((previousValue != value) 
							|| (this._MstTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTerm.Entity = null;
						previousValue.MstSuppliers.Remove(this);
					}
					this._MstTerm.Entity = value;
					if ((value != null))
					{
						value.MstSuppliers.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(int);
					}
					this.SendPropertyChanged("MstTerm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstSupplier", Storage="_MstUser", ThisKey="EntryUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstSuppliers.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstSuppliers.Add(this);
						this._EntryUserId = value.Id;
					}
					else
					{
						this._EntryUserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstSupplier1", Storage="_MstUser1", ThisKey="UpdateUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstSuppliers1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstSuppliers1.Add(this);
						this._UpdateUserId = value.Id;
					}
					else
					{
						this._UpdateUserId = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstItems(MstItem entity)
		{
			this.SendPropertyChanging();
			entity.MstSupplier = this;
		}
		
		private void detach_MstItems(MstItem entity)
		{
			this.SendPropertyChanging();
			entity.MstSupplier = null;
		}
		
		private void attach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstSupplier = this;
		}
		
		private void detach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstSupplier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstTable")]
	public partial class MstTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TableCode;
		
		private int _TableGroupId;
		
		private System.Nullable<int> _TopLocation;
		
		private System.Nullable<int> _LeftLocation;
		
		private EntitySet<TrnSale> _TrnSales;
		
		private EntityRef<MstTableGroup> _MstTableGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTableCodeChanging(string value);
    partial void OnTableCodeChanged();
    partial void OnTableGroupIdChanging(int value);
    partial void OnTableGroupIdChanged();
    partial void OnTopLocationChanging(System.Nullable<int> value);
    partial void OnTopLocationChanged();
    partial void OnLeftLocationChanging(System.Nullable<int> value);
    partial void OnLeftLocationChanged();
    #endregion
		
		public MstTable()
		{
			this._TrnSales = new EntitySet<TrnSale>(new Action<TrnSale>(this.attach_TrnSales), new Action<TrnSale>(this.detach_TrnSales));
			this._MstTableGroup = default(EntityRef<MstTableGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TableCode
		{
			get
			{
				return this._TableCode;
			}
			set
			{
				if ((this._TableCode != value))
				{
					this.OnTableCodeChanging(value);
					this.SendPropertyChanging();
					this._TableCode = value;
					this.SendPropertyChanged("TableCode");
					this.OnTableCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableGroupId", DbType="Int NOT NULL")]
		public int TableGroupId
		{
			get
			{
				return this._TableGroupId;
			}
			set
			{
				if ((this._TableGroupId != value))
				{
					if (this._MstTableGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTableGroupIdChanging(value);
					this.SendPropertyChanging();
					this._TableGroupId = value;
					this.SendPropertyChanged("TableGroupId");
					this.OnTableGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopLocation", DbType="Int")]
		public System.Nullable<int> TopLocation
		{
			get
			{
				return this._TopLocation;
			}
			set
			{
				if ((this._TopLocation != value))
				{
					this.OnTopLocationChanging(value);
					this.SendPropertyChanging();
					this._TopLocation = value;
					this.SendPropertyChanged("TopLocation");
					this.OnTopLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeftLocation", DbType="Int")]
		public System.Nullable<int> LeftLocation
		{
			get
			{
				return this._LeftLocation;
			}
			set
			{
				if ((this._LeftLocation != value))
				{
					this.OnLeftLocationChanging(value);
					this.SendPropertyChanging();
					this._LeftLocation = value;
					this.SendPropertyChanged("LeftLocation");
					this.OnLeftLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTable_TrnSale", Storage="_TrnSales", ThisKey="Id", OtherKey="TableId")]
		public EntitySet<TrnSale> TrnSales
		{
			get
			{
				return this._TrnSales;
			}
			set
			{
				this._TrnSales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTableGroup_MstTable", Storage="_MstTableGroup", ThisKey="TableGroupId", OtherKey="Id", IsForeignKey=true)]
		public MstTableGroup MstTableGroup
		{
			get
			{
				return this._MstTableGroup.Entity;
			}
			set
			{
				MstTableGroup previousValue = this._MstTableGroup.Entity;
				if (((previousValue != value) 
							|| (this._MstTableGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTableGroup.Entity = null;
						previousValue.MstTables.Remove(this);
					}
					this._MstTableGroup.Entity = value;
					if ((value != null))
					{
						value.MstTables.Add(this);
						this._TableGroupId = value.Id;
					}
					else
					{
						this._TableGroupId = default(int);
					}
					this.SendPropertyChanged("MstTableGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnSales(TrnSale entity)
		{
			this.SendPropertyChanging();
			entity.MstTable = this;
		}
		
		private void detach_TrnSales(TrnSale entity)
		{
			this.SendPropertyChanging();
			entity.MstTable = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstTableGroup")]
	public partial class MstTableGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TableGroup;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private bool _IsLocked;
		
		private EntitySet<MstTable> _MstTables;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTableGroupChanging(string value);
    partial void OnTableGroupChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    #endregion
		
		public MstTableGroup()
		{
			this._MstTables = new EntitySet<MstTable>(new Action<MstTable>(this.attach_MstTables), new Action<MstTable>(this.detach_MstTables));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableGroup", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TableGroup
		{
			get
			{
				return this._TableGroup;
			}
			set
			{
				if ((this._TableGroup != value))
				{
					this.OnTableGroupChanging(value);
					this.SendPropertyChanging();
					this._TableGroup = value;
					this.SendPropertyChanged("TableGroup");
					this.OnTableGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTableGroup_MstTable", Storage="_MstTables", ThisKey="Id", OtherKey="TableGroupId")]
		public EntitySet<MstTable> MstTables
		{
			get
			{
				return this._MstTables;
			}
			set
			{
				this._MstTables.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstTables(MstTable entity)
		{
			this.SendPropertyChanging();
			entity.MstTableGroup = this;
		}
		
		private void detach_MstTables(MstTable entity)
		{
			this.SendPropertyChanging();
			entity.MstTableGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstTax")]
	public partial class MstTax : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Tax;
		
		private decimal _Rate;
		
		private int _AccountId;
		
		private EntitySet<MstItem> _MstItems;
		
		private EntitySet<TrnSalesLine> _TrnSalesLines;
		
		private EntityRef<MstAccount> _MstAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTaxChanging(string value);
    partial void OnTaxChanged();
    partial void OnRateChanging(decimal value);
    partial void OnRateChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    #endregion
		
		public MstTax()
		{
			this._MstItems = new EntitySet<MstItem>(new Action<MstItem>(this.attach_MstItems), new Action<MstItem>(this.detach_MstItems));
			this._TrnSalesLines = new EntitySet<TrnSalesLine>(new Action<TrnSalesLine>(this.attach_TrnSalesLines), new Action<TrnSalesLine>(this.detach_TrnSalesLines));
			this._MstAccount = default(EntityRef<MstAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(18,5) NOT NULL")]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTax_MstItem", Storage="_MstItems", ThisKey="Id", OtherKey="InTaxId")]
		public EntitySet<MstItem> MstItems
		{
			get
			{
				return this._MstItems;
			}
			set
			{
				this._MstItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTax_TrnSalesLine", Storage="_TrnSalesLines", ThisKey="Id", OtherKey="TaxId")]
		public EntitySet<TrnSalesLine> TrnSalesLines
		{
			get
			{
				return this._TrnSalesLines;
			}
			set
			{
				this._TrnSalesLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstTax", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.MstTaxes.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.MstTaxes.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstItems(MstItem entity)
		{
			this.SendPropertyChanging();
			entity.MstTax = this;
		}
		
		private void detach_MstItems(MstItem entity)
		{
			this.SendPropertyChanging();
			entity.MstTax = null;
		}
		
		private void attach_TrnSalesLines(TrnSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.MstTax = this;
		}
		
		private void detach_TrnSalesLines(TrnSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.MstTax = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstTerm")]
	public partial class MstTerm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Term;
		
		private decimal _NumberOfDays;
		
		private EntitySet<MstCustomer> _MstCustomers;
		
		private EntitySet<MstSupplier> _MstSuppliers;
		
		private EntitySet<TrnSale> _TrnSales;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTermChanging(string value);
    partial void OnTermChanged();
    partial void OnNumberOfDaysChanging(decimal value);
    partial void OnNumberOfDaysChanged();
    #endregion
		
		public MstTerm()
		{
			this._MstCustomers = new EntitySet<MstCustomer>(new Action<MstCustomer>(this.attach_MstCustomers), new Action<MstCustomer>(this.detach_MstCustomers));
			this._MstSuppliers = new EntitySet<MstSupplier>(new Action<MstSupplier>(this.attach_MstSuppliers), new Action<MstSupplier>(this.detach_MstSuppliers));
			this._TrnSales = new EntitySet<TrnSale>(new Action<TrnSale>(this.attach_TrnSales), new Action<TrnSale>(this.detach_TrnSales));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this.OnTermChanging(value);
					this.SendPropertyChanging();
					this._Term = value;
					this.SendPropertyChanged("Term");
					this.OnTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfDays", DbType="Decimal(18,5) NOT NULL")]
		public decimal NumberOfDays
		{
			get
			{
				return this._NumberOfDays;
			}
			set
			{
				if ((this._NumberOfDays != value))
				{
					this.OnNumberOfDaysChanging(value);
					this.SendPropertyChanging();
					this._NumberOfDays = value;
					this.SendPropertyChanged("NumberOfDays");
					this.OnNumberOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_MstCustomer", Storage="_MstCustomers", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<MstCustomer> MstCustomers
		{
			get
			{
				return this._MstCustomers;
			}
			set
			{
				this._MstCustomers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_MstSupplier", Storage="_MstSuppliers", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<MstSupplier> MstSuppliers
		{
			get
			{
				return this._MstSuppliers;
			}
			set
			{
				this._MstSuppliers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_TrnSale", Storage="_TrnSales", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<TrnSale> TrnSales
		{
			get
			{
				return this._TrnSales;
			}
			set
			{
				this._TrnSales.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstCustomers(MstCustomer entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = this;
		}
		
		private void detach_MstCustomers(MstCustomer entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = null;
		}
		
		private void attach_MstSuppliers(MstSupplier entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = this;
		}
		
		private void detach_MstSuppliers(MstSupplier entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = null;
		}
		
		private void attach_TrnSales(TrnSale entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = this;
		}
		
		private void detach_TrnSales(TrnSale entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstTerminal")]
	public partial class MstTerminal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Terminal;
		
		private EntitySet<TrnCollection> _TrnCollections;
		
		private EntitySet<TrnSale> _TrnSales;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTerminalChanging(string value);
    partial void OnTerminalChanged();
    #endregion
		
		public MstTerminal()
		{
			this._TrnCollections = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections), new Action<TrnCollection>(this.detach_TrnCollections));
			this._TrnSales = new EntitySet<TrnSale>(new Action<TrnSale>(this.attach_TrnSales), new Action<TrnSale>(this.detach_TrnSales));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Terminal", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Terminal
		{
			get
			{
				return this._Terminal;
			}
			set
			{
				if ((this._Terminal != value))
				{
					this.OnTerminalChanging(value);
					this.SendPropertyChanging();
					this._Terminal = value;
					this.SendPropertyChanged("Terminal");
					this.OnTerminalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerminal_TrnCollection", Storage="_TrnCollections", ThisKey="Id", OtherKey="TerminalId")]
		public EntitySet<TrnCollection> TrnCollections
		{
			get
			{
				return this._TrnCollections;
			}
			set
			{
				this._TrnCollections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerminal_TrnSale", Storage="_TrnSales", ThisKey="Id", OtherKey="TerminalId")]
		public EntitySet<TrnSale> TrnSales
		{
			get
			{
				return this._TrnSales;
			}
			set
			{
				this._TrnSales.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstTerminal = this;
		}
		
		private void detach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstTerminal = null;
		}
		
		private void attach_TrnSales(TrnSale entity)
		{
			this.SendPropertyChanging();
			entity.MstTerminal = this;
		}
		
		private void detach_TrnSales(TrnSale entity)
		{
			this.SendPropertyChanging();
			entity.MstTerminal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstUnit")]
	public partial class MstUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Unit;
		
		private EntitySet<TrnStockOutLine> _TrnStockOutLines;
		
		private EntitySet<MstItem> _MstItems;
		
		private EntitySet<MstItemComponent> _MstItemComponents;
		
		private EntitySet<MstItemPackage> _MstItemPackages;
		
		private EntitySet<TrnStockCountLine> _TrnStockCountLines;
		
		private EntitySet<TrnStockInLine> _TrnStockInLines;
		
		private EntitySet<TrnSalesLine> _TrnSalesLines;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    #endregion
		
		public MstUnit()
		{
			this._TrnStockOutLines = new EntitySet<TrnStockOutLine>(new Action<TrnStockOutLine>(this.attach_TrnStockOutLines), new Action<TrnStockOutLine>(this.detach_TrnStockOutLines));
			this._MstItems = new EntitySet<MstItem>(new Action<MstItem>(this.attach_MstItems), new Action<MstItem>(this.detach_MstItems));
			this._MstItemComponents = new EntitySet<MstItemComponent>(new Action<MstItemComponent>(this.attach_MstItemComponents), new Action<MstItemComponent>(this.detach_MstItemComponents));
			this._MstItemPackages = new EntitySet<MstItemPackage>(new Action<MstItemPackage>(this.attach_MstItemPackages), new Action<MstItemPackage>(this.detach_MstItemPackages));
			this._TrnStockCountLines = new EntitySet<TrnStockCountLine>(new Action<TrnStockCountLine>(this.attach_TrnStockCountLines), new Action<TrnStockCountLine>(this.detach_TrnStockCountLines));
			this._TrnStockInLines = new EntitySet<TrnStockInLine>(new Action<TrnStockInLine>(this.attach_TrnStockInLines), new Action<TrnStockInLine>(this.detach_TrnStockInLines));
			this._TrnSalesLines = new EntitySet<TrnSalesLine>(new Action<TrnSalesLine>(this.attach_TrnSalesLines), new Action<TrnSalesLine>(this.detach_TrnSalesLines));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockOutLine", Storage="_TrnStockOutLines", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnStockOutLine> TrnStockOutLines
		{
			get
			{
				return this._TrnStockOutLines;
			}
			set
			{
				this._TrnStockOutLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_MstItem", Storage="_MstItems", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<MstItem> MstItems
		{
			get
			{
				return this._MstItems;
			}
			set
			{
				this._MstItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_MstItemComponent", Storage="_MstItemComponents", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<MstItemComponent> MstItemComponents
		{
			get
			{
				return this._MstItemComponents;
			}
			set
			{
				this._MstItemComponents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_MstItemPackage", Storage="_MstItemPackages", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<MstItemPackage> MstItemPackages
		{
			get
			{
				return this._MstItemPackages;
			}
			set
			{
				this._MstItemPackages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockCountLine", Storage="_TrnStockCountLines", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnStockCountLine> TrnStockCountLines
		{
			get
			{
				return this._TrnStockCountLines;
			}
			set
			{
				this._TrnStockCountLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockInLine", Storage="_TrnStockInLines", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnStockInLine> TrnStockInLines
		{
			get
			{
				return this._TrnStockInLines;
			}
			set
			{
				this._TrnStockInLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnSalesLine", Storage="_TrnSalesLines", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnSalesLine> TrnSalesLines
		{
			get
			{
				return this._TrnSalesLines;
			}
			set
			{
				this._TrnSalesLines.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnStockOutLines(TrnStockOutLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_TrnStockOutLines(TrnStockOutLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_MstItems(MstItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_MstItems(MstItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_MstItemComponents(MstItemComponent entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_MstItemComponents(MstItemComponent entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_MstItemPackages(MstItemPackage entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_MstItemPackages(MstItemPackage entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_TrnStockCountLines(TrnStockCountLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_TrnStockCountLines(TrnStockCountLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_TrnStockInLines(TrnStockInLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_TrnStockInLines(TrnStockInLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_TrnSalesLines(TrnSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_TrnSalesLines(TrnSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstUser")]
	public partial class MstUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserName;
		
		private string _Password;
		
		private string _FullName;
		
		private string _UserCardNumber;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private bool _IsLocked;
		
		private EntitySet<MstCustomer> _MstCustomers;
		
		private EntitySet<MstCustomer> _MstCustomers1;
		
		private EntitySet<MstItem> _MstItems;
		
		private EntitySet<MstItem> _MstItems1;
		
		private EntitySet<MstItemGroup> _MstItemGroups;
		
		private EntitySet<MstItemGroup> _MstItemGroups1;
		
		private EntitySet<MstSupplier> _MstSuppliers;
		
		private EntitySet<MstSupplier> _MstSuppliers1;
		
		private EntitySet<MstUserForm> _MstUserForms;
		
		private EntitySet<SysAuditTrail> _SysAuditTrails;
		
		private EntitySet<SysSalesLocked> _SysSalesLockeds;
		
		private EntitySet<TrnCollection> _TrnCollections;
		
		private EntitySet<TrnCollection> _TrnCollections1;
		
		private EntitySet<TrnCollection> _TrnCollections2;
		
		private EntitySet<TrnCollection> _TrnCollections3;
		
		private EntitySet<TrnCollection> _TrnCollections4;
		
		private EntitySet<TrnDebitCreditMemo> _TrnDebitCreditMemos;
		
		private EntitySet<TrnDebitCreditMemo> _TrnDebitCreditMemos1;
		
		private EntitySet<TrnDebitCreditMemo> _TrnDebitCreditMemos2;
		
		private EntitySet<TrnDebitCreditMemo> _TrnDebitCreditMemos3;
		
		private EntitySet<TrnDebitCreditMemo> _TrnDebitCreditMemos4;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements1;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements2;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements3;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements4;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders1;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders2;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders3;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders4;
		
		private EntitySet<TrnStockOut> _TrnStockOuts;
		
		private EntitySet<TrnStockOut> _TrnStockOuts1;
		
		private EntitySet<TrnStockOut> _TrnStockOuts2;
		
		private EntitySet<TrnStockOut> _TrnStockOuts3;
		
		private EntitySet<TrnStockOut> _TrnStockOuts4;
		
		private EntitySet<TrnSalesLine> _TrnSalesLines;
		
		private EntitySet<TrnSale> _TrnSales;
		
		private EntitySet<TrnSale> _TrnSales1;
		
		private EntitySet<TrnSale> _TrnSales2;
		
		private EntitySet<TrnSale> _TrnSales3;
		
		private EntitySet<TrnSale> _TrnSales4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnUserCardNumberChanging(string value);
    partial void OnUserCardNumberChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    #endregion
		
		public MstUser()
		{
			this._MstCustomers = new EntitySet<MstCustomer>(new Action<MstCustomer>(this.attach_MstCustomers), new Action<MstCustomer>(this.detach_MstCustomers));
			this._MstCustomers1 = new EntitySet<MstCustomer>(new Action<MstCustomer>(this.attach_MstCustomers1), new Action<MstCustomer>(this.detach_MstCustomers1));
			this._MstItems = new EntitySet<MstItem>(new Action<MstItem>(this.attach_MstItems), new Action<MstItem>(this.detach_MstItems));
			this._MstItems1 = new EntitySet<MstItem>(new Action<MstItem>(this.attach_MstItems1), new Action<MstItem>(this.detach_MstItems1));
			this._MstItemGroups = new EntitySet<MstItemGroup>(new Action<MstItemGroup>(this.attach_MstItemGroups), new Action<MstItemGroup>(this.detach_MstItemGroups));
			this._MstItemGroups1 = new EntitySet<MstItemGroup>(new Action<MstItemGroup>(this.attach_MstItemGroups1), new Action<MstItemGroup>(this.detach_MstItemGroups1));
			this._MstSuppliers = new EntitySet<MstSupplier>(new Action<MstSupplier>(this.attach_MstSuppliers), new Action<MstSupplier>(this.detach_MstSuppliers));
			this._MstSuppliers1 = new EntitySet<MstSupplier>(new Action<MstSupplier>(this.attach_MstSuppliers1), new Action<MstSupplier>(this.detach_MstSuppliers1));
			this._MstUserForms = new EntitySet<MstUserForm>(new Action<MstUserForm>(this.attach_MstUserForms), new Action<MstUserForm>(this.detach_MstUserForms));
			this._SysAuditTrails = new EntitySet<SysAuditTrail>(new Action<SysAuditTrail>(this.attach_SysAuditTrails), new Action<SysAuditTrail>(this.detach_SysAuditTrails));
			this._SysSalesLockeds = new EntitySet<SysSalesLocked>(new Action<SysSalesLocked>(this.attach_SysSalesLockeds), new Action<SysSalesLocked>(this.detach_SysSalesLockeds));
			this._TrnCollections = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections), new Action<TrnCollection>(this.detach_TrnCollections));
			this._TrnCollections1 = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections1), new Action<TrnCollection>(this.detach_TrnCollections1));
			this._TrnCollections2 = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections2), new Action<TrnCollection>(this.detach_TrnCollections2));
			this._TrnCollections3 = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections3), new Action<TrnCollection>(this.detach_TrnCollections3));
			this._TrnCollections4 = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections4), new Action<TrnCollection>(this.detach_TrnCollections4));
			this._TrnDebitCreditMemos = new EntitySet<TrnDebitCreditMemo>(new Action<TrnDebitCreditMemo>(this.attach_TrnDebitCreditMemos), new Action<TrnDebitCreditMemo>(this.detach_TrnDebitCreditMemos));
			this._TrnDebitCreditMemos1 = new EntitySet<TrnDebitCreditMemo>(new Action<TrnDebitCreditMemo>(this.attach_TrnDebitCreditMemos1), new Action<TrnDebitCreditMemo>(this.detach_TrnDebitCreditMemos1));
			this._TrnDebitCreditMemos2 = new EntitySet<TrnDebitCreditMemo>(new Action<TrnDebitCreditMemo>(this.attach_TrnDebitCreditMemos2), new Action<TrnDebitCreditMemo>(this.detach_TrnDebitCreditMemos2));
			this._TrnDebitCreditMemos3 = new EntitySet<TrnDebitCreditMemo>(new Action<TrnDebitCreditMemo>(this.attach_TrnDebitCreditMemos3), new Action<TrnDebitCreditMemo>(this.detach_TrnDebitCreditMemos3));
			this._TrnDebitCreditMemos4 = new EntitySet<TrnDebitCreditMemo>(new Action<TrnDebitCreditMemo>(this.attach_TrnDebitCreditMemos4), new Action<TrnDebitCreditMemo>(this.detach_TrnDebitCreditMemos4));
			this._TrnDisbursements = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements), new Action<TrnDisbursement>(this.detach_TrnDisbursements));
			this._TrnDisbursements1 = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements1), new Action<TrnDisbursement>(this.detach_TrnDisbursements1));
			this._TrnDisbursements2 = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements2), new Action<TrnDisbursement>(this.detach_TrnDisbursements2));
			this._TrnDisbursements3 = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements3), new Action<TrnDisbursement>(this.detach_TrnDisbursements3));
			this._TrnDisbursements4 = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements4), new Action<TrnDisbursement>(this.detach_TrnDisbursements4));
			this._TrnPurchaseOrders = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders));
			this._TrnPurchaseOrders1 = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders1), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders1));
			this._TrnPurchaseOrders2 = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders2), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders2));
			this._TrnPurchaseOrders3 = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders3), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders3));
			this._TrnPurchaseOrders4 = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders4), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders4));
			this._TrnStockOuts = new EntitySet<TrnStockOut>(new Action<TrnStockOut>(this.attach_TrnStockOuts), new Action<TrnStockOut>(this.detach_TrnStockOuts));
			this._TrnStockOuts1 = new EntitySet<TrnStockOut>(new Action<TrnStockOut>(this.attach_TrnStockOuts1), new Action<TrnStockOut>(this.detach_TrnStockOuts1));
			this._TrnStockOuts2 = new EntitySet<TrnStockOut>(new Action<TrnStockOut>(this.attach_TrnStockOuts2), new Action<TrnStockOut>(this.detach_TrnStockOuts2));
			this._TrnStockOuts3 = new EntitySet<TrnStockOut>(new Action<TrnStockOut>(this.attach_TrnStockOuts3), new Action<TrnStockOut>(this.detach_TrnStockOuts3));
			this._TrnStockOuts4 = new EntitySet<TrnStockOut>(new Action<TrnStockOut>(this.attach_TrnStockOuts4), new Action<TrnStockOut>(this.detach_TrnStockOuts4));
			this._TrnSalesLines = new EntitySet<TrnSalesLine>(new Action<TrnSalesLine>(this.attach_TrnSalesLines), new Action<TrnSalesLine>(this.detach_TrnSalesLines));
			this._TrnSales = new EntitySet<TrnSale>(new Action<TrnSale>(this.attach_TrnSales), new Action<TrnSale>(this.detach_TrnSales));
			this._TrnSales1 = new EntitySet<TrnSale>(new Action<TrnSale>(this.attach_TrnSales1), new Action<TrnSale>(this.detach_TrnSales1));
			this._TrnSales2 = new EntitySet<TrnSale>(new Action<TrnSale>(this.attach_TrnSales2), new Action<TrnSale>(this.detach_TrnSales2));
			this._TrnSales3 = new EntitySet<TrnSale>(new Action<TrnSale>(this.attach_TrnSales3), new Action<TrnSale>(this.detach_TrnSales3));
			this._TrnSales4 = new EntitySet<TrnSale>(new Action<TrnSale>(this.attach_TrnSales4), new Action<TrnSale>(this.detach_TrnSales4));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCardNumber", DbType="NVarChar(255)")]
		public string UserCardNumber
		{
			get
			{
				return this._UserCardNumber;
			}
			set
			{
				if ((this._UserCardNumber != value))
				{
					this.OnUserCardNumberChanging(value);
					this.SendPropertyChanging();
					this._UserCardNumber = value;
					this.SendPropertyChanged("UserCardNumber");
					this.OnUserCardNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCustomer", Storage="_MstCustomers", ThisKey="Id", OtherKey="EntryUserId")]
		public EntitySet<MstCustomer> MstCustomers
		{
			get
			{
				return this._MstCustomers;
			}
			set
			{
				this._MstCustomers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCustomer1", Storage="_MstCustomers1", ThisKey="Id", OtherKey="UpdateUserId")]
		public EntitySet<MstCustomer> MstCustomers1
		{
			get
			{
				return this._MstCustomers1;
			}
			set
			{
				this._MstCustomers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstItem", Storage="_MstItems", ThisKey="Id", OtherKey="EntryUserId")]
		public EntitySet<MstItem> MstItems
		{
			get
			{
				return this._MstItems;
			}
			set
			{
				this._MstItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstItem1", Storage="_MstItems1", ThisKey="Id", OtherKey="UpdateUserId")]
		public EntitySet<MstItem> MstItems1
		{
			get
			{
				return this._MstItems1;
			}
			set
			{
				this._MstItems1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstItemGroup", Storage="_MstItemGroups", ThisKey="Id", OtherKey="EntryUserId")]
		public EntitySet<MstItemGroup> MstItemGroups
		{
			get
			{
				return this._MstItemGroups;
			}
			set
			{
				this._MstItemGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstItemGroup1", Storage="_MstItemGroups1", ThisKey="Id", OtherKey="UpdateUserId")]
		public EntitySet<MstItemGroup> MstItemGroups1
		{
			get
			{
				return this._MstItemGroups1;
			}
			set
			{
				this._MstItemGroups1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstSupplier", Storage="_MstSuppliers", ThisKey="Id", OtherKey="EntryUserId")]
		public EntitySet<MstSupplier> MstSuppliers
		{
			get
			{
				return this._MstSuppliers;
			}
			set
			{
				this._MstSuppliers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstSupplier1", Storage="_MstSuppliers1", ThisKey="Id", OtherKey="UpdateUserId")]
		public EntitySet<MstSupplier> MstSuppliers1
		{
			get
			{
				return this._MstSuppliers1;
			}
			set
			{
				this._MstSuppliers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUserForm", Storage="_MstUserForms", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<MstUserForm> MstUserForms
		{
			get
			{
				return this._MstUserForms;
			}
			set
			{
				this._MstUserForms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_SysAuditTrail", Storage="_SysAuditTrails", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<SysAuditTrail> SysAuditTrails
		{
			get
			{
				return this._SysAuditTrails;
			}
			set
			{
				this._SysAuditTrails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_SysSalesLocked", Storage="_SysSalesLockeds", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<SysSalesLocked> SysSalesLockeds
		{
			get
			{
				return this._SysSalesLockeds;
			}
			set
			{
				this._SysSalesLockeds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection", Storage="_TrnCollections", ThisKey="Id", OtherKey="PreparedBy")]
		public EntitySet<TrnCollection> TrnCollections
		{
			get
			{
				return this._TrnCollections;
			}
			set
			{
				this._TrnCollections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection1", Storage="_TrnCollections1", ThisKey="Id", OtherKey="CheckedBy")]
		public EntitySet<TrnCollection> TrnCollections1
		{
			get
			{
				return this._TrnCollections1;
			}
			set
			{
				this._TrnCollections1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection2", Storage="_TrnCollections2", ThisKey="Id", OtherKey="ApprovedBy")]
		public EntitySet<TrnCollection> TrnCollections2
		{
			get
			{
				return this._TrnCollections2;
			}
			set
			{
				this._TrnCollections2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection3", Storage="_TrnCollections3", ThisKey="Id", OtherKey="EntryUserId")]
		public EntitySet<TrnCollection> TrnCollections3
		{
			get
			{
				return this._TrnCollections3;
			}
			set
			{
				this._TrnCollections3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection4", Storage="_TrnCollections4", ThisKey="Id", OtherKey="UpdateUserId")]
		public EntitySet<TrnCollection> TrnCollections4
		{
			get
			{
				return this._TrnCollections4;
			}
			set
			{
				this._TrnCollections4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDebitCreditMemo", Storage="_TrnDebitCreditMemos", ThisKey="Id", OtherKey="PreparedBy")]
		public EntitySet<TrnDebitCreditMemo> TrnDebitCreditMemos
		{
			get
			{
				return this._TrnDebitCreditMemos;
			}
			set
			{
				this._TrnDebitCreditMemos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDebitCreditMemo1", Storage="_TrnDebitCreditMemos1", ThisKey="Id", OtherKey="CheckedBy")]
		public EntitySet<TrnDebitCreditMemo> TrnDebitCreditMemos1
		{
			get
			{
				return this._TrnDebitCreditMemos1;
			}
			set
			{
				this._TrnDebitCreditMemos1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDebitCreditMemo2", Storage="_TrnDebitCreditMemos2", ThisKey="Id", OtherKey="ApprovedBy")]
		public EntitySet<TrnDebitCreditMemo> TrnDebitCreditMemos2
		{
			get
			{
				return this._TrnDebitCreditMemos2;
			}
			set
			{
				this._TrnDebitCreditMemos2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDebitCreditMemo3", Storage="_TrnDebitCreditMemos3", ThisKey="Id", OtherKey="EntryUserId")]
		public EntitySet<TrnDebitCreditMemo> TrnDebitCreditMemos3
		{
			get
			{
				return this._TrnDebitCreditMemos3;
			}
			set
			{
				this._TrnDebitCreditMemos3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDebitCreditMemo4", Storage="_TrnDebitCreditMemos4", ThisKey="Id", OtherKey="UpdateUserId")]
		public EntitySet<TrnDebitCreditMemo> TrnDebitCreditMemos4
		{
			get
			{
				return this._TrnDebitCreditMemos4;
			}
			set
			{
				this._TrnDebitCreditMemos4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement", Storage="_TrnDisbursements", ThisKey="Id", OtherKey="PreparedBy")]
		public EntitySet<TrnDisbursement> TrnDisbursements
		{
			get
			{
				return this._TrnDisbursements;
			}
			set
			{
				this._TrnDisbursements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement1", Storage="_TrnDisbursements1", ThisKey="Id", OtherKey="CheckedBy")]
		public EntitySet<TrnDisbursement> TrnDisbursements1
		{
			get
			{
				return this._TrnDisbursements1;
			}
			set
			{
				this._TrnDisbursements1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement2", Storage="_TrnDisbursements2", ThisKey="Id", OtherKey="ApprovedBy")]
		public EntitySet<TrnDisbursement> TrnDisbursements2
		{
			get
			{
				return this._TrnDisbursements2;
			}
			set
			{
				this._TrnDisbursements2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement3", Storage="_TrnDisbursements3", ThisKey="Id", OtherKey="EntryUserId")]
		public EntitySet<TrnDisbursement> TrnDisbursements3
		{
			get
			{
				return this._TrnDisbursements3;
			}
			set
			{
				this._TrnDisbursements3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement4", Storage="_TrnDisbursements4", ThisKey="Id", OtherKey="UpdateUserId")]
		public EntitySet<TrnDisbursement> TrnDisbursements4
		{
			get
			{
				return this._TrnDisbursements4;
			}
			set
			{
				this._TrnDisbursements4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder", Storage="_TrnPurchaseOrders", ThisKey="Id", OtherKey="PreparedBy")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders
		{
			get
			{
				return this._TrnPurchaseOrders;
			}
			set
			{
				this._TrnPurchaseOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder1", Storage="_TrnPurchaseOrders1", ThisKey="Id", OtherKey="CheckedBy")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders1
		{
			get
			{
				return this._TrnPurchaseOrders1;
			}
			set
			{
				this._TrnPurchaseOrders1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder2", Storage="_TrnPurchaseOrders2", ThisKey="Id", OtherKey="ApprovedBy")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders2
		{
			get
			{
				return this._TrnPurchaseOrders2;
			}
			set
			{
				this._TrnPurchaseOrders2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder3", Storage="_TrnPurchaseOrders3", ThisKey="Id", OtherKey="EntryUserId")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders3
		{
			get
			{
				return this._TrnPurchaseOrders3;
			}
			set
			{
				this._TrnPurchaseOrders3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder4", Storage="_TrnPurchaseOrders4", ThisKey="Id", OtherKey="UpdateUserId")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders4
		{
			get
			{
				return this._TrnPurchaseOrders4;
			}
			set
			{
				this._TrnPurchaseOrders4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut", Storage="_TrnStockOuts", ThisKey="Id", OtherKey="PreparedBy")]
		public EntitySet<TrnStockOut> TrnStockOuts
		{
			get
			{
				return this._TrnStockOuts;
			}
			set
			{
				this._TrnStockOuts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut1", Storage="_TrnStockOuts1", ThisKey="Id", OtherKey="CheckedBy")]
		public EntitySet<TrnStockOut> TrnStockOuts1
		{
			get
			{
				return this._TrnStockOuts1;
			}
			set
			{
				this._TrnStockOuts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut2", Storage="_TrnStockOuts2", ThisKey="Id", OtherKey="ApprovedBy")]
		public EntitySet<TrnStockOut> TrnStockOuts2
		{
			get
			{
				return this._TrnStockOuts2;
			}
			set
			{
				this._TrnStockOuts2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut3", Storage="_TrnStockOuts3", ThisKey="Id", OtherKey="EntryUserId")]
		public EntitySet<TrnStockOut> TrnStockOuts3
		{
			get
			{
				return this._TrnStockOuts3;
			}
			set
			{
				this._TrnStockOuts3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut4", Storage="_TrnStockOuts4", ThisKey="Id", OtherKey="UpdateUserId")]
		public EntitySet<TrnStockOut> TrnStockOuts4
		{
			get
			{
				return this._TrnStockOuts4;
			}
			set
			{
				this._TrnStockOuts4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesLine", Storage="_TrnSalesLines", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<TrnSalesLine> TrnSalesLines
		{
			get
			{
				return this._TrnSalesLines;
			}
			set
			{
				this._TrnSalesLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSale", Storage="_TrnSales", ThisKey="Id", OtherKey="PreparedBy")]
		public EntitySet<TrnSale> TrnSales
		{
			get
			{
				return this._TrnSales;
			}
			set
			{
				this._TrnSales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSale1", Storage="_TrnSales1", ThisKey="Id", OtherKey="CheckedBy")]
		public EntitySet<TrnSale> TrnSales1
		{
			get
			{
				return this._TrnSales1;
			}
			set
			{
				this._TrnSales1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSale2", Storage="_TrnSales2", ThisKey="Id", OtherKey="ApprovedBy")]
		public EntitySet<TrnSale> TrnSales2
		{
			get
			{
				return this._TrnSales2;
			}
			set
			{
				this._TrnSales2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSale3", Storage="_TrnSales3", ThisKey="Id", OtherKey="EntryUserId")]
		public EntitySet<TrnSale> TrnSales3
		{
			get
			{
				return this._TrnSales3;
			}
			set
			{
				this._TrnSales3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSale4", Storage="_TrnSales4", ThisKey="Id", OtherKey="UpdateUserId")]
		public EntitySet<TrnSale> TrnSales4
		{
			get
			{
				return this._TrnSales4;
			}
			set
			{
				this._TrnSales4.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstCustomers(MstCustomer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstCustomers(MstCustomer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstCustomers1(MstCustomer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstCustomers1(MstCustomer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstItems(MstItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstItems(MstItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstItems1(MstItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstItems1(MstItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstItemGroups(MstItemGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstItemGroups(MstItemGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstItemGroups1(MstItemGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstItemGroups1(MstItemGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstSuppliers(MstSupplier entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstSuppliers(MstSupplier entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstSuppliers1(MstSupplier entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstSuppliers1(MstSupplier entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstUserForms(MstUserForm entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstUserForms(MstUserForm entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_SysAuditTrails(SysAuditTrail entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_SysAuditTrails(SysAuditTrail entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_SysSalesLockeds(SysSalesLocked entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_SysSalesLockeds(SysSalesLocked entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnCollections1(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnCollections1(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnCollections2(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnCollections2(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnCollections3(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnCollections3(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnCollections4(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnCollections4(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnDebitCreditMemos(TrnDebitCreditMemo entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnDebitCreditMemos(TrnDebitCreditMemo entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnDebitCreditMemos1(TrnDebitCreditMemo entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnDebitCreditMemos1(TrnDebitCreditMemo entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnDebitCreditMemos2(TrnDebitCreditMemo entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnDebitCreditMemos2(TrnDebitCreditMemo entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnDebitCreditMemos3(TrnDebitCreditMemo entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnDebitCreditMemos3(TrnDebitCreditMemo entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnDebitCreditMemos4(TrnDebitCreditMemo entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnDebitCreditMemos4(TrnDebitCreditMemo entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnDisbursements1(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnDisbursements1(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnDisbursements2(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnDisbursements2(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnDisbursements3(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnDisbursements3(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnDisbursements4(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnDisbursements4(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnPurchaseOrders1(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnPurchaseOrders1(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnPurchaseOrders2(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnPurchaseOrders2(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnPurchaseOrders3(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnPurchaseOrders3(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnPurchaseOrders4(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnPurchaseOrders4(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnStockOuts1(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnStockOuts1(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnStockOuts2(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnStockOuts2(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnStockOuts3(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnStockOuts3(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnStockOuts4(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnStockOuts4(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnSalesLines(TrnSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnSalesLines(TrnSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnSales(TrnSale entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnSales(TrnSale entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnSales1(TrnSale entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnSales1(TrnSale entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnSales2(TrnSale entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnSales2(TrnSale entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnSales3(TrnSale entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnSales3(TrnSale entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnSales4(TrnSale entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnSales4(TrnSale entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstUserForm")]
	public partial class MstUserForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _FormId;
		
		private int _UserId;
		
		private bool _CanDelete;
		
		private bool _CanAdd;
		
		private bool _CanLock;
		
		private bool _CanUnlock;
		
		private bool _CanPrint;
		
		private bool _CanPreview;
		
		private bool _CanEdit;
		
		private bool _CanTender;
		
		private bool _CanDiscount;
		
		private bool _CanView;
		
		private bool _CanSplit;
		
		private bool _CanCancel;
		
		private bool _CanReturn;
		
		private EntityRef<MstUser> _MstUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFormIdChanging(int value);
    partial void OnFormIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnCanDeleteChanging(bool value);
    partial void OnCanDeleteChanged();
    partial void OnCanAddChanging(bool value);
    partial void OnCanAddChanged();
    partial void OnCanLockChanging(bool value);
    partial void OnCanLockChanged();
    partial void OnCanUnlockChanging(bool value);
    partial void OnCanUnlockChanged();
    partial void OnCanPrintChanging(bool value);
    partial void OnCanPrintChanged();
    partial void OnCanPreviewChanging(bool value);
    partial void OnCanPreviewChanged();
    partial void OnCanEditChanging(bool value);
    partial void OnCanEditChanged();
    partial void OnCanTenderChanging(bool value);
    partial void OnCanTenderChanged();
    partial void OnCanDiscountChanging(bool value);
    partial void OnCanDiscountChanged();
    partial void OnCanViewChanging(bool value);
    partial void OnCanViewChanged();
    partial void OnCanSplitChanging(bool value);
    partial void OnCanSplitChanged();
    partial void OnCanCancelChanging(bool value);
    partial void OnCanCancelChanged();
    partial void OnCanReturnChanging(bool value);
    partial void OnCanReturnChanged();
    #endregion
		
		public MstUserForm()
		{
			this._MstUser = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormId", DbType="Int NOT NULL")]
		public int FormId
		{
			get
			{
				return this._FormId;
			}
			set
			{
				if ((this._FormId != value))
				{
					this.OnFormIdChanging(value);
					this.SendPropertyChanging();
					this._FormId = value;
					this.SendPropertyChanged("FormId");
					this.OnFormIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanDelete", DbType="Bit NOT NULL")]
		public bool CanDelete
		{
			get
			{
				return this._CanDelete;
			}
			set
			{
				if ((this._CanDelete != value))
				{
					this.OnCanDeleteChanging(value);
					this.SendPropertyChanging();
					this._CanDelete = value;
					this.SendPropertyChanged("CanDelete");
					this.OnCanDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAdd", DbType="Bit NOT NULL")]
		public bool CanAdd
		{
			get
			{
				return this._CanAdd;
			}
			set
			{
				if ((this._CanAdd != value))
				{
					this.OnCanAddChanging(value);
					this.SendPropertyChanging();
					this._CanAdd = value;
					this.SendPropertyChanged("CanAdd");
					this.OnCanAddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanLock", DbType="Bit NOT NULL")]
		public bool CanLock
		{
			get
			{
				return this._CanLock;
			}
			set
			{
				if ((this._CanLock != value))
				{
					this.OnCanLockChanging(value);
					this.SendPropertyChanging();
					this._CanLock = value;
					this.SendPropertyChanged("CanLock");
					this.OnCanLockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanUnlock", DbType="Bit NOT NULL")]
		public bool CanUnlock
		{
			get
			{
				return this._CanUnlock;
			}
			set
			{
				if ((this._CanUnlock != value))
				{
					this.OnCanUnlockChanging(value);
					this.SendPropertyChanging();
					this._CanUnlock = value;
					this.SendPropertyChanged("CanUnlock");
					this.OnCanUnlockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanPrint", DbType="Bit NOT NULL")]
		public bool CanPrint
		{
			get
			{
				return this._CanPrint;
			}
			set
			{
				if ((this._CanPrint != value))
				{
					this.OnCanPrintChanging(value);
					this.SendPropertyChanging();
					this._CanPrint = value;
					this.SendPropertyChanged("CanPrint");
					this.OnCanPrintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanPreview", DbType="Bit NOT NULL")]
		public bool CanPreview
		{
			get
			{
				return this._CanPreview;
			}
			set
			{
				if ((this._CanPreview != value))
				{
					this.OnCanPreviewChanging(value);
					this.SendPropertyChanging();
					this._CanPreview = value;
					this.SendPropertyChanged("CanPreview");
					this.OnCanPreviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanEdit", DbType="Bit NOT NULL")]
		public bool CanEdit
		{
			get
			{
				return this._CanEdit;
			}
			set
			{
				if ((this._CanEdit != value))
				{
					this.OnCanEditChanging(value);
					this.SendPropertyChanging();
					this._CanEdit = value;
					this.SendPropertyChanged("CanEdit");
					this.OnCanEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanTender", DbType="Bit NOT NULL")]
		public bool CanTender
		{
			get
			{
				return this._CanTender;
			}
			set
			{
				if ((this._CanTender != value))
				{
					this.OnCanTenderChanging(value);
					this.SendPropertyChanging();
					this._CanTender = value;
					this.SendPropertyChanged("CanTender");
					this.OnCanTenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanDiscount", DbType="Bit NOT NULL")]
		public bool CanDiscount
		{
			get
			{
				return this._CanDiscount;
			}
			set
			{
				if ((this._CanDiscount != value))
				{
					this.OnCanDiscountChanging(value);
					this.SendPropertyChanging();
					this._CanDiscount = value;
					this.SendPropertyChanged("CanDiscount");
					this.OnCanDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanView", DbType="Bit NOT NULL")]
		public bool CanView
		{
			get
			{
				return this._CanView;
			}
			set
			{
				if ((this._CanView != value))
				{
					this.OnCanViewChanging(value);
					this.SendPropertyChanging();
					this._CanView = value;
					this.SendPropertyChanged("CanView");
					this.OnCanViewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanSplit", DbType="Bit NOT NULL")]
		public bool CanSplit
		{
			get
			{
				return this._CanSplit;
			}
			set
			{
				if ((this._CanSplit != value))
				{
					this.OnCanSplitChanging(value);
					this.SendPropertyChanging();
					this._CanSplit = value;
					this.SendPropertyChanged("CanSplit");
					this.OnCanSplitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanCancel", DbType="Bit NOT NULL")]
		public bool CanCancel
		{
			get
			{
				return this._CanCancel;
			}
			set
			{
				if ((this._CanCancel != value))
				{
					this.OnCanCancelChanging(value);
					this.SendPropertyChanging();
					this._CanCancel = value;
					this.SendPropertyChanged("CanCancel");
					this.OnCanCancelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanReturn", DbType="Bit NOT NULL")]
		public bool CanReturn
		{
			get
			{
				return this._CanReturn;
			}
			set
			{
				if ((this._CanReturn != value))
				{
					this.OnCanReturnChanging(value);
					this.SendPropertyChanging();
					this._CanReturn = value;
					this.SendPropertyChanged("CanReturn");
					this.OnCanReturnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUserForm", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstUserForms.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstUserForms.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysAuditTrail")]
	public partial class SysAuditTrail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private System.DateTime _AuditDate;
		
		private string _TableInformation;
		
		private string _RecordInformation;
		
		private string _FormInformation;
		
		private string _ActionInformation;
		
		private EntityRef<MstUser> _MstUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnAuditDateChanging(System.DateTime value);
    partial void OnAuditDateChanged();
    partial void OnTableInformationChanging(string value);
    partial void OnTableInformationChanged();
    partial void OnRecordInformationChanging(string value);
    partial void OnRecordInformationChanged();
    partial void OnFormInformationChanging(string value);
    partial void OnFormInformationChanged();
    partial void OnActionInformationChanging(string value);
    partial void OnActionInformationChanged();
    #endregion
		
		public SysAuditTrail()
		{
			this._MstUser = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime NOT NULL")]
		public System.DateTime AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableInformation", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TableInformation
		{
			get
			{
				return this._TableInformation;
			}
			set
			{
				if ((this._TableInformation != value))
				{
					this.OnTableInformationChanging(value);
					this.SendPropertyChanging();
					this._TableInformation = value;
					this.SendPropertyChanged("TableInformation");
					this.OnTableInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordInformation", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string RecordInformation
		{
			get
			{
				return this._RecordInformation;
			}
			set
			{
				if ((this._RecordInformation != value))
				{
					this.OnRecordInformationChanging(value);
					this.SendPropertyChanging();
					this._RecordInformation = value;
					this.SendPropertyChanged("RecordInformation");
					this.OnRecordInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormInformation", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FormInformation
		{
			get
			{
				return this._FormInformation;
			}
			set
			{
				if ((this._FormInformation != value))
				{
					this.OnFormInformationChanging(value);
					this.SendPropertyChanging();
					this._FormInformation = value;
					this.SendPropertyChanged("FormInformation");
					this.OnFormInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionInformation", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ActionInformation
		{
			get
			{
				return this._ActionInformation;
			}
			set
			{
				if ((this._ActionInformation != value))
				{
					this.OnActionInformationChanging(value);
					this.SendPropertyChanging();
					this._ActionInformation = value;
					this.SendPropertyChanged("ActionInformation");
					this.OnActionInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_SysAuditTrail", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.SysAuditTrails.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.SysAuditTrails.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysForm")]
	public partial class SysForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Form;
		
		private string _FormDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFormChanging(string value);
    partial void OnFormChanged();
    partial void OnFormDescriptionChanging(string value);
    partial void OnFormDescriptionChanged();
    #endregion
		
		public SysForm()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Form
		{
			get
			{
				return this._Form;
			}
			set
			{
				if ((this._Form != value))
				{
					this.OnFormChanging(value);
					this.SendPropertyChanging();
					this._Form = value;
					this.SendPropertyChanged("Form");
					this.OnFormChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormDescription", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FormDescription
		{
			get
			{
				return this._FormDescription;
			}
			set
			{
				if ((this._FormDescription != value))
				{
					this.OnFormDescriptionChanging(value);
					this.SendPropertyChanging();
					this._FormDescription = value;
					this.SendPropertyChanged("FormDescription");
					this.OnFormDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysSalesLocked")]
	public partial class SysSalesLocked : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SalesId;
		
		private int _UserId;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<TrnSale> _TrnSale;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSalesIdChanging(int value);
    partial void OnSalesIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    #endregion
		
		public SysSalesLocked()
		{
			this._MstUser = default(EntityRef<MstUser>);
			this._TrnSale = default(EntityRef<TrnSale>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesId", DbType="Int NOT NULL")]
		public int SalesId
		{
			get
			{
				return this._SalesId;
			}
			set
			{
				if ((this._SalesId != value))
				{
					if (this._TrnSale.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesIdChanging(value);
					this.SendPropertyChanging();
					this._SalesId = value;
					this.SendPropertyChanged("SalesId");
					this.OnSalesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_SysSalesLocked", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.SysSalesLockeds.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.SysSalesLockeds.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSale_SysSalesLocked", Storage="_TrnSale", ThisKey="SalesId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnSale TrnSale
		{
			get
			{
				return this._TrnSale.Entity;
			}
			set
			{
				TrnSale previousValue = this._TrnSale.Entity;
				if (((previousValue != value) 
							|| (this._TrnSale.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSale.Entity = null;
						previousValue.SysSalesLockeds.Remove(this);
					}
					this._TrnSale.Entity = value;
					if ((value != null))
					{
						value.SysSalesLockeds.Add(this);
						this._SalesId = value.Id;
					}
					else
					{
						this._SalesId = default(int);
					}
					this.SendPropertyChanged("TrnSale");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnCollection")]
	public partial class TrnCollection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PeriodId;
		
		private System.DateTime _CollectionDate;
		
		private string _CollectionNumber;
		
		private int _TerminalId;
		
		private string _ManualORNumber;
		
		private int _CustomerId;
		
		private string _Remarks;
		
		private System.Nullable<int> _SalesId;
		
		private decimal _SalesBalanceAmount;
		
		private decimal _Amount;
		
		private decimal _TenderAmount;
		
		private decimal _ChangeAmount;
		
		private int _PreparedBy;
		
		private int _CheckedBy;
		
		private int _ApprovedBy;
		
		private bool _IsCancelled;
		
		private bool _IsLocked;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private EntitySet<TrnCollectionLine> _TrnCollectionLines;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntitySet<TrnStockIn> _TrnStockIns;
		
		private EntityRef<MstCustomer> _MstCustomer;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
		private EntityRef<MstTerminal> _MstTerminal;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
		private EntityRef<TrnSale> _TrnSale;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPeriodIdChanging(int value);
    partial void OnPeriodIdChanged();
    partial void OnCollectionDateChanging(System.DateTime value);
    partial void OnCollectionDateChanged();
    partial void OnCollectionNumberChanging(string value);
    partial void OnCollectionNumberChanged();
    partial void OnTerminalIdChanging(int value);
    partial void OnTerminalIdChanged();
    partial void OnManualORNumberChanging(string value);
    partial void OnManualORNumberChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnSalesIdChanging(System.Nullable<int> value);
    partial void OnSalesIdChanged();
    partial void OnSalesBalanceAmountChanging(decimal value);
    partial void OnSalesBalanceAmountChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnTenderAmountChanging(decimal value);
    partial void OnTenderAmountChanged();
    partial void OnChangeAmountChanging(decimal value);
    partial void OnChangeAmountChanged();
    partial void OnPreparedByChanging(int value);
    partial void OnPreparedByChanged();
    partial void OnCheckedByChanging(int value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(int value);
    partial void OnApprovedByChanged();
    partial void OnIsCancelledChanging(bool value);
    partial void OnIsCancelledChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    #endregion
		
		public TrnCollection()
		{
			this._TrnCollectionLines = new EntitySet<TrnCollectionLine>(new Action<TrnCollectionLine>(this.attach_TrnCollectionLines), new Action<TrnCollectionLine>(this.detach_TrnCollectionLines));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._TrnStockIns = new EntitySet<TrnStockIn>(new Action<TrnStockIn>(this.attach_TrnStockIns), new Action<TrnStockIn>(this.detach_TrnStockIns));
			this._MstCustomer = default(EntityRef<MstCustomer>);
			this._MstPeriod = default(EntityRef<MstPeriod>);
			this._MstTerminal = default(EntityRef<MstTerminal>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			this._TrnSale = default(EntityRef<TrnSale>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="Int NOT NULL")]
		public int PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionDate", DbType="DateTime NOT NULL")]
		public System.DateTime CollectionDate
		{
			get
			{
				return this._CollectionDate;
			}
			set
			{
				if ((this._CollectionDate != value))
				{
					this.OnCollectionDateChanging(value);
					this.SendPropertyChanging();
					this._CollectionDate = value;
					this.SendPropertyChanged("CollectionDate");
					this.OnCollectionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CollectionNumber
		{
			get
			{
				return this._CollectionNumber;
			}
			set
			{
				if ((this._CollectionNumber != value))
				{
					this.OnCollectionNumberChanging(value);
					this.SendPropertyChanging();
					this._CollectionNumber = value;
					this.SendPropertyChanged("CollectionNumber");
					this.OnCollectionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminalId", DbType="Int NOT NULL")]
		public int TerminalId
		{
			get
			{
				return this._TerminalId;
			}
			set
			{
				if ((this._TerminalId != value))
				{
					if (this._MstTerminal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTerminalIdChanging(value);
					this.SendPropertyChanging();
					this._TerminalId = value;
					this.SendPropertyChanged("TerminalId");
					this.OnTerminalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualORNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ManualORNumber
		{
			get
			{
				return this._ManualORNumber;
			}
			set
			{
				if ((this._ManualORNumber != value))
				{
					this.OnManualORNumberChanging(value);
					this.SendPropertyChanging();
					this._ManualORNumber = value;
					this.SendPropertyChanged("ManualORNumber");
					this.OnManualORNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._MstCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesId", DbType="Int")]
		public System.Nullable<int> SalesId
		{
			get
			{
				return this._SalesId;
			}
			set
			{
				if ((this._SalesId != value))
				{
					if (this._TrnSale.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesIdChanging(value);
					this.SendPropertyChanging();
					this._SalesId = value;
					this.SendPropertyChanged("SalesId");
					this.OnSalesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesBalanceAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal SalesBalanceAmount
		{
			get
			{
				return this._SalesBalanceAmount;
			}
			set
			{
				if ((this._SalesBalanceAmount != value))
				{
					this.OnSalesBalanceAmountChanging(value);
					this.SendPropertyChanging();
					this._SalesBalanceAmount = value;
					this.SendPropertyChanged("SalesBalanceAmount");
					this.OnSalesBalanceAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenderAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TenderAmount
		{
			get
			{
				return this._TenderAmount;
			}
			set
			{
				if ((this._TenderAmount != value))
				{
					this.OnTenderAmountChanging(value);
					this.SendPropertyChanging();
					this._TenderAmount = value;
					this.SendPropertyChanged("TenderAmount");
					this.OnTenderAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal ChangeAmount
		{
			get
			{
				return this._ChangeAmount;
			}
			set
			{
				if ((this._ChangeAmount != value))
				{
					this.OnChangeAmountChanging(value);
					this.SendPropertyChanging();
					this._ChangeAmount = value;
					this.SendPropertyChanged("ChangeAmount");
					this.OnChangeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int NOT NULL")]
		public int PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="Int NOT NULL")]
		public int CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int NOT NULL")]
		public int ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancelled", DbType="Bit NOT NULL")]
		public bool IsCancelled
		{
			get
			{
				return this._IsCancelled;
			}
			set
			{
				if ((this._IsCancelled != value))
				{
					this.OnIsCancelledChanging(value);
					this.SendPropertyChanging();
					this._IsCancelled = value;
					this.SendPropertyChanged("IsCancelled");
					this.OnIsCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnCollection_TrnCollectionLine", Storage="_TrnCollectionLines", ThisKey="Id", OtherKey="CollectionId")]
		public EntitySet<TrnCollectionLine> TrnCollectionLines
		{
			get
			{
				return this._TrnCollectionLines;
			}
			set
			{
				this._TrnCollectionLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnCollection_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="CollectionId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnCollection_TrnStockIn", Storage="_TrnStockIns", ThisKey="Id", OtherKey="CollectionId")]
		public EntitySet<TrnStockIn> TrnStockIns
		{
			get
			{
				return this._TrnStockIns;
			}
			set
			{
				this._TrnStockIns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCustomer_TrnCollection", Storage="_MstCustomer", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public MstCustomer MstCustomer
		{
			get
			{
				return this._MstCustomer.Entity;
			}
			set
			{
				MstCustomer previousValue = this._MstCustomer.Entity;
				if (((previousValue != value) 
							|| (this._MstCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstCustomer.Entity = null;
						previousValue.TrnCollections.Remove(this);
					}
					this._MstCustomer.Entity = value;
					if ((value != null))
					{
						value.TrnCollections.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("MstCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnCollection", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.TrnCollections.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.TrnCollections.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(int);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerminal_TrnCollection", Storage="_MstTerminal", ThisKey="TerminalId", OtherKey="Id", IsForeignKey=true)]
		public MstTerminal MstTerminal
		{
			get
			{
				return this._MstTerminal.Entity;
			}
			set
			{
				MstTerminal previousValue = this._MstTerminal.Entity;
				if (((previousValue != value) 
							|| (this._MstTerminal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTerminal.Entity = null;
						previousValue.TrnCollections.Remove(this);
					}
					this._MstTerminal.Entity = value;
					if ((value != null))
					{
						value.TrnCollections.Add(this);
						this._TerminalId = value.Id;
					}
					else
					{
						this._TerminalId = default(int);
					}
					this.SendPropertyChanged("MstTerminal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection", Storage="_MstUser", ThisKey="PreparedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnCollections.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnCollections.Add(this);
						this._PreparedBy = value.Id;
					}
					else
					{
						this._PreparedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection1", Storage="_MstUser1", ThisKey="CheckedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnCollections1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnCollections1.Add(this);
						this._CheckedBy = value.Id;
					}
					else
					{
						this._CheckedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection2", Storage="_MstUser2", ThisKey="ApprovedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnCollections2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnCollections2.Add(this);
						this._ApprovedBy = value.Id;
					}
					else
					{
						this._ApprovedBy = default(int);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection3", Storage="_MstUser3", ThisKey="EntryUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnCollections3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnCollections3.Add(this);
						this._EntryUserId = value.Id;
					}
					else
					{
						this._EntryUserId = default(int);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection4", Storage="_MstUser4", ThisKey="UpdateUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnCollections4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnCollections4.Add(this);
						this._UpdateUserId = value.Id;
					}
					else
					{
						this._UpdateUserId = default(int);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSale_TrnCollection", Storage="_TrnSale", ThisKey="SalesId", OtherKey="Id", IsForeignKey=true)]
		public TrnSale TrnSale
		{
			get
			{
				return this._TrnSale.Entity;
			}
			set
			{
				TrnSale previousValue = this._TrnSale.Entity;
				if (((previousValue != value) 
							|| (this._TrnSale.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSale.Entity = null;
						previousValue.TrnCollections.Remove(this);
					}
					this._TrnSale.Entity = value;
					if ((value != null))
					{
						value.TrnCollections.Add(this);
						this._SalesId = value.Id;
					}
					else
					{
						this._SalesId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnSale");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnCollection = this;
		}
		
		private void detach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnCollection = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnCollection = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnCollection = null;
		}
		
		private void attach_TrnStockIns(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.TrnCollection = this;
		}
		
		private void detach_TrnStockIns(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.TrnCollection = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnCollectionLine")]
	public partial class TrnCollectionLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CollectionId;
		
		private decimal _Amount;
		
		private int _PayTypeId;
		
		private string _CheckNumber;
		
		private System.Nullable<System.DateTime> _CheckDate;
		
		private string _CheckBank;
		
		private string _CreditCardVerificationCode;
		
		private string _CreditCardNumber;
		
		private string _CreditCardType;
		
		private string _CreditCardBank;
		
		private string _GiftCertificateNumber;
		
		private string _OtherInformation;
		
		private System.Nullable<int> _StockInId;
		
		private int _AccountId;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstPayType> _MstPayType;
		
		private EntityRef<TrnCollection> _TrnCollection;
		
		private EntityRef<TrnStockIn> _TrnStockIn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCollectionIdChanging(int value);
    partial void OnCollectionIdChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnPayTypeIdChanging(int value);
    partial void OnPayTypeIdChanged();
    partial void OnCheckNumberChanging(string value);
    partial void OnCheckNumberChanged();
    partial void OnCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCheckDateChanged();
    partial void OnCheckBankChanging(string value);
    partial void OnCheckBankChanged();
    partial void OnCreditCardVerificationCodeChanging(string value);
    partial void OnCreditCardVerificationCodeChanged();
    partial void OnCreditCardNumberChanging(string value);
    partial void OnCreditCardNumberChanged();
    partial void OnCreditCardTypeChanging(string value);
    partial void OnCreditCardTypeChanged();
    partial void OnCreditCardBankChanging(string value);
    partial void OnCreditCardBankChanged();
    partial void OnGiftCertificateNumberChanging(string value);
    partial void OnGiftCertificateNumberChanged();
    partial void OnOtherInformationChanging(string value);
    partial void OnOtherInformationChanged();
    partial void OnStockInIdChanging(System.Nullable<int> value);
    partial void OnStockInIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    #endregion
		
		public TrnCollectionLine()
		{
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstPayType = default(EntityRef<MstPayType>);
			this._TrnCollection = default(EntityRef<TrnCollection>);
			this._TrnStockIn = default(EntityRef<TrnStockIn>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionId", DbType="Int NOT NULL")]
		public int CollectionId
		{
			get
			{
				return this._CollectionId;
			}
			set
			{
				if ((this._CollectionId != value))
				{
					if (this._TrnCollection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCollectionIdChanging(value);
					this.SendPropertyChanging();
					this._CollectionId = value;
					this.SendPropertyChanged("CollectionId");
					this.OnCollectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayTypeId", DbType="Int NOT NULL")]
		public int PayTypeId
		{
			get
			{
				return this._PayTypeId;
			}
			set
			{
				if ((this._PayTypeId != value))
				{
					if (this._MstPayType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PayTypeId = value;
					this.SendPropertyChanged("PayTypeId");
					this.OnPayTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckNumber", DbType="NVarChar(50)")]
		public string CheckNumber
		{
			get
			{
				return this._CheckNumber;
			}
			set
			{
				if ((this._CheckNumber != value))
				{
					this.OnCheckNumberChanging(value);
					this.SendPropertyChanging();
					this._CheckNumber = value;
					this.SendPropertyChanged("CheckNumber");
					this.OnCheckNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckBank", DbType="NVarChar(50)")]
		public string CheckBank
		{
			get
			{
				return this._CheckBank;
			}
			set
			{
				if ((this._CheckBank != value))
				{
					this.OnCheckBankChanging(value);
					this.SendPropertyChanging();
					this._CheckBank = value;
					this.SendPropertyChanged("CheckBank");
					this.OnCheckBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCardVerificationCode", DbType="NVarChar(50)")]
		public string CreditCardVerificationCode
		{
			get
			{
				return this._CreditCardVerificationCode;
			}
			set
			{
				if ((this._CreditCardVerificationCode != value))
				{
					this.OnCreditCardVerificationCodeChanging(value);
					this.SendPropertyChanging();
					this._CreditCardVerificationCode = value;
					this.SendPropertyChanged("CreditCardVerificationCode");
					this.OnCreditCardVerificationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCardNumber", DbType="NVarChar(50)")]
		public string CreditCardNumber
		{
			get
			{
				return this._CreditCardNumber;
			}
			set
			{
				if ((this._CreditCardNumber != value))
				{
					this.OnCreditCardNumberChanging(value);
					this.SendPropertyChanging();
					this._CreditCardNumber = value;
					this.SendPropertyChanged("CreditCardNumber");
					this.OnCreditCardNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCardType", DbType="NVarChar(50)")]
		public string CreditCardType
		{
			get
			{
				return this._CreditCardType;
			}
			set
			{
				if ((this._CreditCardType != value))
				{
					this.OnCreditCardTypeChanging(value);
					this.SendPropertyChanging();
					this._CreditCardType = value;
					this.SendPropertyChanged("CreditCardType");
					this.OnCreditCardTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCardBank", DbType="NVarChar(50)")]
		public string CreditCardBank
		{
			get
			{
				return this._CreditCardBank;
			}
			set
			{
				if ((this._CreditCardBank != value))
				{
					this.OnCreditCardBankChanging(value);
					this.SendPropertyChanging();
					this._CreditCardBank = value;
					this.SendPropertyChanged("CreditCardBank");
					this.OnCreditCardBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiftCertificateNumber", DbType="NVarChar(50)")]
		public string GiftCertificateNumber
		{
			get
			{
				return this._GiftCertificateNumber;
			}
			set
			{
				if ((this._GiftCertificateNumber != value))
				{
					this.OnGiftCertificateNumberChanging(value);
					this.SendPropertyChanging();
					this._GiftCertificateNumber = value;
					this.SendPropertyChanged("GiftCertificateNumber");
					this.OnGiftCertificateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherInformation", DbType="NVarChar(255)")]
		public string OtherInformation
		{
			get
			{
				return this._OtherInformation;
			}
			set
			{
				if ((this._OtherInformation != value))
				{
					this.OnOtherInformationChanging(value);
					this.SendPropertyChanging();
					this._OtherInformation = value;
					this.SendPropertyChanged("OtherInformation");
					this.OnOtherInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockInId", DbType="Int")]
		public System.Nullable<int> StockInId
		{
			get
			{
				return this._StockInId;
			}
			set
			{
				if ((this._StockInId != value))
				{
					if (this._TrnStockIn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStockInIdChanging(value);
					this.SendPropertyChanging();
					this._StockInId = value;
					this.SendPropertyChanged("StockInId");
					this.OnStockInIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnCollectionLine", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.TrnCollectionLines.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.TrnCollectionLines.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayType_TrnCollectionLine", Storage="_MstPayType", ThisKey="PayTypeId", OtherKey="Id", IsForeignKey=true)]
		public MstPayType MstPayType
		{
			get
			{
				return this._MstPayType.Entity;
			}
			set
			{
				MstPayType previousValue = this._MstPayType.Entity;
				if (((previousValue != value) 
							|| (this._MstPayType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPayType.Entity = null;
						previousValue.TrnCollectionLines.Remove(this);
					}
					this._MstPayType.Entity = value;
					if ((value != null))
					{
						value.TrnCollectionLines.Add(this);
						this._PayTypeId = value.Id;
					}
					else
					{
						this._PayTypeId = default(int);
					}
					this.SendPropertyChanged("MstPayType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnCollection_TrnCollectionLine", Storage="_TrnCollection", ThisKey="CollectionId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnCollection TrnCollection
		{
			get
			{
				return this._TrnCollection.Entity;
			}
			set
			{
				TrnCollection previousValue = this._TrnCollection.Entity;
				if (((previousValue != value) 
							|| (this._TrnCollection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnCollection.Entity = null;
						previousValue.TrnCollectionLines.Remove(this);
					}
					this._TrnCollection.Entity = value;
					if ((value != null))
					{
						value.TrnCollectionLines.Add(this);
						this._CollectionId = value.Id;
					}
					else
					{
						this._CollectionId = default(int);
					}
					this.SendPropertyChanged("TrnCollection");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_TrnCollectionLine", Storage="_TrnStockIn", ThisKey="StockInId", OtherKey="Id", IsForeignKey=true)]
		public TrnStockIn TrnStockIn
		{
			get
			{
				return this._TrnStockIn.Entity;
			}
			set
			{
				TrnStockIn previousValue = this._TrnStockIn.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockIn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockIn.Entity = null;
						previousValue.TrnCollectionLines.Remove(this);
					}
					this._TrnStockIn.Entity = value;
					if ((value != null))
					{
						value.TrnCollectionLines.Add(this);
						this._StockInId = value.Id;
					}
					else
					{
						this._StockInId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnStockIn");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnDebitCreditMemo")]
	public partial class TrnDebitCreditMemo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PeriodId;
		
		private string _DCMemoNumber;
		
		private System.DateTime _DCMemoDate;
		
		private string _Particulars;
		
		private int _PreparedBy;
		
		private int _CheckedBy;
		
		private int _ApprovedBy;
		
		private bool _IsLocked;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private EntitySet<TrnDebitCreditMemoLine> _TrnDebitCreditMemoLines;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPeriodIdChanging(int value);
    partial void OnPeriodIdChanged();
    partial void OnDCMemoNumberChanging(string value);
    partial void OnDCMemoNumberChanged();
    partial void OnDCMemoDateChanging(System.DateTime value);
    partial void OnDCMemoDateChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnPreparedByChanging(int value);
    partial void OnPreparedByChanged();
    partial void OnCheckedByChanging(int value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(int value);
    partial void OnApprovedByChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    #endregion
		
		public TrnDebitCreditMemo()
		{
			this._TrnDebitCreditMemoLines = new EntitySet<TrnDebitCreditMemoLine>(new Action<TrnDebitCreditMemoLine>(this.attach_TrnDebitCreditMemoLines), new Action<TrnDebitCreditMemoLine>(this.detach_TrnDebitCreditMemoLines));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._MstPeriod = default(EntityRef<MstPeriod>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="Int NOT NULL")]
		public int PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCMemoNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DCMemoNumber
		{
			get
			{
				return this._DCMemoNumber;
			}
			set
			{
				if ((this._DCMemoNumber != value))
				{
					this.OnDCMemoNumberChanging(value);
					this.SendPropertyChanging();
					this._DCMemoNumber = value;
					this.SendPropertyChanged("DCMemoNumber");
					this.OnDCMemoNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCMemoDate", DbType="DateTime NOT NULL")]
		public System.DateTime DCMemoDate
		{
			get
			{
				return this._DCMemoDate;
			}
			set
			{
				if ((this._DCMemoDate != value))
				{
					this.OnDCMemoDateChanging(value);
					this.SendPropertyChanging();
					this._DCMemoDate = value;
					this.SendPropertyChanged("DCMemoDate");
					this.OnDCMemoDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int NOT NULL")]
		public int PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="Int NOT NULL")]
		public int CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int NOT NULL")]
		public int ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnDebitCreditMemo_TrnDebitCreditMemoLine", Storage="_TrnDebitCreditMemoLines", ThisKey="Id", OtherKey="DCMemoId")]
		public EntitySet<TrnDebitCreditMemoLine> TrnDebitCreditMemoLines
		{
			get
			{
				return this._TrnDebitCreditMemoLines;
			}
			set
			{
				this._TrnDebitCreditMemoLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnDebitCreditMemo_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="DCMemoId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnDebitCreditMemo", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.TrnDebitCreditMemos.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.TrnDebitCreditMemos.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(int);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDebitCreditMemo", Storage="_MstUser", ThisKey="PreparedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnDebitCreditMemos.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnDebitCreditMemos.Add(this);
						this._PreparedBy = value.Id;
					}
					else
					{
						this._PreparedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDebitCreditMemo1", Storage="_MstUser1", ThisKey="CheckedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnDebitCreditMemos1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnDebitCreditMemos1.Add(this);
						this._CheckedBy = value.Id;
					}
					else
					{
						this._CheckedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDebitCreditMemo2", Storage="_MstUser2", ThisKey="ApprovedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnDebitCreditMemos2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnDebitCreditMemos2.Add(this);
						this._ApprovedBy = value.Id;
					}
					else
					{
						this._ApprovedBy = default(int);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDebitCreditMemo3", Storage="_MstUser3", ThisKey="EntryUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnDebitCreditMemos3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnDebitCreditMemos3.Add(this);
						this._EntryUserId = value.Id;
					}
					else
					{
						this._EntryUserId = default(int);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDebitCreditMemo4", Storage="_MstUser4", ThisKey="UpdateUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnDebitCreditMemos4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnDebitCreditMemos4.Add(this);
						this._UpdateUserId = value.Id;
					}
					else
					{
						this._UpdateUserId = default(int);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnDebitCreditMemoLines(TrnDebitCreditMemoLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnDebitCreditMemo = this;
		}
		
		private void detach_TrnDebitCreditMemoLines(TrnDebitCreditMemoLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnDebitCreditMemo = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnDebitCreditMemo = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnDebitCreditMemo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnDebitCreditMemoLine")]
	public partial class TrnDebitCreditMemoLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _DCMemoId;
		
		private System.Nullable<int> _SalesId;
		
		private int _AccountId;
		
		private string _Particulars;
		
		private decimal _DebitAmount;
		
		private decimal _CreditAmount;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<TrnDebitCreditMemo> _TrnDebitCreditMemo;
		
		private EntityRef<TrnSale> _TrnSale;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDCMemoIdChanging(int value);
    partial void OnDCMemoIdChanged();
    partial void OnSalesIdChanging(System.Nullable<int> value);
    partial void OnSalesIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnDebitAmountChanging(decimal value);
    partial void OnDebitAmountChanged();
    partial void OnCreditAmountChanging(decimal value);
    partial void OnCreditAmountChanged();
    #endregion
		
		public TrnDebitCreditMemoLine()
		{
			this._MstAccount = default(EntityRef<MstAccount>);
			this._TrnDebitCreditMemo = default(EntityRef<TrnDebitCreditMemo>);
			this._TrnSale = default(EntityRef<TrnSale>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCMemoId", DbType="Int NOT NULL")]
		public int DCMemoId
		{
			get
			{
				return this._DCMemoId;
			}
			set
			{
				if ((this._DCMemoId != value))
				{
					if (this._TrnDebitCreditMemo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDCMemoIdChanging(value);
					this.SendPropertyChanging();
					this._DCMemoId = value;
					this.SendPropertyChanged("DCMemoId");
					this.OnDCMemoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesId", DbType="Int")]
		public System.Nullable<int> SalesId
		{
			get
			{
				return this._SalesId;
			}
			set
			{
				if ((this._SalesId != value))
				{
					if (this._TrnSale.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesIdChanging(value);
					this.SendPropertyChanging();
					this._SalesId = value;
					this.SendPropertyChanged("SalesId");
					this.OnSalesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255)")]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebitAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal DebitAmount
		{
			get
			{
				return this._DebitAmount;
			}
			set
			{
				if ((this._DebitAmount != value))
				{
					this.OnDebitAmountChanging(value);
					this.SendPropertyChanging();
					this._DebitAmount = value;
					this.SendPropertyChanged("DebitAmount");
					this.OnDebitAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal CreditAmount
		{
			get
			{
				return this._CreditAmount;
			}
			set
			{
				if ((this._CreditAmount != value))
				{
					this.OnCreditAmountChanging(value);
					this.SendPropertyChanging();
					this._CreditAmount = value;
					this.SendPropertyChanged("CreditAmount");
					this.OnCreditAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnDebitCreditMemoLine", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.TrnDebitCreditMemoLines.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.TrnDebitCreditMemoLines.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnDebitCreditMemo_TrnDebitCreditMemoLine", Storage="_TrnDebitCreditMemo", ThisKey="DCMemoId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnDebitCreditMemo TrnDebitCreditMemo
		{
			get
			{
				return this._TrnDebitCreditMemo.Entity;
			}
			set
			{
				TrnDebitCreditMemo previousValue = this._TrnDebitCreditMemo.Entity;
				if (((previousValue != value) 
							|| (this._TrnDebitCreditMemo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnDebitCreditMemo.Entity = null;
						previousValue.TrnDebitCreditMemoLines.Remove(this);
					}
					this._TrnDebitCreditMemo.Entity = value;
					if ((value != null))
					{
						value.TrnDebitCreditMemoLines.Add(this);
						this._DCMemoId = value.Id;
					}
					else
					{
						this._DCMemoId = default(int);
					}
					this.SendPropertyChanged("TrnDebitCreditMemo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSale_TrnDebitCreditMemoLine", Storage="_TrnSale", ThisKey="SalesId", OtherKey="Id", IsForeignKey=true)]
		public TrnSale TrnSale
		{
			get
			{
				return this._TrnSale.Entity;
			}
			set
			{
				TrnSale previousValue = this._TrnSale.Entity;
				if (((previousValue != value) 
							|| (this._TrnSale.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSale.Entity = null;
						previousValue.TrnDebitCreditMemoLines.Remove(this);
					}
					this._TrnSale.Entity = value;
					if ((value != null))
					{
						value.TrnDebitCreditMemoLines.Add(this);
						this._SalesId = value.Id;
					}
					else
					{
						this._SalesId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnSale");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnDisbursement")]
	public partial class TrnDisbursement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PeriodId;
		
		private System.DateTime _DisbursementDate;
		
		private string _DisbursementNumber;
		
		private string _DisbursementType;
		
		private int _AccountId;
		
		private decimal _Amount;
		
		private int _PayTypeId;
		
		private int _TerminalId;
		
		private string _Remarks;
		
		private bool _IsReturn;
		
		private System.Nullable<int> _StockInId;
		
		private int _PreparedBy;
		
		private int _CheckedBy;
		
		private int _ApprovedBy;
		
		private bool _IsLocked;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private System.Nullable<decimal> _Amount1000;
		
		private System.Nullable<decimal> _Amount500;
		
		private System.Nullable<decimal> _Amount200;
		
		private System.Nullable<decimal> _Amount100;
		
		private System.Nullable<decimal> _Amount50;
		
		private System.Nullable<decimal> _Amount20;
		
		private System.Nullable<decimal> _Amount10;
		
		private System.Nullable<decimal> _Amount5;
		
		private System.Nullable<decimal> _Amount1;
		
		private System.Nullable<decimal> _Amount025;
		
		private System.Nullable<decimal> _Amount010;
		
		private System.Nullable<decimal> _Amount005;
		
		private System.Nullable<decimal> _Amount001;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstPayType> _MstPayType;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
		private EntityRef<TrnStockIn> _TrnStockIn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPeriodIdChanging(int value);
    partial void OnPeriodIdChanged();
    partial void OnDisbursementDateChanging(System.DateTime value);
    partial void OnDisbursementDateChanged();
    partial void OnDisbursementNumberChanging(string value);
    partial void OnDisbursementNumberChanged();
    partial void OnDisbursementTypeChanging(string value);
    partial void OnDisbursementTypeChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnPayTypeIdChanging(int value);
    partial void OnPayTypeIdChanged();
    partial void OnTerminalIdChanging(int value);
    partial void OnTerminalIdChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnIsReturnChanging(bool value);
    partial void OnIsReturnChanged();
    partial void OnStockInIdChanging(System.Nullable<int> value);
    partial void OnStockInIdChanged();
    partial void OnPreparedByChanging(int value);
    partial void OnPreparedByChanged();
    partial void OnCheckedByChanging(int value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(int value);
    partial void OnApprovedByChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    partial void OnAmount1000Changing(System.Nullable<decimal> value);
    partial void OnAmount1000Changed();
    partial void OnAmount500Changing(System.Nullable<decimal> value);
    partial void OnAmount500Changed();
    partial void OnAmount200Changing(System.Nullable<decimal> value);
    partial void OnAmount200Changed();
    partial void OnAmount100Changing(System.Nullable<decimal> value);
    partial void OnAmount100Changed();
    partial void OnAmount50Changing(System.Nullable<decimal> value);
    partial void OnAmount50Changed();
    partial void OnAmount20Changing(System.Nullable<decimal> value);
    partial void OnAmount20Changed();
    partial void OnAmount10Changing(System.Nullable<decimal> value);
    partial void OnAmount10Changed();
    partial void OnAmount5Changing(System.Nullable<decimal> value);
    partial void OnAmount5Changed();
    partial void OnAmount1Changing(System.Nullable<decimal> value);
    partial void OnAmount1Changed();
    partial void OnAmount025Changing(System.Nullable<decimal> value);
    partial void OnAmount025Changed();
    partial void OnAmount010Changing(System.Nullable<decimal> value);
    partial void OnAmount010Changed();
    partial void OnAmount005Changing(System.Nullable<decimal> value);
    partial void OnAmount005Changed();
    partial void OnAmount001Changing(System.Nullable<decimal> value);
    partial void OnAmount001Changed();
    #endregion
		
		public TrnDisbursement()
		{
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstPayType = default(EntityRef<MstPayType>);
			this._MstPeriod = default(EntityRef<MstPeriod>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			this._TrnStockIn = default(EntityRef<TrnStockIn>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="Int NOT NULL")]
		public int PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisbursementDate", DbType="DateTime NOT NULL")]
		public System.DateTime DisbursementDate
		{
			get
			{
				return this._DisbursementDate;
			}
			set
			{
				if ((this._DisbursementDate != value))
				{
					this.OnDisbursementDateChanging(value);
					this.SendPropertyChanging();
					this._DisbursementDate = value;
					this.SendPropertyChanged("DisbursementDate");
					this.OnDisbursementDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisbursementNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DisbursementNumber
		{
			get
			{
				return this._DisbursementNumber;
			}
			set
			{
				if ((this._DisbursementNumber != value))
				{
					this.OnDisbursementNumberChanging(value);
					this.SendPropertyChanging();
					this._DisbursementNumber = value;
					this.SendPropertyChanged("DisbursementNumber");
					this.OnDisbursementNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisbursementType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DisbursementType
		{
			get
			{
				return this._DisbursementType;
			}
			set
			{
				if ((this._DisbursementType != value))
				{
					this.OnDisbursementTypeChanging(value);
					this.SendPropertyChanging();
					this._DisbursementType = value;
					this.SendPropertyChanged("DisbursementType");
					this.OnDisbursementTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayTypeId", DbType="Int NOT NULL")]
		public int PayTypeId
		{
			get
			{
				return this._PayTypeId;
			}
			set
			{
				if ((this._PayTypeId != value))
				{
					if (this._MstPayType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PayTypeId = value;
					this.SendPropertyChanged("PayTypeId");
					this.OnPayTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminalId", DbType="Int NOT NULL")]
		public int TerminalId
		{
			get
			{
				return this._TerminalId;
			}
			set
			{
				if ((this._TerminalId != value))
				{
					this.OnTerminalIdChanging(value);
					this.SendPropertyChanging();
					this._TerminalId = value;
					this.SendPropertyChanged("TerminalId");
					this.OnTerminalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReturn", DbType="Bit NOT NULL")]
		public bool IsReturn
		{
			get
			{
				return this._IsReturn;
			}
			set
			{
				if ((this._IsReturn != value))
				{
					this.OnIsReturnChanging(value);
					this.SendPropertyChanging();
					this._IsReturn = value;
					this.SendPropertyChanged("IsReturn");
					this.OnIsReturnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockInId", DbType="Int")]
		public System.Nullable<int> StockInId
		{
			get
			{
				return this._StockInId;
			}
			set
			{
				if ((this._StockInId != value))
				{
					if (this._TrnStockIn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStockInIdChanging(value);
					this.SendPropertyChanging();
					this._StockInId = value;
					this.SendPropertyChanged("StockInId");
					this.OnStockInIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int NOT NULL")]
		public int PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="Int NOT NULL")]
		public int CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int NOT NULL")]
		public int ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount1000", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> Amount1000
		{
			get
			{
				return this._Amount1000;
			}
			set
			{
				if ((this._Amount1000 != value))
				{
					this.OnAmount1000Changing(value);
					this.SendPropertyChanging();
					this._Amount1000 = value;
					this.SendPropertyChanged("Amount1000");
					this.OnAmount1000Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount500", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> Amount500
		{
			get
			{
				return this._Amount500;
			}
			set
			{
				if ((this._Amount500 != value))
				{
					this.OnAmount500Changing(value);
					this.SendPropertyChanging();
					this._Amount500 = value;
					this.SendPropertyChanged("Amount500");
					this.OnAmount500Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount200", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> Amount200
		{
			get
			{
				return this._Amount200;
			}
			set
			{
				if ((this._Amount200 != value))
				{
					this.OnAmount200Changing(value);
					this.SendPropertyChanging();
					this._Amount200 = value;
					this.SendPropertyChanged("Amount200");
					this.OnAmount200Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount100", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> Amount100
		{
			get
			{
				return this._Amount100;
			}
			set
			{
				if ((this._Amount100 != value))
				{
					this.OnAmount100Changing(value);
					this.SendPropertyChanging();
					this._Amount100 = value;
					this.SendPropertyChanged("Amount100");
					this.OnAmount100Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount50", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> Amount50
		{
			get
			{
				return this._Amount50;
			}
			set
			{
				if ((this._Amount50 != value))
				{
					this.OnAmount50Changing(value);
					this.SendPropertyChanging();
					this._Amount50 = value;
					this.SendPropertyChanged("Amount50");
					this.OnAmount50Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount20", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> Amount20
		{
			get
			{
				return this._Amount20;
			}
			set
			{
				if ((this._Amount20 != value))
				{
					this.OnAmount20Changing(value);
					this.SendPropertyChanging();
					this._Amount20 = value;
					this.SendPropertyChanged("Amount20");
					this.OnAmount20Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount10", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> Amount10
		{
			get
			{
				return this._Amount10;
			}
			set
			{
				if ((this._Amount10 != value))
				{
					this.OnAmount10Changing(value);
					this.SendPropertyChanging();
					this._Amount10 = value;
					this.SendPropertyChanged("Amount10");
					this.OnAmount10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount5", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> Amount5
		{
			get
			{
				return this._Amount5;
			}
			set
			{
				if ((this._Amount5 != value))
				{
					this.OnAmount5Changing(value);
					this.SendPropertyChanging();
					this._Amount5 = value;
					this.SendPropertyChanged("Amount5");
					this.OnAmount5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount1", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> Amount1
		{
			get
			{
				return this._Amount1;
			}
			set
			{
				if ((this._Amount1 != value))
				{
					this.OnAmount1Changing(value);
					this.SendPropertyChanging();
					this._Amount1 = value;
					this.SendPropertyChanged("Amount1");
					this.OnAmount1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount025", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> Amount025
		{
			get
			{
				return this._Amount025;
			}
			set
			{
				if ((this._Amount025 != value))
				{
					this.OnAmount025Changing(value);
					this.SendPropertyChanging();
					this._Amount025 = value;
					this.SendPropertyChanged("Amount025");
					this.OnAmount025Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount010", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> Amount010
		{
			get
			{
				return this._Amount010;
			}
			set
			{
				if ((this._Amount010 != value))
				{
					this.OnAmount010Changing(value);
					this.SendPropertyChanging();
					this._Amount010 = value;
					this.SendPropertyChanged("Amount010");
					this.OnAmount010Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount005", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> Amount005
		{
			get
			{
				return this._Amount005;
			}
			set
			{
				if ((this._Amount005 != value))
				{
					this.OnAmount005Changing(value);
					this.SendPropertyChanging();
					this._Amount005 = value;
					this.SendPropertyChanged("Amount005");
					this.OnAmount005Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount001", DbType="Decimal(18,5)")]
		public System.Nullable<decimal> Amount001
		{
			get
			{
				return this._Amount001;
			}
			set
			{
				if ((this._Amount001 != value))
				{
					this.OnAmount001Changing(value);
					this.SendPropertyChanging();
					this._Amount001 = value;
					this.SendPropertyChanged("Amount001");
					this.OnAmount001Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnDisbursement_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="DisbursementId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnDisbursement", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.TrnDisbursements.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayType_TrnDisbursement", Storage="_MstPayType", ThisKey="PayTypeId", OtherKey="Id", IsForeignKey=true)]
		public MstPayType MstPayType
		{
			get
			{
				return this._MstPayType.Entity;
			}
			set
			{
				MstPayType previousValue = this._MstPayType.Entity;
				if (((previousValue != value) 
							|| (this._MstPayType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPayType.Entity = null;
						previousValue.TrnDisbursements.Remove(this);
					}
					this._MstPayType.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements.Add(this);
						this._PayTypeId = value.Id;
					}
					else
					{
						this._PayTypeId = default(int);
					}
					this.SendPropertyChanged("MstPayType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnDisbursement", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.TrnDisbursements.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(int);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement", Storage="_MstUser", ThisKey="PreparedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnDisbursements.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements.Add(this);
						this._PreparedBy = value.Id;
					}
					else
					{
						this._PreparedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement1", Storage="_MstUser1", ThisKey="CheckedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnDisbursements1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements1.Add(this);
						this._CheckedBy = value.Id;
					}
					else
					{
						this._CheckedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement2", Storage="_MstUser2", ThisKey="ApprovedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnDisbursements2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements2.Add(this);
						this._ApprovedBy = value.Id;
					}
					else
					{
						this._ApprovedBy = default(int);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement3", Storage="_MstUser3", ThisKey="EntryUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnDisbursements3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements3.Add(this);
						this._EntryUserId = value.Id;
					}
					else
					{
						this._EntryUserId = default(int);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement4", Storage="_MstUser4", ThisKey="UpdateUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnDisbursements4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements4.Add(this);
						this._UpdateUserId = value.Id;
					}
					else
					{
						this._UpdateUserId = default(int);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_TrnDisbursement", Storage="_TrnStockIn", ThisKey="StockInId", OtherKey="Id", IsForeignKey=true)]
		public TrnStockIn TrnStockIn
		{
			get
			{
				return this._TrnStockIn.Entity;
			}
			set
			{
				TrnStockIn previousValue = this._TrnStockIn.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockIn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockIn.Entity = null;
						previousValue.TrnDisbursements.Remove(this);
					}
					this._TrnStockIn.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements.Add(this);
						this._StockInId = value.Id;
					}
					else
					{
						this._StockInId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnStockIn");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnDisbursement = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnDisbursement = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnJournal")]
	public partial class TrnJournal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _JournalDate;
		
		private string _JournalRefDocument;
		
		private int _AccountId;
		
		private decimal _DebitAmount;
		
		private decimal _CreditAmount;
		
		private System.Nullable<int> _SalesId;
		
		private System.Nullable<int> _StockInId;
		
		private System.Nullable<int> _StockOutId;
		
		private System.Nullable<int> _CollectionId;
		
		private System.Nullable<int> _DCMemoId;
		
		private System.Nullable<int> _DisbursementId;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<TrnCollection> _TrnCollection;
		
		private EntityRef<TrnDebitCreditMemo> _TrnDebitCreditMemo;
		
		private EntityRef<TrnDisbursement> _TrnDisbursement;
		
		private EntityRef<TrnStockIn> _TrnStockIn;
		
		private EntityRef<TrnStockOut> _TrnStockOut;
		
		private EntityRef<TrnSale> _TrnSale;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnJournalDateChanging(System.DateTime value);
    partial void OnJournalDateChanged();
    partial void OnJournalRefDocumentChanging(string value);
    partial void OnJournalRefDocumentChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnDebitAmountChanging(decimal value);
    partial void OnDebitAmountChanged();
    partial void OnCreditAmountChanging(decimal value);
    partial void OnCreditAmountChanged();
    partial void OnSalesIdChanging(System.Nullable<int> value);
    partial void OnSalesIdChanged();
    partial void OnStockInIdChanging(System.Nullable<int> value);
    partial void OnStockInIdChanged();
    partial void OnStockOutIdChanging(System.Nullable<int> value);
    partial void OnStockOutIdChanged();
    partial void OnCollectionIdChanging(System.Nullable<int> value);
    partial void OnCollectionIdChanged();
    partial void OnDCMemoIdChanging(System.Nullable<int> value);
    partial void OnDCMemoIdChanged();
    partial void OnDisbursementIdChanging(System.Nullable<int> value);
    partial void OnDisbursementIdChanged();
    #endregion
		
		public TrnJournal()
		{
			this._MstAccount = default(EntityRef<MstAccount>);
			this._TrnCollection = default(EntityRef<TrnCollection>);
			this._TrnDebitCreditMemo = default(EntityRef<TrnDebitCreditMemo>);
			this._TrnDisbursement = default(EntityRef<TrnDisbursement>);
			this._TrnStockIn = default(EntityRef<TrnStockIn>);
			this._TrnStockOut = default(EntityRef<TrnStockOut>);
			this._TrnSale = default(EntityRef<TrnSale>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalDate", DbType="DateTime NOT NULL")]
		public System.DateTime JournalDate
		{
			get
			{
				return this._JournalDate;
			}
			set
			{
				if ((this._JournalDate != value))
				{
					this.OnJournalDateChanging(value);
					this.SendPropertyChanging();
					this._JournalDate = value;
					this.SendPropertyChanged("JournalDate");
					this.OnJournalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalRefDocument", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string JournalRefDocument
		{
			get
			{
				return this._JournalRefDocument;
			}
			set
			{
				if ((this._JournalRefDocument != value))
				{
					this.OnJournalRefDocumentChanging(value);
					this.SendPropertyChanging();
					this._JournalRefDocument = value;
					this.SendPropertyChanged("JournalRefDocument");
					this.OnJournalRefDocumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebitAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal DebitAmount
		{
			get
			{
				return this._DebitAmount;
			}
			set
			{
				if ((this._DebitAmount != value))
				{
					this.OnDebitAmountChanging(value);
					this.SendPropertyChanging();
					this._DebitAmount = value;
					this.SendPropertyChanged("DebitAmount");
					this.OnDebitAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal CreditAmount
		{
			get
			{
				return this._CreditAmount;
			}
			set
			{
				if ((this._CreditAmount != value))
				{
					this.OnCreditAmountChanging(value);
					this.SendPropertyChanging();
					this._CreditAmount = value;
					this.SendPropertyChanged("CreditAmount");
					this.OnCreditAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesId", DbType="Int")]
		public System.Nullable<int> SalesId
		{
			get
			{
				return this._SalesId;
			}
			set
			{
				if ((this._SalesId != value))
				{
					if (this._TrnSale.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesIdChanging(value);
					this.SendPropertyChanging();
					this._SalesId = value;
					this.SendPropertyChanged("SalesId");
					this.OnSalesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockInId", DbType="Int")]
		public System.Nullable<int> StockInId
		{
			get
			{
				return this._StockInId;
			}
			set
			{
				if ((this._StockInId != value))
				{
					if (this._TrnStockIn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStockInIdChanging(value);
					this.SendPropertyChanging();
					this._StockInId = value;
					this.SendPropertyChanged("StockInId");
					this.OnStockInIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockOutId", DbType="Int")]
		public System.Nullable<int> StockOutId
		{
			get
			{
				return this._StockOutId;
			}
			set
			{
				if ((this._StockOutId != value))
				{
					if (this._TrnStockOut.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStockOutIdChanging(value);
					this.SendPropertyChanging();
					this._StockOutId = value;
					this.SendPropertyChanged("StockOutId");
					this.OnStockOutIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionId", DbType="Int")]
		public System.Nullable<int> CollectionId
		{
			get
			{
				return this._CollectionId;
			}
			set
			{
				if ((this._CollectionId != value))
				{
					if (this._TrnCollection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCollectionIdChanging(value);
					this.SendPropertyChanging();
					this._CollectionId = value;
					this.SendPropertyChanged("CollectionId");
					this.OnCollectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCMemoId", DbType="Int")]
		public System.Nullable<int> DCMemoId
		{
			get
			{
				return this._DCMemoId;
			}
			set
			{
				if ((this._DCMemoId != value))
				{
					if (this._TrnDebitCreditMemo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDCMemoIdChanging(value);
					this.SendPropertyChanging();
					this._DCMemoId = value;
					this.SendPropertyChanged("DCMemoId");
					this.OnDCMemoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisbursementId", DbType="Int")]
		public System.Nullable<int> DisbursementId
		{
			get
			{
				return this._DisbursementId;
			}
			set
			{
				if ((this._DisbursementId != value))
				{
					if (this._TrnDisbursement.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDisbursementIdChanging(value);
					this.SendPropertyChanging();
					this._DisbursementId = value;
					this.SendPropertyChanged("DisbursementId");
					this.OnDisbursementIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnJournal", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnCollection_TrnJournal", Storage="_TrnCollection", ThisKey="CollectionId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnCollection TrnCollection
		{
			get
			{
				return this._TrnCollection.Entity;
			}
			set
			{
				TrnCollection previousValue = this._TrnCollection.Entity;
				if (((previousValue != value) 
							|| (this._TrnCollection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnCollection.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._TrnCollection.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._CollectionId = value.Id;
					}
					else
					{
						this._CollectionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnCollection");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnDebitCreditMemo_TrnJournal", Storage="_TrnDebitCreditMemo", ThisKey="DCMemoId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnDebitCreditMemo TrnDebitCreditMemo
		{
			get
			{
				return this._TrnDebitCreditMemo.Entity;
			}
			set
			{
				TrnDebitCreditMemo previousValue = this._TrnDebitCreditMemo.Entity;
				if (((previousValue != value) 
							|| (this._TrnDebitCreditMemo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnDebitCreditMemo.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._TrnDebitCreditMemo.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._DCMemoId = value.Id;
					}
					else
					{
						this._DCMemoId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnDebitCreditMemo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnDisbursement_TrnJournal", Storage="_TrnDisbursement", ThisKey="DisbursementId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnDisbursement TrnDisbursement
		{
			get
			{
				return this._TrnDisbursement.Entity;
			}
			set
			{
				TrnDisbursement previousValue = this._TrnDisbursement.Entity;
				if (((previousValue != value) 
							|| (this._TrnDisbursement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnDisbursement.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._TrnDisbursement.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._DisbursementId = value.Id;
					}
					else
					{
						this._DisbursementId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnDisbursement");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_TrnJournal", Storage="_TrnStockIn", ThisKey="StockInId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnStockIn TrnStockIn
		{
			get
			{
				return this._TrnStockIn.Entity;
			}
			set
			{
				TrnStockIn previousValue = this._TrnStockIn.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockIn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockIn.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._TrnStockIn.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._StockInId = value.Id;
					}
					else
					{
						this._StockInId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnStockIn");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockOut_TrnJournal", Storage="_TrnStockOut", ThisKey="StockOutId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnStockOut TrnStockOut
		{
			get
			{
				return this._TrnStockOut.Entity;
			}
			set
			{
				TrnStockOut previousValue = this._TrnStockOut.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockOut.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockOut.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._TrnStockOut.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._StockOutId = value.Id;
					}
					else
					{
						this._StockOutId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnStockOut");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSale_TrnJournal", Storage="_TrnSale", ThisKey="SalesId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnSale TrnSale
		{
			get
			{
				return this._TrnSale.Entity;
			}
			set
			{
				TrnSale previousValue = this._TrnSale.Entity;
				if (((previousValue != value) 
							|| (this._TrnSale.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSale.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._TrnSale.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._SalesId = value.Id;
					}
					else
					{
						this._SalesId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnSale");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnPurchaseOrder")]
	public partial class TrnPurchaseOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PeriodId;
		
		private System.DateTime _PurchaseOrderDate;
		
		private string _PurchaseOrderNumber;
		
		private decimal _Amount;
		
		private int _SupplierId;
		
		private string _Remarks;
		
		private int _PreparedBy;
		
		private int _CheckedBy;
		
		private int _ApprovedBy;
		
		private bool _IsLocked;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private EntitySet<TrnPurchaseOrderLine> _TrnPurchaseOrderLines;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
		private EntityRef<MstSupplier> _MstSupplier;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPeriodIdChanging(int value);
    partial void OnPeriodIdChanged();
    partial void OnPurchaseOrderDateChanging(System.DateTime value);
    partial void OnPurchaseOrderDateChanged();
    partial void OnPurchaseOrderNumberChanging(string value);
    partial void OnPurchaseOrderNumberChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnPreparedByChanging(int value);
    partial void OnPreparedByChanged();
    partial void OnCheckedByChanging(int value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(int value);
    partial void OnApprovedByChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    #endregion
		
		public TrnPurchaseOrder()
		{
			this._TrnPurchaseOrderLines = new EntitySet<TrnPurchaseOrderLine>(new Action<TrnPurchaseOrderLine>(this.attach_TrnPurchaseOrderLines), new Action<TrnPurchaseOrderLine>(this.detach_TrnPurchaseOrderLines));
			this._MstPeriod = default(EntityRef<MstPeriod>);
			this._MstSupplier = default(EntityRef<MstSupplier>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="Int NOT NULL")]
		public int PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderDate", DbType="DateTime NOT NULL")]
		public System.DateTime PurchaseOrderDate
		{
			get
			{
				return this._PurchaseOrderDate;
			}
			set
			{
				if ((this._PurchaseOrderDate != value))
				{
					this.OnPurchaseOrderDateChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderDate = value;
					this.SendPropertyChanged("PurchaseOrderDate");
					this.OnPurchaseOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PurchaseOrderNumber
		{
			get
			{
				return this._PurchaseOrderNumber;
			}
			set
			{
				if ((this._PurchaseOrderNumber != value))
				{
					this.OnPurchaseOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderNumber = value;
					this.SendPropertyChanged("PurchaseOrderNumber");
					this.OnPurchaseOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					if (this._MstSupplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int NOT NULL")]
		public int PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="Int NOT NULL")]
		public int CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int NOT NULL")]
		public int ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPurchaseOrder_TrnPurchaseOrderLine", Storage="_TrnPurchaseOrderLines", ThisKey="Id", OtherKey="PurchaseOrderId")]
		public EntitySet<TrnPurchaseOrderLine> TrnPurchaseOrderLines
		{
			get
			{
				return this._TrnPurchaseOrderLines;
			}
			set
			{
				this._TrnPurchaseOrderLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnPurchaseOrder", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.TrnPurchaseOrders.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(int);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstSupplier_TrnPurchaseOrder", Storage="_MstSupplier", ThisKey="SupplierId", OtherKey="Id", IsForeignKey=true)]
		public MstSupplier MstSupplier
		{
			get
			{
				return this._MstSupplier.Entity;
			}
			set
			{
				MstSupplier previousValue = this._MstSupplier.Entity;
				if (((previousValue != value) 
							|| (this._MstSupplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstSupplier.Entity = null;
						previousValue.TrnPurchaseOrders.Remove(this);
					}
					this._MstSupplier.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders.Add(this);
						this._SupplierId = value.Id;
					}
					else
					{
						this._SupplierId = default(int);
					}
					this.SendPropertyChanged("MstSupplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder", Storage="_MstUser", ThisKey="PreparedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnPurchaseOrders.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders.Add(this);
						this._PreparedBy = value.Id;
					}
					else
					{
						this._PreparedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder1", Storage="_MstUser1", ThisKey="CheckedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnPurchaseOrders1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders1.Add(this);
						this._CheckedBy = value.Id;
					}
					else
					{
						this._CheckedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder2", Storage="_MstUser2", ThisKey="ApprovedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnPurchaseOrders2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders2.Add(this);
						this._ApprovedBy = value.Id;
					}
					else
					{
						this._ApprovedBy = default(int);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder3", Storage="_MstUser3", ThisKey="EntryUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnPurchaseOrders3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders3.Add(this);
						this._EntryUserId = value.Id;
					}
					else
					{
						this._EntryUserId = default(int);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder4", Storage="_MstUser4", ThisKey="UpdateUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnPurchaseOrders4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders4.Add(this);
						this._UpdateUserId = value.Id;
					}
					else
					{
						this._UpdateUserId = default(int);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnPurchaseOrderLines(TrnPurchaseOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnPurchaseOrder = this;
		}
		
		private void detach_TrnPurchaseOrderLines(TrnPurchaseOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnPurchaseOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnPurchaseOrderLine")]
	public partial class TrnPurchaseOrderLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PurchaseOrderId;
		
		private int _ItemId;
		
		private int _UnitId;
		
		private decimal _Quantity;
		
		private decimal _Cost;
		
		private decimal _Amount;
		
		private EntityRef<TrnPurchaseOrder> _TrnPurchaseOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPurchaseOrderIdChanging(int value);
    partial void OnPurchaseOrderIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    #endregion
		
		public TrnPurchaseOrderLine()
		{
			this._TrnPurchaseOrder = default(EntityRef<TrnPurchaseOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderId", DbType="Int NOT NULL")]
		public int PurchaseOrderId
		{
			get
			{
				return this._PurchaseOrderId;
			}
			set
			{
				if ((this._PurchaseOrderId != value))
				{
					if (this._TrnPurchaseOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurchaseOrderIdChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderId = value;
					this.SendPropertyChanged("PurchaseOrderId");
					this.OnPurchaseOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPurchaseOrder_TrnPurchaseOrderLine", Storage="_TrnPurchaseOrder", ThisKey="PurchaseOrderId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnPurchaseOrder TrnPurchaseOrder
		{
			get
			{
				return this._TrnPurchaseOrder.Entity;
			}
			set
			{
				TrnPurchaseOrder previousValue = this._TrnPurchaseOrder.Entity;
				if (((previousValue != value) 
							|| (this._TrnPurchaseOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnPurchaseOrder.Entity = null;
						previousValue.TrnPurchaseOrderLines.Remove(this);
					}
					this._TrnPurchaseOrder.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrderLines.Add(this);
						this._PurchaseOrderId = value.Id;
					}
					else
					{
						this._PurchaseOrderId = default(int);
					}
					this.SendPropertyChanged("TrnPurchaseOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockCount")]
	public partial class TrnStockCount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PeriodId;
		
		private System.DateTime _StockCountDate;
		
		private string _StockCountNumber;
		
		private string _Remarks;
		
		private int _PreparedBy;
		
		private int _CheckedBy;
		
		private int _ApprovedBy;
		
		private int _IsLocked;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private EntitySet<TrnStockCountLine> _TrnStockCountLines;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPeriodIdChanging(int value);
    partial void OnPeriodIdChanged();
    partial void OnStockCountDateChanging(System.DateTime value);
    partial void OnStockCountDateChanged();
    partial void OnStockCountNumberChanging(string value);
    partial void OnStockCountNumberChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnPreparedByChanging(int value);
    partial void OnPreparedByChanged();
    partial void OnCheckedByChanging(int value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(int value);
    partial void OnApprovedByChanged();
    partial void OnIsLockedChanging(int value);
    partial void OnIsLockedChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    #endregion
		
		public TrnStockCount()
		{
			this._TrnStockCountLines = new EntitySet<TrnStockCountLine>(new Action<TrnStockCountLine>(this.attach_TrnStockCountLines), new Action<TrnStockCountLine>(this.detach_TrnStockCountLines));
			this._MstPeriod = default(EntityRef<MstPeriod>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="Int NOT NULL")]
		public int PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockCountDate", DbType="DateTime NOT NULL")]
		public System.DateTime StockCountDate
		{
			get
			{
				return this._StockCountDate;
			}
			set
			{
				if ((this._StockCountDate != value))
				{
					this.OnStockCountDateChanging(value);
					this.SendPropertyChanging();
					this._StockCountDate = value;
					this.SendPropertyChanged("StockCountDate");
					this.OnStockCountDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockCountNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StockCountNumber
		{
			get
			{
				return this._StockCountNumber;
			}
			set
			{
				if ((this._StockCountNumber != value))
				{
					this.OnStockCountNumberChanging(value);
					this.SendPropertyChanging();
					this._StockCountNumber = value;
					this.SendPropertyChanged("StockCountNumber");
					this.OnStockCountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int NOT NULL")]
		public int PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="Int NOT NULL")]
		public int CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int NOT NULL")]
		public int ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Int NOT NULL")]
		public int IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockCount_TrnStockCountLine", Storage="_TrnStockCountLines", ThisKey="Id", OtherKey="StockCountId")]
		public EntitySet<TrnStockCountLine> TrnStockCountLines
		{
			get
			{
				return this._TrnStockCountLines;
			}
			set
			{
				this._TrnStockCountLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnStockCount", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.TrnStockCounts.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.TrnStockCounts.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(int);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnStockCountLines(TrnStockCountLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockCount = this;
		}
		
		private void detach_TrnStockCountLines(TrnStockCountLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockCount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockCountLine")]
	public partial class TrnStockCountLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _StockCountId;
		
		private int _ItemId;
		
		private int _UnitId;
		
		private decimal _Quantity;
		
		private decimal _Cost;
		
		private decimal _Amount;
		
		private EntityRef<MstItem> _MstItem;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<TrnStockCount> _TrnStockCount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStockCountIdChanging(int value);
    partial void OnStockCountIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    #endregion
		
		public TrnStockCountLine()
		{
			this._MstItem = default(EntityRef<MstItem>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._TrnStockCount = default(EntityRef<TrnStockCount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockCountId", DbType="Int NOT NULL")]
		public int StockCountId
		{
			get
			{
				return this._StockCountId;
			}
			set
			{
				if ((this._StockCountId != value))
				{
					if (this._TrnStockCount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStockCountIdChanging(value);
					this.SendPropertyChanging();
					this._StockCountId = value;
					this.SendPropertyChanged("StockCountId");
					this.OnStockCountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstItem_TrnStockCountLine", Storage="_MstItem", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public MstItem MstItem
		{
			get
			{
				return this._MstItem.Entity;
			}
			set
			{
				MstItem previousValue = this._MstItem.Entity;
				if (((previousValue != value) 
							|| (this._MstItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstItem.Entity = null;
						previousValue.TrnStockCountLines.Remove(this);
					}
					this._MstItem.Entity = value;
					if ((value != null))
					{
						value.TrnStockCountLines.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(int);
					}
					this.SendPropertyChanged("MstItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockCountLine", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.TrnStockCountLines.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnStockCountLines.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockCount_TrnStockCountLine", Storage="_TrnStockCount", ThisKey="StockCountId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnStockCount TrnStockCount
		{
			get
			{
				return this._TrnStockCount.Entity;
			}
			set
			{
				TrnStockCount previousValue = this._TrnStockCount.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockCount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockCount.Entity = null;
						previousValue.TrnStockCountLines.Remove(this);
					}
					this._TrnStockCount.Entity = value;
					if ((value != null))
					{
						value.TrnStockCountLines.Add(this);
						this._StockCountId = value.Id;
					}
					else
					{
						this._StockCountId = default(int);
					}
					this.SendPropertyChanged("TrnStockCount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockIn")]
	public partial class TrnStockIn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PeriodId;
		
		private System.DateTime _StockInDate;
		
		private string _StockInNumber;
		
		private int _SupplierId;
		
		private string _Remarks;
		
		private bool _IsReturn;
		
		private System.Nullable<int> _CollectionId;
		
		private System.Nullable<int> _PurchaseOrderId;
		
		private int _PreparedBy;
		
		private int _CheckedBy;
		
		private int _ApprovedBy;
		
		private int _IsLocked;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private EntitySet<TrnCollectionLine> _TrnCollectionLines;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntitySet<TrnStockInLine> _TrnStockInLines;
		
		private EntityRef<TrnCollection> _TrnCollection;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPeriodIdChanging(int value);
    partial void OnPeriodIdChanged();
    partial void OnStockInDateChanging(System.DateTime value);
    partial void OnStockInDateChanged();
    partial void OnStockInNumberChanging(string value);
    partial void OnStockInNumberChanged();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnIsReturnChanging(bool value);
    partial void OnIsReturnChanged();
    partial void OnCollectionIdChanging(System.Nullable<int> value);
    partial void OnCollectionIdChanged();
    partial void OnPurchaseOrderIdChanging(System.Nullable<int> value);
    partial void OnPurchaseOrderIdChanged();
    partial void OnPreparedByChanging(int value);
    partial void OnPreparedByChanged();
    partial void OnCheckedByChanging(int value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(int value);
    partial void OnApprovedByChanged();
    partial void OnIsLockedChanging(int value);
    partial void OnIsLockedChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    #endregion
		
		public TrnStockIn()
		{
			this._TrnCollectionLines = new EntitySet<TrnCollectionLine>(new Action<TrnCollectionLine>(this.attach_TrnCollectionLines), new Action<TrnCollectionLine>(this.detach_TrnCollectionLines));
			this._TrnDisbursements = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements), new Action<TrnDisbursement>(this.detach_TrnDisbursements));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._TrnStockInLines = new EntitySet<TrnStockInLine>(new Action<TrnStockInLine>(this.attach_TrnStockInLines), new Action<TrnStockInLine>(this.detach_TrnStockInLines));
			this._TrnCollection = default(EntityRef<TrnCollection>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="Int NOT NULL")]
		public int PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockInDate", DbType="DateTime NOT NULL")]
		public System.DateTime StockInDate
		{
			get
			{
				return this._StockInDate;
			}
			set
			{
				if ((this._StockInDate != value))
				{
					this.OnStockInDateChanging(value);
					this.SendPropertyChanging();
					this._StockInDate = value;
					this.SendPropertyChanged("StockInDate");
					this.OnStockInDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockInNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StockInNumber
		{
			get
			{
				return this._StockInNumber;
			}
			set
			{
				if ((this._StockInNumber != value))
				{
					this.OnStockInNumberChanging(value);
					this.SendPropertyChanging();
					this._StockInNumber = value;
					this.SendPropertyChanged("StockInNumber");
					this.OnStockInNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReturn", DbType="Bit NOT NULL")]
		public bool IsReturn
		{
			get
			{
				return this._IsReturn;
			}
			set
			{
				if ((this._IsReturn != value))
				{
					this.OnIsReturnChanging(value);
					this.SendPropertyChanging();
					this._IsReturn = value;
					this.SendPropertyChanged("IsReturn");
					this.OnIsReturnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionId", DbType="Int")]
		public System.Nullable<int> CollectionId
		{
			get
			{
				return this._CollectionId;
			}
			set
			{
				if ((this._CollectionId != value))
				{
					if (this._TrnCollection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCollectionIdChanging(value);
					this.SendPropertyChanging();
					this._CollectionId = value;
					this.SendPropertyChanged("CollectionId");
					this.OnCollectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderId", DbType="Int")]
		public System.Nullable<int> PurchaseOrderId
		{
			get
			{
				return this._PurchaseOrderId;
			}
			set
			{
				if ((this._PurchaseOrderId != value))
				{
					this.OnPurchaseOrderIdChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderId = value;
					this.SendPropertyChanged("PurchaseOrderId");
					this.OnPurchaseOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int NOT NULL")]
		public int PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="Int NOT NULL")]
		public int CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int NOT NULL")]
		public int ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Int NOT NULL")]
		public int IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_TrnCollectionLine", Storage="_TrnCollectionLines", ThisKey="Id", OtherKey="StockInId")]
		public EntitySet<TrnCollectionLine> TrnCollectionLines
		{
			get
			{
				return this._TrnCollectionLines;
			}
			set
			{
				this._TrnCollectionLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_TrnDisbursement", Storage="_TrnDisbursements", ThisKey="Id", OtherKey="StockInId")]
		public EntitySet<TrnDisbursement> TrnDisbursements
		{
			get
			{
				return this._TrnDisbursements;
			}
			set
			{
				this._TrnDisbursements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="StockInId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_TrnStockInLine", Storage="_TrnStockInLines", ThisKey="Id", OtherKey="StockInId")]
		public EntitySet<TrnStockInLine> TrnStockInLines
		{
			get
			{
				return this._TrnStockInLines;
			}
			set
			{
				this._TrnStockInLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnCollection_TrnStockIn", Storage="_TrnCollection", ThisKey="CollectionId", OtherKey="Id", IsForeignKey=true)]
		public TrnCollection TrnCollection
		{
			get
			{
				return this._TrnCollection.Entity;
			}
			set
			{
				TrnCollection previousValue = this._TrnCollection.Entity;
				if (((previousValue != value) 
							|| (this._TrnCollection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnCollection.Entity = null;
						previousValue.TrnStockIns.Remove(this);
					}
					this._TrnCollection.Entity = value;
					if ((value != null))
					{
						value.TrnStockIns.Add(this);
						this._CollectionId = value.Id;
					}
					else
					{
						this._CollectionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnCollection");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = this;
		}
		
		private void detach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = null;
		}
		
		private void attach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = this;
		}
		
		private void detach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = null;
		}
		
		private void attach_TrnStockInLines(TrnStockInLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = this;
		}
		
		private void detach_TrnStockInLines(TrnStockInLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockInLine")]
	public partial class TrnStockInLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _StockInId;
		
		private int _ItemId;
		
		private int _UnitId;
		
		private decimal _Quantity;
		
		private decimal _Cost;
		
		private decimal _Amount;
		
		private System.Nullable<System.DateTime> _ExpiryDate;
		
		private string _LotNumber;
		
		private int _AssetAccountId;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstItem> _MstItem;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<TrnStockIn> _TrnStockIn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStockInIdChanging(int value);
    partial void OnStockInIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiryDateChanged();
    partial void OnLotNumberChanging(string value);
    partial void OnLotNumberChanged();
    partial void OnAssetAccountIdChanging(int value);
    partial void OnAssetAccountIdChanged();
    #endregion
		
		public TrnStockInLine()
		{
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstItem = default(EntityRef<MstItem>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._TrnStockIn = default(EntityRef<TrnStockIn>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockInId", DbType="Int NOT NULL")]
		public int StockInId
		{
			get
			{
				return this._StockInId;
			}
			set
			{
				if ((this._StockInId != value))
				{
					if (this._TrnStockIn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStockInIdChanging(value);
					this.SendPropertyChanging();
					this._StockInId = value;
					this.SendPropertyChanged("StockInId");
					this.OnStockInIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNumber", DbType="NVarChar(50)")]
		public string LotNumber
		{
			get
			{
				return this._LotNumber;
			}
			set
			{
				if ((this._LotNumber != value))
				{
					this.OnLotNumberChanging(value);
					this.SendPropertyChanging();
					this._LotNumber = value;
					this.SendPropertyChanged("LotNumber");
					this.OnLotNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetAccountId", DbType="Int NOT NULL")]
		public int AssetAccountId
		{
			get
			{
				return this._AssetAccountId;
			}
			set
			{
				if ((this._AssetAccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssetAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AssetAccountId = value;
					this.SendPropertyChanged("AssetAccountId");
					this.OnAssetAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnStockInLine", Storage="_MstAccount", ThisKey="AssetAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.TrnStockInLines.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.TrnStockInLines.Add(this);
						this._AssetAccountId = value.Id;
					}
					else
					{
						this._AssetAccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstItem_TrnStockInLine", Storage="_MstItem", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public MstItem MstItem
		{
			get
			{
				return this._MstItem.Entity;
			}
			set
			{
				MstItem previousValue = this._MstItem.Entity;
				if (((previousValue != value) 
							|| (this._MstItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstItem.Entity = null;
						previousValue.TrnStockInLines.Remove(this);
					}
					this._MstItem.Entity = value;
					if ((value != null))
					{
						value.TrnStockInLines.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(int);
					}
					this.SendPropertyChanged("MstItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockInLine", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.TrnStockInLines.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnStockInLines.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_TrnStockInLine", Storage="_TrnStockIn", ThisKey="StockInId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnStockIn TrnStockIn
		{
			get
			{
				return this._TrnStockIn.Entity;
			}
			set
			{
				TrnStockIn previousValue = this._TrnStockIn.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockIn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockIn.Entity = null;
						previousValue.TrnStockInLines.Remove(this);
					}
					this._TrnStockIn.Entity = value;
					if ((value != null))
					{
						value.TrnStockInLines.Add(this);
						this._StockInId = value.Id;
					}
					else
					{
						this._StockInId = default(int);
					}
					this.SendPropertyChanged("TrnStockIn");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockOut")]
	public partial class TrnStockOut : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PeriodId;
		
		private System.DateTime _StockOutDate;
		
		private string _StockOutNumber;
		
		private int _AccountId;
		
		private string _Remarks;
		
		private int _PreparedBy;
		
		private int _CheckedBy;
		
		private int _ApprovedBy;
		
		private bool _IsLocked;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private EntitySet<TrnStockOutLine> _TrnStockOutLines;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPeriodIdChanging(int value);
    partial void OnPeriodIdChanged();
    partial void OnStockOutDateChanging(System.DateTime value);
    partial void OnStockOutDateChanged();
    partial void OnStockOutNumberChanging(string value);
    partial void OnStockOutNumberChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnPreparedByChanging(int value);
    partial void OnPreparedByChanged();
    partial void OnCheckedByChanging(int value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(int value);
    partial void OnApprovedByChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    #endregion
		
		public TrnStockOut()
		{
			this._TrnStockOutLines = new EntitySet<TrnStockOutLine>(new Action<TrnStockOutLine>(this.attach_TrnStockOutLines), new Action<TrnStockOutLine>(this.detach_TrnStockOutLines));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstPeriod = default(EntityRef<MstPeriod>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="Int NOT NULL")]
		public int PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockOutDate", DbType="DateTime NOT NULL")]
		public System.DateTime StockOutDate
		{
			get
			{
				return this._StockOutDate;
			}
			set
			{
				if ((this._StockOutDate != value))
				{
					this.OnStockOutDateChanging(value);
					this.SendPropertyChanging();
					this._StockOutDate = value;
					this.SendPropertyChanged("StockOutDate");
					this.OnStockOutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockOutNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StockOutNumber
		{
			get
			{
				return this._StockOutNumber;
			}
			set
			{
				if ((this._StockOutNumber != value))
				{
					this.OnStockOutNumberChanging(value);
					this.SendPropertyChanging();
					this._StockOutNumber = value;
					this.SendPropertyChanged("StockOutNumber");
					this.OnStockOutNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int NOT NULL")]
		public int PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="Int NOT NULL")]
		public int CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int NOT NULL")]
		public int ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockOut_TrnStockOutLine", Storage="_TrnStockOutLines", ThisKey="Id", OtherKey="StockOutId")]
		public EntitySet<TrnStockOutLine> TrnStockOutLines
		{
			get
			{
				return this._TrnStockOutLines;
			}
			set
			{
				this._TrnStockOutLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockOut_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="StockOutId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnStockOut", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.TrnStockOuts.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.TrnStockOuts.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnStockOut", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.TrnStockOuts.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.TrnStockOuts.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(int);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut", Storage="_MstUser", ThisKey="PreparedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnStockOuts.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnStockOuts.Add(this);
						this._PreparedBy = value.Id;
					}
					else
					{
						this._PreparedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut1", Storage="_MstUser1", ThisKey="CheckedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnStockOuts1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnStockOuts1.Add(this);
						this._CheckedBy = value.Id;
					}
					else
					{
						this._CheckedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut2", Storage="_MstUser2", ThisKey="ApprovedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnStockOuts2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnStockOuts2.Add(this);
						this._ApprovedBy = value.Id;
					}
					else
					{
						this._ApprovedBy = default(int);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut3", Storage="_MstUser3", ThisKey="EntryUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnStockOuts3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnStockOuts3.Add(this);
						this._EntryUserId = value.Id;
					}
					else
					{
						this._EntryUserId = default(int);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut4", Storage="_MstUser4", ThisKey="UpdateUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnStockOuts4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnStockOuts4.Add(this);
						this._UpdateUserId = value.Id;
					}
					else
					{
						this._UpdateUserId = default(int);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnStockOutLines(TrnStockOutLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockOut = this;
		}
		
		private void detach_TrnStockOutLines(TrnStockOutLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockOut = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockOut = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockOut = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnSalesLine")]
	public partial class TrnSalesLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SalesId;
		
		private int _ItemId;
		
		private int _UnitId;
		
		private decimal _Price;
		
		private int _DiscountId;
		
		private decimal _DiscountRate;
		
		private decimal _DiscountAmount;
		
		private decimal _NetPrice;
		
		private decimal _Quantity;
		
		private decimal _Amount;
		
		private int _TaxId;
		
		private decimal _TaxRate;
		
		private decimal _TaxAmount;
		
		private int _SalesAccountId;
		
		private int _AssetAccountId;
		
		private int _CostAccountId;
		
		private int _TaxAccountId;
		
		private System.DateTime _SalesLineTimeStamp;
		
		private System.Nullable<int> _UserId;
		
		private string _Preparation;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstAccount> _MstAccount1;
		
		private EntityRef<MstAccount> _MstAccount2;
		
		private EntityRef<MstAccount> _MstAccount3;
		
		private EntityRef<MstDiscount> _MstDiscount;
		
		private EntityRef<MstItem> _MstItem;
		
		private EntityRef<MstTax> _MstTax;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<TrnSale> _TrnSale;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSalesIdChanging(int value);
    partial void OnSalesIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnDiscountIdChanging(int value);
    partial void OnDiscountIdChanged();
    partial void OnDiscountRateChanging(decimal value);
    partial void OnDiscountRateChanged();
    partial void OnDiscountAmountChanging(decimal value);
    partial void OnDiscountAmountChanged();
    partial void OnNetPriceChanging(decimal value);
    partial void OnNetPriceChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnTaxIdChanging(int value);
    partial void OnTaxIdChanged();
    partial void OnTaxRateChanging(decimal value);
    partial void OnTaxRateChanged();
    partial void OnTaxAmountChanging(decimal value);
    partial void OnTaxAmountChanged();
    partial void OnSalesAccountIdChanging(int value);
    partial void OnSalesAccountIdChanged();
    partial void OnAssetAccountIdChanging(int value);
    partial void OnAssetAccountIdChanged();
    partial void OnCostAccountIdChanging(int value);
    partial void OnCostAccountIdChanged();
    partial void OnTaxAccountIdChanging(int value);
    partial void OnTaxAccountIdChanged();
    partial void OnSalesLineTimeStampChanging(System.DateTime value);
    partial void OnSalesLineTimeStampChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnPreparationChanging(string value);
    partial void OnPreparationChanged();
    #endregion
		
		public TrnSalesLine()
		{
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstAccount1 = default(EntityRef<MstAccount>);
			this._MstAccount2 = default(EntityRef<MstAccount>);
			this._MstAccount3 = default(EntityRef<MstAccount>);
			this._MstDiscount = default(EntityRef<MstDiscount>);
			this._MstItem = default(EntityRef<MstItem>);
			this._MstTax = default(EntityRef<MstTax>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._MstUser = default(EntityRef<MstUser>);
			this._TrnSale = default(EntityRef<TrnSale>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesId", DbType="Int NOT NULL")]
		public int SalesId
		{
			get
			{
				return this._SalesId;
			}
			set
			{
				if ((this._SalesId != value))
				{
					if (this._TrnSale.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesIdChanging(value);
					this.SendPropertyChanging();
					this._SalesId = value;
					this.SendPropertyChanged("SalesId");
					this.OnSalesIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,5) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountId", DbType="Int NOT NULL")]
		public int DiscountId
		{
			get
			{
				return this._DiscountId;
			}
			set
			{
				if ((this._DiscountId != value))
				{
					if (this._MstDiscount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscountIdChanging(value);
					this.SendPropertyChanging();
					this._DiscountId = value;
					this.SendPropertyChanged("DiscountId");
					this.OnDiscountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal DiscountRate
		{
			get
			{
				return this._DiscountRate;
			}
			set
			{
				if ((this._DiscountRate != value))
				{
					this.OnDiscountRateChanging(value);
					this.SendPropertyChanging();
					this._DiscountRate = value;
					this.SendPropertyChanged("DiscountRate");
					this.OnDiscountRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this.OnDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._DiscountAmount = value;
					this.SendPropertyChanged("DiscountAmount");
					this.OnDiscountAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetPrice", DbType="Decimal(18,5) NOT NULL")]
		public decimal NetPrice
		{
			get
			{
				return this._NetPrice;
			}
			set
			{
				if ((this._NetPrice != value))
				{
					this.OnNetPriceChanging(value);
					this.SendPropertyChanging();
					this._NetPrice = value;
					this.SendPropertyChanged("NetPrice");
					this.OnNetPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxId", DbType="Int NOT NULL")]
		public int TaxId
		{
			get
			{
				return this._TaxId;
			}
			set
			{
				if ((this._TaxId != value))
				{
					if (this._MstTax.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaxIdChanging(value);
					this.SendPropertyChanging();
					this._TaxId = value;
					this.SendPropertyChanged("TaxId");
					this.OnTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this.OnTaxRateChanging(value);
					this.SendPropertyChanging();
					this._TaxRate = value;
					this.SendPropertyChanged("TaxRate");
					this.OnTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TaxAmount
		{
			get
			{
				return this._TaxAmount;
			}
			set
			{
				if ((this._TaxAmount != value))
				{
					this.OnTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._TaxAmount = value;
					this.SendPropertyChanged("TaxAmount");
					this.OnTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesAccountId", DbType="Int NOT NULL")]
		public int SalesAccountId
		{
			get
			{
				return this._SalesAccountId;
			}
			set
			{
				if ((this._SalesAccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesAccountIdChanging(value);
					this.SendPropertyChanging();
					this._SalesAccountId = value;
					this.SendPropertyChanged("SalesAccountId");
					this.OnSalesAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetAccountId", DbType="Int NOT NULL")]
		public int AssetAccountId
		{
			get
			{
				return this._AssetAccountId;
			}
			set
			{
				if ((this._AssetAccountId != value))
				{
					if (this._MstAccount1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssetAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AssetAccountId = value;
					this.SendPropertyChanged("AssetAccountId");
					this.OnAssetAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostAccountId", DbType="Int NOT NULL")]
		public int CostAccountId
		{
			get
			{
				return this._CostAccountId;
			}
			set
			{
				if ((this._CostAccountId != value))
				{
					if (this._MstAccount2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostAccountIdChanging(value);
					this.SendPropertyChanging();
					this._CostAccountId = value;
					this.SendPropertyChanged("CostAccountId");
					this.OnCostAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAccountId", DbType="Int NOT NULL")]
		public int TaxAccountId
		{
			get
			{
				return this._TaxAccountId;
			}
			set
			{
				if ((this._TaxAccountId != value))
				{
					if (this._MstAccount3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaxAccountIdChanging(value);
					this.SendPropertyChanging();
					this._TaxAccountId = value;
					this.SendPropertyChanged("TaxAccountId");
					this.OnTaxAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesLineTimeStamp", DbType="DateTime NOT NULL")]
		public System.DateTime SalesLineTimeStamp
		{
			get
			{
				return this._SalesLineTimeStamp;
			}
			set
			{
				if ((this._SalesLineTimeStamp != value))
				{
					this.OnSalesLineTimeStampChanging(value);
					this.SendPropertyChanging();
					this._SalesLineTimeStamp = value;
					this.SendPropertyChanged("SalesLineTimeStamp");
					this.OnSalesLineTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Preparation", DbType="VarChar(255)")]
		public string Preparation
		{
			get
			{
				return this._Preparation;
			}
			set
			{
				if ((this._Preparation != value))
				{
					this.OnPreparationChanging(value);
					this.SendPropertyChanging();
					this._Preparation = value;
					this.SendPropertyChanged("Preparation");
					this.OnPreparationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnSalesLine", Storage="_MstAccount", ThisKey="SalesAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.TrnSalesLines.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.TrnSalesLines.Add(this);
						this._SalesAccountId = value.Id;
					}
					else
					{
						this._SalesAccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnSalesLine1", Storage="_MstAccount1", ThisKey="AssetAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount1
		{
			get
			{
				return this._MstAccount1.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount1.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount1.Entity = null;
						previousValue.TrnSalesLines1.Remove(this);
					}
					this._MstAccount1.Entity = value;
					if ((value != null))
					{
						value.TrnSalesLines1.Add(this);
						this._AssetAccountId = value.Id;
					}
					else
					{
						this._AssetAccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnSalesLine2", Storage="_MstAccount2", ThisKey="CostAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount2
		{
			get
			{
				return this._MstAccount2.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount2.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount2.Entity = null;
						previousValue.TrnSalesLines2.Remove(this);
					}
					this._MstAccount2.Entity = value;
					if ((value != null))
					{
						value.TrnSalesLines2.Add(this);
						this._CostAccountId = value.Id;
					}
					else
					{
						this._CostAccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnSalesLine3", Storage="_MstAccount3", ThisKey="TaxAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount3
		{
			get
			{
				return this._MstAccount3.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount3.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount3.Entity = null;
						previousValue.TrnSalesLines3.Remove(this);
					}
					this._MstAccount3.Entity = value;
					if ((value != null))
					{
						value.TrnSalesLines3.Add(this);
						this._TaxAccountId = value.Id;
					}
					else
					{
						this._TaxAccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstDiscount_TrnSalesLine", Storage="_MstDiscount", ThisKey="DiscountId", OtherKey="Id", IsForeignKey=true)]
		public MstDiscount MstDiscount
		{
			get
			{
				return this._MstDiscount.Entity;
			}
			set
			{
				MstDiscount previousValue = this._MstDiscount.Entity;
				if (((previousValue != value) 
							|| (this._MstDiscount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstDiscount.Entity = null;
						previousValue.TrnSalesLines.Remove(this);
					}
					this._MstDiscount.Entity = value;
					if ((value != null))
					{
						value.TrnSalesLines.Add(this);
						this._DiscountId = value.Id;
					}
					else
					{
						this._DiscountId = default(int);
					}
					this.SendPropertyChanged("MstDiscount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstItem_TrnSalesLine", Storage="_MstItem", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public MstItem MstItem
		{
			get
			{
				return this._MstItem.Entity;
			}
			set
			{
				if ((this._MstItem.Entity != value))
				{
					this.SendPropertyChanging();
					this._MstItem.Entity = value;
					this.SendPropertyChanged("MstItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTax_TrnSalesLine", Storage="_MstTax", ThisKey="TaxId", OtherKey="Id", IsForeignKey=true)]
		public MstTax MstTax
		{
			get
			{
				return this._MstTax.Entity;
			}
			set
			{
				MstTax previousValue = this._MstTax.Entity;
				if (((previousValue != value) 
							|| (this._MstTax.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTax.Entity = null;
						previousValue.TrnSalesLines.Remove(this);
					}
					this._MstTax.Entity = value;
					if ((value != null))
					{
						value.TrnSalesLines.Add(this);
						this._TaxId = value.Id;
					}
					else
					{
						this._TaxId = default(int);
					}
					this.SendPropertyChanged("MstTax");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnSalesLine", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.TrnSalesLines.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnSalesLines.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesLine", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnSalesLines.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnSalesLines.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSale_TrnSalesLine", Storage="_TrnSale", ThisKey="SalesId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnSale TrnSale
		{
			get
			{
				return this._TrnSale.Entity;
			}
			set
			{
				TrnSale previousValue = this._TrnSale.Entity;
				if (((previousValue != value) 
							|| (this._TrnSale.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSale.Entity = null;
						previousValue.TrnSalesLines.Remove(this);
					}
					this._TrnSale.Entity = value;
					if ((value != null))
					{
						value.TrnSalesLines.Add(this);
						this._SalesId = value.Id;
					}
					else
					{
						this._SalesId = default(int);
					}
					this.SendPropertyChanged("TrnSale");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnSales")]
	public partial class TrnSale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _PeriodId;
		
		private System.DateTime _SalesDate;
		
		private string _SalesNumber;
		
		private string _ManualInvoiceNumber;
		
		private decimal _Amount;
		
		private System.Nullable<int> _TableId;
		
		private int _CustomerId;
		
		private int _AccountId;
		
		private int _TermId;
		
		private System.Nullable<int> _DiscountId;
		
		private string _SeniorCitizenId;
		
		private string _SeniorCitizenName;
		
		private System.Nullable<int> _SeniorCitizenAge;
		
		private string _Remarks;
		
		private int _SalesAgent;
		
		private int _TerminalId;
		
		private int _PreparedBy;
		
		private int _CheckedBy;
		
		private int _ApprovedBy;
		
		private bool _IsLocked;
		
		private bool _IsCancelled;
		
		private decimal _PaidAmount;
		
		private decimal _CreditAmount;
		
		private decimal _DebitAmount;
		
		private decimal _BalanceAmount;
		
		private int _EntryUserId;
		
		private System.DateTime _EntryDateTime;
		
		private int _UpdateUserId;
		
		private System.DateTime _UpdateDateTime;
		
		private System.Nullable<int> _Pax;
		
		private EntitySet<SysSalesLocked> _SysSalesLockeds;
		
		private EntitySet<TrnCollection> _TrnCollections;
		
		private EntitySet<TrnDebitCreditMemoLine> _TrnDebitCreditMemoLines;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntitySet<TrnSalesLine> _TrnSalesLines;
		
		private EntityRef<MstCustomer> _MstCustomer;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
		private EntityRef<MstTable> _MstTable;
		
		private EntityRef<MstTerm> _MstTerm;
		
		private EntityRef<MstTerminal> _MstTerminal;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
		private EntityRef<MstDiscount> _MstDiscount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPeriodIdChanging(int value);
    partial void OnPeriodIdChanged();
    partial void OnSalesDateChanging(System.DateTime value);
    partial void OnSalesDateChanged();
    partial void OnSalesNumberChanging(string value);
    partial void OnSalesNumberChanged();
    partial void OnManualInvoiceNumberChanging(string value);
    partial void OnManualInvoiceNumberChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnTableIdChanging(System.Nullable<int> value);
    partial void OnTableIdChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnTermIdChanging(int value);
    partial void OnTermIdChanged();
    partial void OnDiscountIdChanging(System.Nullable<int> value);
    partial void OnDiscountIdChanged();
    partial void OnSeniorCitizenIdChanging(string value);
    partial void OnSeniorCitizenIdChanged();
    partial void OnSeniorCitizenNameChanging(string value);
    partial void OnSeniorCitizenNameChanged();
    partial void OnSeniorCitizenAgeChanging(System.Nullable<int> value);
    partial void OnSeniorCitizenAgeChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnSalesAgentChanging(int value);
    partial void OnSalesAgentChanged();
    partial void OnTerminalIdChanging(int value);
    partial void OnTerminalIdChanged();
    partial void OnPreparedByChanging(int value);
    partial void OnPreparedByChanged();
    partial void OnCheckedByChanging(int value);
    partial void OnCheckedByChanged();
    partial void OnApprovedByChanging(int value);
    partial void OnApprovedByChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnIsCancelledChanging(bool value);
    partial void OnIsCancelledChanged();
    partial void OnPaidAmountChanging(decimal value);
    partial void OnPaidAmountChanged();
    partial void OnCreditAmountChanging(decimal value);
    partial void OnCreditAmountChanged();
    partial void OnDebitAmountChanging(decimal value);
    partial void OnDebitAmountChanged();
    partial void OnBalanceAmountChanging(decimal value);
    partial void OnBalanceAmountChanged();
    partial void OnEntryUserIdChanging(int value);
    partial void OnEntryUserIdChanged();
    partial void OnEntryDateTimeChanging(System.DateTime value);
    partial void OnEntryDateTimeChanged();
    partial void OnUpdateUserIdChanging(int value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateTimeChanging(System.DateTime value);
    partial void OnUpdateDateTimeChanged();
    partial void OnPaxChanging(System.Nullable<int> value);
    partial void OnPaxChanged();
    #endregion
		
		public TrnSale()
		{
			this._SysSalesLockeds = new EntitySet<SysSalesLocked>(new Action<SysSalesLocked>(this.attach_SysSalesLockeds), new Action<SysSalesLocked>(this.detach_SysSalesLockeds));
			this._TrnCollections = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections), new Action<TrnCollection>(this.detach_TrnCollections));
			this._TrnDebitCreditMemoLines = new EntitySet<TrnDebitCreditMemoLine>(new Action<TrnDebitCreditMemoLine>(this.attach_TrnDebitCreditMemoLines), new Action<TrnDebitCreditMemoLine>(this.detach_TrnDebitCreditMemoLines));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._TrnSalesLines = new EntitySet<TrnSalesLine>(new Action<TrnSalesLine>(this.attach_TrnSalesLines), new Action<TrnSalesLine>(this.detach_TrnSalesLines));
			this._MstCustomer = default(EntityRef<MstCustomer>);
			this._MstPeriod = default(EntityRef<MstPeriod>);
			this._MstTable = default(EntityRef<MstTable>);
			this._MstTerm = default(EntityRef<MstTerm>);
			this._MstTerminal = default(EntityRef<MstTerminal>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			this._MstDiscount = default(EntityRef<MstDiscount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="Int NOT NULL")]
		public int PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesDate", DbType="DateTime NOT NULL")]
		public System.DateTime SalesDate
		{
			get
			{
				return this._SalesDate;
			}
			set
			{
				if ((this._SalesDate != value))
				{
					this.OnSalesDateChanging(value);
					this.SendPropertyChanging();
					this._SalesDate = value;
					this.SendPropertyChanged("SalesDate");
					this.OnSalesDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SalesNumber
		{
			get
			{
				return this._SalesNumber;
			}
			set
			{
				if ((this._SalesNumber != value))
				{
					this.OnSalesNumberChanging(value);
					this.SendPropertyChanging();
					this._SalesNumber = value;
					this.SendPropertyChanged("SalesNumber");
					this.OnSalesNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualInvoiceNumber", DbType="NVarChar(50)")]
		public string ManualInvoiceNumber
		{
			get
			{
				return this._ManualInvoiceNumber;
			}
			set
			{
				if ((this._ManualInvoiceNumber != value))
				{
					this.OnManualInvoiceNumberChanging(value);
					this.SendPropertyChanging();
					this._ManualInvoiceNumber = value;
					this.SendPropertyChanged("ManualInvoiceNumber");
					this.OnManualInvoiceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableId", DbType="Int")]
		public System.Nullable<int> TableId
		{
			get
			{
				return this._TableId;
			}
			set
			{
				if ((this._TableId != value))
				{
					if (this._MstTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTableIdChanging(value);
					this.SendPropertyChanging();
					this._TableId = value;
					this.SendPropertyChanged("TableId");
					this.OnTableIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._MstCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="Int NOT NULL")]
		public int TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._MstTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountId", DbType="Int")]
		public System.Nullable<int> DiscountId
		{
			get
			{
				return this._DiscountId;
			}
			set
			{
				if ((this._DiscountId != value))
				{
					if (this._MstDiscount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscountIdChanging(value);
					this.SendPropertyChanging();
					this._DiscountId = value;
					this.SendPropertyChanged("DiscountId");
					this.OnDiscountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeniorCitizenId", DbType="NVarChar(50)")]
		public string SeniorCitizenId
		{
			get
			{
				return this._SeniorCitizenId;
			}
			set
			{
				if ((this._SeniorCitizenId != value))
				{
					this.OnSeniorCitizenIdChanging(value);
					this.SendPropertyChanging();
					this._SeniorCitizenId = value;
					this.SendPropertyChanged("SeniorCitizenId");
					this.OnSeniorCitizenIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeniorCitizenName", DbType="NVarChar(255)")]
		public string SeniorCitizenName
		{
			get
			{
				return this._SeniorCitizenName;
			}
			set
			{
				if ((this._SeniorCitizenName != value))
				{
					this.OnSeniorCitizenNameChanging(value);
					this.SendPropertyChanging();
					this._SeniorCitizenName = value;
					this.SendPropertyChanged("SeniorCitizenName");
					this.OnSeniorCitizenNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeniorCitizenAge", DbType="Int")]
		public System.Nullable<int> SeniorCitizenAge
		{
			get
			{
				return this._SeniorCitizenAge;
			}
			set
			{
				if ((this._SeniorCitizenAge != value))
				{
					this.OnSeniorCitizenAgeChanging(value);
					this.SendPropertyChanging();
					this._SeniorCitizenAge = value;
					this.SendPropertyChanged("SeniorCitizenAge");
					this.OnSeniorCitizenAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesAgent", DbType="Int NOT NULL")]
		public int SalesAgent
		{
			get
			{
				return this._SalesAgent;
			}
			set
			{
				if ((this._SalesAgent != value))
				{
					this.OnSalesAgentChanging(value);
					this.SendPropertyChanging();
					this._SalesAgent = value;
					this.SendPropertyChanged("SalesAgent");
					this.OnSalesAgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminalId", DbType="Int NOT NULL")]
		public int TerminalId
		{
			get
			{
				return this._TerminalId;
			}
			set
			{
				if ((this._TerminalId != value))
				{
					if (this._MstTerminal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTerminalIdChanging(value);
					this.SendPropertyChanging();
					this._TerminalId = value;
					this.SendPropertyChanged("TerminalId");
					this.OnTerminalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedBy", DbType="Int NOT NULL")]
		public int PreparedBy
		{
			get
			{
				return this._PreparedBy;
			}
			set
			{
				if ((this._PreparedBy != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByChanging(value);
					this.SendPropertyChanging();
					this._PreparedBy = value;
					this.SendPropertyChanged("PreparedBy");
					this.OnPreparedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedBy", DbType="Int NOT NULL")]
		public int CheckedBy
		{
			get
			{
				return this._CheckedBy;
			}
			set
			{
				if ((this._CheckedBy != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByChanging(value);
					this.SendPropertyChanging();
					this._CheckedBy = value;
					this.SendPropertyChanged("CheckedBy");
					this.OnCheckedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedBy", DbType="Int NOT NULL")]
		public int ApprovedBy
		{
			get
			{
				return this._ApprovedBy;
			}
			set
			{
				if ((this._ApprovedBy != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByChanging(value);
					this.SendPropertyChanging();
					this._ApprovedBy = value;
					this.SendPropertyChanged("ApprovedBy");
					this.OnApprovedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancelled", DbType="Bit NOT NULL")]
		public bool IsCancelled
		{
			get
			{
				return this._IsCancelled;
			}
			set
			{
				if ((this._IsCancelled != value))
				{
					this.OnIsCancelledChanging(value);
					this.SendPropertyChanging();
					this._IsCancelled = value;
					this.SendPropertyChanged("IsCancelled");
					this.OnIsCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal PaidAmount
		{
			get
			{
				return this._PaidAmount;
			}
			set
			{
				if ((this._PaidAmount != value))
				{
					this.OnPaidAmountChanging(value);
					this.SendPropertyChanging();
					this._PaidAmount = value;
					this.SendPropertyChanged("PaidAmount");
					this.OnPaidAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal CreditAmount
		{
			get
			{
				return this._CreditAmount;
			}
			set
			{
				if ((this._CreditAmount != value))
				{
					this.OnCreditAmountChanging(value);
					this.SendPropertyChanging();
					this._CreditAmount = value;
					this.SendPropertyChanged("CreditAmount");
					this.OnCreditAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebitAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal DebitAmount
		{
			get
			{
				return this._DebitAmount;
			}
			set
			{
				if ((this._DebitAmount != value))
				{
					this.OnDebitAmountChanging(value);
					this.SendPropertyChanging();
					this._DebitAmount = value;
					this.SendPropertyChanged("DebitAmount");
					this.OnDebitAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal BalanceAmount
		{
			get
			{
				return this._BalanceAmount;
			}
			set
			{
				if ((this._BalanceAmount != value))
				{
					this.OnBalanceAmountChanging(value);
					this.SendPropertyChanging();
					this._BalanceAmount = value;
					this.SendPropertyChanged("BalanceAmount");
					this.OnBalanceAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryUserId", DbType="Int NOT NULL")]
		public int EntryUserId
		{
			get
			{
				return this._EntryUserId;
			}
			set
			{
				if ((this._EntryUserId != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntryUserIdChanging(value);
					this.SendPropertyChanging();
					this._EntryUserId = value;
					this.SendPropertyChanged("EntryUserId");
					this.OnEntryUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDateTime
		{
			get
			{
				return this._EntryDateTime;
			}
			set
			{
				if ((this._EntryDateTime != value))
				{
					this.OnEntryDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EntryDateTime = value;
					this.SendPropertyChanged("EntryDateTime");
					this.OnEntryDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="Int NOT NULL")]
		public int UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDateTime
		{
			get
			{
				return this._UpdateDateTime;
			}
			set
			{
				if ((this._UpdateDateTime != value))
				{
					this.OnUpdateDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateDateTime = value;
					this.SendPropertyChanged("UpdateDateTime");
					this.OnUpdateDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pax", DbType="Int")]
		public System.Nullable<int> Pax
		{
			get
			{
				return this._Pax;
			}
			set
			{
				if ((this._Pax != value))
				{
					this.OnPaxChanging(value);
					this.SendPropertyChanging();
					this._Pax = value;
					this.SendPropertyChanged("Pax");
					this.OnPaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSale_SysSalesLocked", Storage="_SysSalesLockeds", ThisKey="Id", OtherKey="SalesId")]
		public EntitySet<SysSalesLocked> SysSalesLockeds
		{
			get
			{
				return this._SysSalesLockeds;
			}
			set
			{
				this._SysSalesLockeds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSale_TrnCollection", Storage="_TrnCollections", ThisKey="Id", OtherKey="SalesId")]
		public EntitySet<TrnCollection> TrnCollections
		{
			get
			{
				return this._TrnCollections;
			}
			set
			{
				this._TrnCollections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSale_TrnDebitCreditMemoLine", Storage="_TrnDebitCreditMemoLines", ThisKey="Id", OtherKey="SalesId")]
		public EntitySet<TrnDebitCreditMemoLine> TrnDebitCreditMemoLines
		{
			get
			{
				return this._TrnDebitCreditMemoLines;
			}
			set
			{
				this._TrnDebitCreditMemoLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSale_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="SalesId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSale_TrnSalesLine", Storage="_TrnSalesLines", ThisKey="Id", OtherKey="SalesId")]
		public EntitySet<TrnSalesLine> TrnSalesLines
		{
			get
			{
				return this._TrnSalesLines;
			}
			set
			{
				this._TrnSalesLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCustomer_TrnSale", Storage="_MstCustomer", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public MstCustomer MstCustomer
		{
			get
			{
				return this._MstCustomer.Entity;
			}
			set
			{
				MstCustomer previousValue = this._MstCustomer.Entity;
				if (((previousValue != value) 
							|| (this._MstCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstCustomer.Entity = null;
						previousValue.TrnSales.Remove(this);
					}
					this._MstCustomer.Entity = value;
					if ((value != null))
					{
						value.TrnSales.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("MstCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnSale", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.TrnSales.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.TrnSales.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(int);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTable_TrnSale", Storage="_MstTable", ThisKey="TableId", OtherKey="Id", IsForeignKey=true)]
		public MstTable MstTable
		{
			get
			{
				return this._MstTable.Entity;
			}
			set
			{
				MstTable previousValue = this._MstTable.Entity;
				if (((previousValue != value) 
							|| (this._MstTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTable.Entity = null;
						previousValue.TrnSales.Remove(this);
					}
					this._MstTable.Entity = value;
					if ((value != null))
					{
						value.TrnSales.Add(this);
						this._TableId = value.Id;
					}
					else
					{
						this._TableId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstTable");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_TrnSale", Storage="_MstTerm", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public MstTerm MstTerm
		{
			get
			{
				return this._MstTerm.Entity;
			}
			set
			{
				MstTerm previousValue = this._MstTerm.Entity;
				if (((previousValue != value) 
							|| (this._MstTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTerm.Entity = null;
						previousValue.TrnSales.Remove(this);
					}
					this._MstTerm.Entity = value;
					if ((value != null))
					{
						value.TrnSales.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(int);
					}
					this.SendPropertyChanged("MstTerm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerminal_TrnSale", Storage="_MstTerminal", ThisKey="TerminalId", OtherKey="Id", IsForeignKey=true)]
		public MstTerminal MstTerminal
		{
			get
			{
				return this._MstTerminal.Entity;
			}
			set
			{
				MstTerminal previousValue = this._MstTerminal.Entity;
				if (((previousValue != value) 
							|| (this._MstTerminal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTerminal.Entity = null;
						previousValue.TrnSales.Remove(this);
					}
					this._MstTerminal.Entity = value;
					if ((value != null))
					{
						value.TrnSales.Add(this);
						this._TerminalId = value.Id;
					}
					else
					{
						this._TerminalId = default(int);
					}
					this.SendPropertyChanged("MstTerminal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSale", Storage="_MstUser", ThisKey="PreparedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnSales.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnSales.Add(this);
						this._PreparedBy = value.Id;
					}
					else
					{
						this._PreparedBy = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSale1", Storage="_MstUser1", ThisKey="CheckedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnSales1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnSales1.Add(this);
						this._CheckedBy = value.Id;
					}
					else
					{
						this._CheckedBy = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSale2", Storage="_MstUser2", ThisKey="ApprovedBy", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnSales2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnSales2.Add(this);
						this._ApprovedBy = value.Id;
					}
					else
					{
						this._ApprovedBy = default(int);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSale3", Storage="_MstUser3", ThisKey="EntryUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnSales3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnSales3.Add(this);
						this._EntryUserId = value.Id;
					}
					else
					{
						this._EntryUserId = default(int);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSale4", Storage="_MstUser4", ThisKey="UpdateUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnSales4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnSales4.Add(this);
						this._UpdateUserId = value.Id;
					}
					else
					{
						this._UpdateUserId = default(int);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstDiscount_TrnSale", Storage="_MstDiscount", ThisKey="DiscountId", OtherKey="Id", IsForeignKey=true)]
		public MstDiscount MstDiscount
		{
			get
			{
				return this._MstDiscount.Entity;
			}
			set
			{
				MstDiscount previousValue = this._MstDiscount.Entity;
				if (((previousValue != value) 
							|| (this._MstDiscount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstDiscount.Entity = null;
						previousValue.TrnSales.Remove(this);
					}
					this._MstDiscount.Entity = value;
					if ((value != null))
					{
						value.TrnSales.Add(this);
						this._DiscountId = value.Id;
					}
					else
					{
						this._DiscountId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstDiscount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SysSalesLockeds(SysSalesLocked entity)
		{
			this.SendPropertyChanging();
			entity.TrnSale = this;
		}
		
		private void detach_SysSalesLockeds(SysSalesLocked entity)
		{
			this.SendPropertyChanging();
			entity.TrnSale = null;
		}
		
		private void attach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.TrnSale = this;
		}
		
		private void detach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.TrnSale = null;
		}
		
		private void attach_TrnDebitCreditMemoLines(TrnDebitCreditMemoLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnSale = this;
		}
		
		private void detach_TrnDebitCreditMemoLines(TrnDebitCreditMemoLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnSale = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnSale = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnSale = null;
		}
		
		private void attach_TrnSalesLines(TrnSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnSale = this;
		}
		
		private void detach_TrnSalesLines(TrnSalesLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnSale = null;
		}
	}
}
#pragma warning restore 1591
